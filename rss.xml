<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>豌豆荚博客</title>
  
  
  <link href="http://lehoon.cn/rss.xml" rel="self"/>
  
  <link href="http://lehoon.cn/"/>
  <updated>2023-12-14T01:39:55.605Z</updated>
  <id>http://lehoon.cn/</id>
  
  <author>
    <name>lehoon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SecureCRT会话tab显示内容修改</title>
    <link href="http://lehoon.cn/%E5%B7%A5%E5%85%B7/2023/12/14/securecrt-session-tab-options.html"/>
    <id>http://lehoon.cn/%E5%B7%A5%E5%85%B7/2023/12/14/securecrt-session-tab-options.html</id>
    <published>2023-12-14T01:31:06.000Z</published>
    <updated>2023-12-14T01:39:55.605Z</updated>
    
    <content type="html"><![CDATA[<p>SecureCRT8.5.3新建linux session后tab显示内容修改,默认根据切换目录指令动态修改tab显示内容，修改成默认显示新建session的session名称。</p><span id="more"></span><h1 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h1><ol><li>在 SecureCRT 中，连接到你的主机。</li><li>在连接的 SecureCRT 窗口中，右键点击标签页。</li><li>选择 “Session Options”（会话选项）。</li><li>在弹出的 “Session Options” 窗口中，寻找 “Terminal” 选项。</li><li>在 “Emulation” 选项下，Terminal终端选择Linux选项,默认应该是xterm。<br>请注意，确保保存了所做的更改，然后关闭并重新打开 SecureCRT 连接，以确保更改生效。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;SecureCRT8.5.3新建linux session后tab显示内容修改,默认根据切换目录指令动态修改tab显示内容，修改成默认显示新建session的session名称。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="http://lehoon.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="SecureCRT" scheme="http://lehoon.cn/tags/SecureCRT/"/>
    
    <category term="8.5.3" scheme="http://lehoon.cn/tags/8-5-3/"/>
    
    <category term="tab设置" scheme="http://lehoon.cn/tags/tab%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>window编译crashpad库</title>
    <link href="http://lehoon.cn/backend/2023/06/25/window-crashpad-build-note.html"/>
    <id>http://lehoon.cn/backend/2023/06/25/window-crashpad-build-note.html</id>
    <published>2023-06-25T07:01:17.000Z</published>
    <updated>2023-08-03T06:27:45.860Z</updated>
    
    <content type="html"><![CDATA[<p>记录在win10编译crashpad过程。</p><span id="more"></span><h1 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h1><p><a href="https://chromium.googlesource.com/crashpad/crashpad/+/master/doc/developing.md">参考网址</a>  官方推荐使用depot_toos下载源码，因此本文使用depot_tools下载拉去crashpad源码。</p><h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><p>因为crashpad源码在外网上,默认不能访问,因此需要配置一个代理。<br>打开window控制台,设置代理信息</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">HTTP_PROXY</span>=http://127.0.0.1:8293</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">HTTPS_PROXY</span>=http://127.0.0.1:8293</span><br></pre></td></tr></table></figure><h2 id="下载depot-tools"><a href="#下载depot-tools" class="headerlink" title="下载depot_tools"></a>下载depot_tools</h2><p>下载depot_tools<a href="https://storage.googleapis.com/chrome-infra/depot_tools.zip">压缩包</a>, 或者使用git clone下来 git clone <a href="https://chromium.googlesource.com/chromium/tools/depot_tools.git">https://chromium.googlesource.com/chromium/tools/depot_tools.git</a><br>然后配置环境变量, 添加depot_tools目录到环境变量path中</p><h2 id="安装window-10-sdk"><a href="#安装window-10-sdk" class="headerlink" title="安装window 10 sdk"></a>安装window 10 sdk</h2><p>编译crashpad在window上需要window sdk, 当前在win10上编译crashpad需要最新window sdk版本为10.0.20348.0, <a href="https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/">下载网址</a>,下载完成安装。</p><h2 id="下载crashpd源码"><a href="#下载crashpd源码" class="headerlink" title="下载crashpd源码"></a>下载crashpd源码</h2><p>打开控制台,进入指定目录创建crashpd目录,然后进入crashpd目录后执行fetch crashpd获取crashpd源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> c:\home</span><br><span class="line"><span class="built_in">mkdir</span> crashpd</span><br><span class="line"><span class="built_in">cd</span> crashpd</span><br><span class="line">fetch crashpd</span><br></pre></td></tr></table></figure><h1 id="编译步骤"><a href="#编译步骤" class="headerlink" title="编译步骤"></a>编译步骤</h1><p>打开控制台,进入crashpd目录,使用gn生成编译文件</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line"><span class="built_in">cd</span> c:\home\crashpd\crashpd</span><br></pre></td></tr></table></figure><h2 id="编译32位crashpd程序"><a href="#编译32位crashpd程序" class="headerlink" title="编译32位crashpd程序"></a>编译32位crashpd程序</h2><p>通过gn生成编译环境后需要修改对应目录下的args.gn文件,修改对应的target_cpu类型（x86）</p><h3 id="编译debug版"><a href="#编译debug版" class="headerlink" title="编译debug版"></a>编译debug版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">gn args out/x86.debug</span><br><span class="line"><span class="comment">#执行完后需要修改args.gn文件,然后执行ninja编译</span></span><br><span class="line">=======================</span><br><span class="line">target_cpu=<span class="string">&quot;x86&quot;</span></span><br><span class="line">is_debug=<span class="literal">true</span></span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">修改toolchain.ninja文件</span><br><span class="line">修改rule cxx、rule cc规则</span><br><span class="line">增加/WX-参数</span><br><span class="line">rule cxx</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_cc&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_cc.pdb&quot;</span></span><br><span class="line">  description = CXX <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line">rule cc</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_c&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_c.pdb&quot;</span></span><br><span class="line">  description = CC <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ninja -C out\x86.debug</span><br></pre></td></tr></table></figure><h3 id="编译release版"><a href="#编译release版" class="headerlink" title="编译release版"></a>编译release版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">gn args out/x86.release</span><br><span class="line"><span class="comment">#执行完后需要修改args.gn文件,然后执行ninja编译</span></span><br><span class="line">=======================</span><br><span class="line">target_cpu=<span class="string">&quot;x86&quot;</span></span><br><span class="line">is_debug=<span class="literal">false</span></span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">修改toolchain.ninja文件</span><br><span class="line">修改rule cxx、rule cc规则</span><br><span class="line">增加/WX-参数</span><br><span class="line">rule cxx</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_cc&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_cc.pdb&quot;</span></span><br><span class="line">  description = CXX <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line">rule cc</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_c&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_c.pdb&quot;</span></span><br><span class="line">  description = CC <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line">  </span><br><span class="line">ninja -C out\x86.release</span><br></pre></td></tr></table></figure><h2 id="编译64位crashpd程序"><a href="#编译64位crashpd程序" class="headerlink" title="编译64位crashpd程序"></a>编译64位crashpd程序</h2><h3 id="编译debug版-1"><a href="#编译debug版-1" class="headerlink" title="编译debug版"></a>编译debug版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">gn args out/x64.debug</span><br><span class="line"><span class="comment">#执行完后需要修改args.gn文件,然后执行ninja编译</span></span><br><span class="line">=======================</span><br><span class="line">target_cpu=<span class="string">&quot;x64&quot;</span></span><br><span class="line">is_debug=<span class="literal">true</span></span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">修改toolchain.ninja文件</span><br><span class="line">修改rule cxx、rule cc规则</span><br><span class="line">增加/WX-参数</span><br><span class="line">rule cxx</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_cc&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_cc.pdb&quot;</span></span><br><span class="line">  description = CXX <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line">rule cc</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_c&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_c.pdb&quot;</span></span><br><span class="line">  description = CC <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line"></span><br><span class="line">ninja -C out\x64.debug</span><br></pre></td></tr></table></figure><h3 id="编译release版-1"><a href="#编译release版-1" class="headerlink" title="编译release版"></a>编译release版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">gn args out/x64.release</span><br><span class="line"><span class="comment">#执行完后需要修改args.gn文件,然后执行ninja编译</span></span><br><span class="line">=======================</span><br><span class="line">target_cpu=<span class="string">&quot;x64&quot;</span></span><br><span class="line">is_debug=<span class="literal">false</span></span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">修改toolchain.ninja文件</span><br><span class="line">修改rule cxx、rule cc规则</span><br><span class="line">增加/WX-参数</span><br><span class="line">rule cxx</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_cc&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_cc.pdb&quot;</span></span><br><span class="line">  description = CXX <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line">rule cc</span><br><span class="line">  <span class="built_in">command</span> = ninja -t msvc -e environment.x86 -- cl.exe /nologo /showIncludes <span class="variable">$&#123;defines&#125;</span> <span class="variable">$&#123;include_dirs&#125;</span> <span class="variable">$&#123;cflags&#125;</span> <span class="variable">$&#123;cflags_c&#125;</span> /WX- /c <span class="variable">$&#123;in&#125;</span> /Fo<span class="variable">$&#123;out&#125;</span> /Fd<span class="string">&quot;<span class="variable">$&#123;target_out_dir&#125;</span>/<span class="variable">$&#123;label_name&#125;</span>_c.pdb&quot;</span></span><br><span class="line">  description = CC <span class="variable">$&#123;out&#125;</span></span><br><span class="line">  deps = msvc</span><br><span class="line"></span><br><span class="line">ninja -C out\x64.release</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录在win10编译crashpad过程。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="编译" scheme="http://lehoon.cn/tags/%E7%BC%96%E8%AF%91/"/>
    
    <category term="win10" scheme="http://lehoon.cn/tags/win10/"/>
    
    <category term="crashpad" scheme="http://lehoon.cn/tags/crashpad/"/>
    
    <category term="minidump" scheme="http://lehoon.cn/tags/minidump/"/>
    
  </entry>
  
  <entry>
    <title>chrome源码编译笔记</title>
    <link href="http://lehoon.cn/backend/2022/11/24/chrome-source-build-note.html"/>
    <id>http://lehoon.cn/backend/2022/11/24/chrome-source-build-note.html</id>
    <published>2022-11-24T08:17:14.000Z</published>
    <updated>2023-06-25T06:08:58.998Z</updated>
    
    <content type="html"><![CDATA[<p>win10下载chrome源码编译过程</p><span id="more"></span><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h2><p>配置一个可用的http代理环境,设置代理服务器为127.0.0.1,端口为8293。</p><h2 id="depot-tools配置"><a href="#depot-tools配置" class="headerlink" title="depot_tools配置"></a>depot_tools配置</h2><p>下载depot_tools,  <a href="https://storage.googleapis.com/chrome-infra/depot_tools.zip">下载地址</a>, 下载后解压到c盘目录。</p><p>boto文件配置,路径 c:\home\tool\boto\boto.cfg</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Boto]</span></span><br><span class="line"><span class="attr">proxy</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">proxy_port</span> = <span class="number">8293</span></span><br></pre></td></tr></table></figure><p>depot_env.bat文件, 路径 c:\home\tools\depot_env.bat</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@rem &quot;解决NO_AUTH_BOTO_CONFIG错误&quot;</span></span><br><span class="line"><span class="built_in">set</span> NO_AUTH_BOTO_CONFIG=C:\home\tools\proxy\boto.cfg</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> HTTP_PROXY=http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8293</span></span><br><span class="line"><span class="built_in">set</span> HTTPS_PROXY=http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8293</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@rem 必须清空系统安装的其他python版本环境信息</span></span><br><span class="line"><span class="built_in">set</span> PYTHONHOME=</span><br><span class="line"><span class="built_in">set</span> PYTHONPATH=</span><br><span class="line"><span class="comment">@rem depot_tools路径必须放在其他python之前 否则在执行fetch gclient的时候报错</span></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=C:\home\depot_tools;<span class="variable">%path%</span></span><br><span class="line"><span class="comment">@rem 设置vs编译器环境变量</span></span><br><span class="line"><span class="built_in">set</span> vs_2019_install=C:\Program Files (x86)\Microsoft Visual Studio\<span class="number">2019</span>\Professional</span><br><span class="line"><span class="comment">@rem #告诉depot_tools使用本地的vs编译环境  否则默认使用google内部版本</span></span><br><span class="line"><span class="built_in">set</span> DEPOT_TOOLS_WIN_TOOLCHAIN=<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h1><h2 id="创建chrome文件夹"><a href="#创建chrome文件夹" class="headerlink" title="创建chrome文件夹"></a>创建chrome文件夹</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir d:\home\develop\source\google\chromium</span><br></pre></td></tr></table></figure><h2 id="拉取代码"><a href="#拉取代码" class="headerlink" title="拉取代码"></a>拉取代码</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> d:\home\develop\<span class="keyword">source</span>\google\chromium</span><br><span class="line">fetch --<span class="keyword">no</span>-<span class="keyword">history</span> chromium</span><br></pre></td></tr></table></figure><h2 id="同步代码"><a href="#同步代码" class="headerlink" title="同步代码"></a>同步代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> d:\home\develop\<span class="built_in">source</span>\google\chromium</span><br><span class="line">gclient <span class="built_in">sync</span> -v</span><br></pre></td></tr></table></figure><h1 id="编译代码"><a href="#编译代码" class="headerlink" title="编译代码"></a>编译代码</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="keyword">d</span>:\home\develop\source\google\chromium</span><br><span class="line"><span class="keyword">cd</span> src</span><br><span class="line">gn <span class="keyword">gen</span> <span class="keyword">out</span>/Default</span><br><span class="line">autoninja -C <span class="keyword">out</span>\Default chrome</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;win10下载chrome源码编译过程&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="chrome" scheme="http://lehoon.cn/tags/chrome/"/>
    
    <category term="depot_tools" scheme="http://lehoon.cn/tags/depot-tools/"/>
    
    <category term="google" scheme="http://lehoon.cn/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>海康摄像头截图实现</title>
    <link href="http://lehoon.cn/backend/2022/11/15/haikang-vedio-screenshot.html"/>
    <id>http://lehoon.cn/backend/2022/11/15/haikang-vedio-screenshot.html</id>
    <published>2022-11-15T01:57:41.000Z</published>
    <updated>2023-06-25T06:08:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>海康摄像头通过实时预览从视频流获取yv12帧数据后通过opencv转存jpeg格式数据。</p><span id="more"></span><h1 id="SDK下载"><a href="#SDK下载" class="headerlink" title="SDK下载"></a>SDK下载</h1><p><a href="https://open.hikvision.com/download/5cda567cf47ae80dd41a54b3?type=10">SDK下载地址</a>,打开网址选择对应开发平台的设备网络sdk和播放库sdk，播放库主要用于解码实时视频流获取每帧yv12数据。</p><h2 id="设备网络SDK下载"><a href="#设备网络SDK下载" class="headerlink" title="设备网络SDK下载"></a>设备网络SDK下载</h2><p>选择window平台64位版本的sdk，当前版本(SDK_Win64 V6.1.9.4_build20220412)点击下载。</p><ul><li><p>概述<br>设备网络SDK是基于设备私有网络通信协议开发的，为嵌入式网络硬盘录像机、NVR、网络摄像机、网络球机、视频服务器、解码器、报警主机、网络存储等产品服务的配套模块，用于远程访问和控制设备软件的二次开发。</p></li><li><p>设备网络SDK主要功能<br>图像预览, 文件回放和下载, 云台控制, 布防/撤防, 语音对讲, 日志管理, 解码卡, 远程升级, 远程重启/关闭, 格式化硬盘, 参数配置(系统配置, 通道配置, 串口配置, 报警配置, 用户配置), 多路解码器, 智能设备功能和获取设备能力集等。</p></li></ul><h2 id="播放库SDK下载"><a href="#播放库SDK下载" class="headerlink" title="播放库SDK下载"></a>播放库SDK下载</h2><p>选择window平台64位版本的sdk，当前版本(SDK_Win64 V7.3.9.50_build20210106)点击下载。</p><ul><li><p>概述<br>播放库SDK是我司网络硬盘录像机、视频服务器、IP设备等产品播放相关的二次开发包，适用于各系列编码产品录像文件和数据流的解码与播放。</p></li><li><p>播放库SDK主要功能<br>主要用于实时码流预览、录像文件回放、播放控制（如：暂停、单帧前进、单帧后退）、获取码流基本信息（如：创建文件索引、解码帧信息、分辨率、帧率）、支持JPG和BMP两种格式的播放截图等。</p></li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="初始化设备连接"><a href="#初始化设备连接" class="headerlink" title="初始化设备连接"></a>初始化设备连接</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> main<span class="literal">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">char</span> deviceIp<span class="literal">[<span class="number">16</span>]</span> = <span class="string">&quot;172.17.18.233&quot;</span>;</span><br><span class="line"><span class="built_in">char</span> username<span class="literal">[<span class="number">16</span>]</span> = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line"><span class="built_in">char</span> password<span class="literal">[<span class="number">16</span>]</span> = <span class="string">&quot;Effort@2022&quot;</span>;</span><br><span class="line"><span class="built_in">char</span> libPath<span class="literal">[<span class="number">256</span>]</span> = <span class="string">&quot;.\\lib&quot;</span>;</span><br><span class="line"></span><br><span class="line">auto logger = spdlog::daily<span class="constructor">_logger_mt(<span class="string">&quot;daily_logger&quot;</span>, <span class="string">&quot;../logs/play.log&quot;</span>, 2, 30)</span>;</span><br><span class="line">spdlog::set<span class="constructor">_pattern(<span class="string">&quot;[%Y-%m-%d %T][thread %t][%l]%v&quot;</span>)</span>;</span><br><span class="line">spdlog::set<span class="constructor">_default_logger(<span class="params">logger</span>)</span>;</span><br><span class="line">spdlog::set<span class="constructor">_level(<span class="params">spdlog</span>::<span class="params">level</span>::<span class="params">debug</span>)</span>;</span><br><span class="line">spdlog::flush<span class="constructor">_on(<span class="params">spdlog</span>::<span class="params">level</span>::<span class="params">info</span>)</span>;</span><br><span class="line">spdlog::flush<span class="constructor">_every(<span class="params">std</span>::<span class="params">chrono</span>::<span class="params">seconds</span>(1)</span>);</span><br><span class="line"></span><br><span class="line">NET_DVR_DEVICEINFO_V40 deviceInfoTmp;</span><br><span class="line">memset(&amp;deviceInfoTmp, <span class="number">0</span>, sizeof(NET_DVR_DEVICEINFO_V30));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">NET_DVR_SetSDKInitCfg(NET_SDK_INIT_CFG_SDK_PATH, <span class="params">libPath</span>)</span>) &#123;</span><br><span class="line">DWORD errCode = <span class="constructor">NET_DVR_GetLastError()</span>;</span><br><span class="line">spdlog::error(<span class="string">&quot;设置海康sdk路径失败, code=&#123;&#125;, message=&#123;&#125;&quot;</span>, errCode, <span class="constructor">NET_DVR_GetErrorMsg((LONG<span class="operator">*</span>)</span>&amp;errCode));</span><br><span class="line">return FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">NET_DVR_Init()</span>) &#123;</span><br><span class="line">DWORD errCode = <span class="constructor">NET_DVR_GetLastError()</span>;</span><br><span class="line">spdlog::error(<span class="string">&quot;初始化海康dvr环境失败, code=&#123;&#125;, message=&#123;&#125;&quot;</span>, errCode, <span class="constructor">NET_DVR_GetErrorMsg((LONG<span class="operator">*</span>)</span>&amp;errCode));</span><br><span class="line">return FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置连接超时时间</span></span><br><span class="line"><span class="constructor">NET_DVR_SetConnectTime(3000, 5)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置设备异常处理函数</span></span><br><span class="line"><span class="constructor">NET_DVR_SetExceptionCallBack_V30(WM_NULL, NULL, <span class="params">g_ExceptionCallBack</span>, NULL)</span>;</span><br><span class="line">NET_DVR_USER_LOGIN_INFO struLoginInfo = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">struLoginInfo.wPort = <span class="number">8000</span>;</span><br><span class="line">strcpy<span class="constructor">_s(<span class="params">struLoginInfo</span>.<span class="params">sUserName</span>, <span class="params">username</span>)</span>;</span><br><span class="line">strcpy<span class="constructor">_s(<span class="params">struLoginInfo</span>.<span class="params">sPassword</span>, <span class="params">password</span>)</span>;</span><br><span class="line">strcpy<span class="constructor">_s(<span class="params">struLoginInfo</span>.<span class="params">sDeviceAddress</span>, <span class="params">deviceIp</span>)</span>;</span><br><span class="line"></span><br><span class="line">LONG lLoginID = <span class="constructor">NET_DVR_Login_V40(&amp;<span class="params">struLoginInfo</span>, &amp;<span class="params">deviceInfoTmp</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (lLoginID<span class="operator"> == </span>-<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">DWORD errCode = <span class="constructor">NET_DVR_GetLastError()</span>;</span><br><span class="line">spdlog::error(<span class="string">&quot;连接nvr设备失败, code=&#123;&#125;, message=&#123;&#125;&quot;</span>, errCode, <span class="constructor">NET_DVR_GetErrorMsg((LONG<span class="operator">*</span>)</span>&amp;errCode));</span><br><span class="line"><span class="constructor">NET_DVR_Cleanup()</span>;</span><br><span class="line">return FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;loginId:&quot;</span> &lt;&lt; lLoginID &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">NET_DVR_JPEGPARA jpegParam;</span><br><span class="line">jpegParam.wPicQuality = <span class="number">0</span>;</span><br><span class="line">jpegParam.wPicSize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取控制台窗口句柄</span></span><br><span class="line">HMODULE hKernel32 = <span class="constructor">GetModuleHandle(L<span class="string">&quot;kernel32&quot;</span>)</span>;</span><br><span class="line">GetConsoleWindowAPI = (PROCGETCONSOLEWINDOW)<span class="constructor">GetProcAddress(<span class="params">hKernel32</span>, <span class="string">&quot;GetConsoleWindow&quot;</span>)</span>;</span><br><span class="line">#<span class="keyword">if</span> <span class="number">1</span></span><br><span class="line"><span class="comment">//预览参数结构体</span></span><br><span class="line">NET_DVR_PREVIEWINFO previewInfo = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">previewInfo.lChannel = <span class="number">1</span>;          <span class="comment">//通道号</span></span><br><span class="line">previewInfo.dwStreamType = <span class="number">0</span>;      <span class="comment">//码流类型：0-主码流，1-子码流，2-三码流，3-虚拟码流，以此类推 </span></span><br><span class="line">previewInfo.dwLinkMode = <span class="number">0</span>;        <span class="comment">//连接方式：0- TCP方式，1- UDP方式，2- 多播方式，3- RTP方式，4- RTP/RTSP，5- RTP/HTTP，6- HRUDP（可靠传输） ，7- RTSP/HTTPS，8- NPQ </span></span><br><span class="line">previewInfo.hPlayWnd = NULL;       <span class="comment">//播放窗口的句柄，为NULL表示不解码显示。 </span></span><br><span class="line"><span class="comment">//previewInfo.hPlayWnd = GetConsoleWindowAPI();   //实时播放视频</span></span><br><span class="line"></span><br><span class="line">previewInfo.bBlocked = <span class="number">1</span>;          <span class="comment">//0- 非阻塞取流，1- 阻塞取流</span></span><br><span class="line">previewInfo.bPassbackRecord = <span class="number">0</span>;   <span class="comment">//是否启用录像回传：0-不启用录像回传，1-启用录像回传</span></span><br><span class="line">previewInfo.byPreviewMode = <span class="number">0</span>;     <span class="comment">//延迟预览模式：0- 正常预览，1- 延迟预览 </span></span><br><span class="line"><span class="comment">//previewInfo.byStreamID = ;       //流ID，为字母、数字和&quot;_&quot;的组合，lChannel为0xffffffff时启用此参数 </span></span><br><span class="line">previewInfo.byProtoType = <span class="number">0</span>; <span class="comment">//应用层取流协议：0- 私有协议，1- RTSP协议。主子码流支持的取流协议通过登录返回结构参数NET_DVR_DEVICEINFO_V30的byMainProto、bySubProto值得知</span></span><br><span class="line">previewInfo.byRes1 = <span class="number">0</span>;</span><br><span class="line">previewInfo.byVideoCodingType = <span class="number">0</span>; <span class="comment">//码流数据编解码类型：0- 通用编码数据，1- 热成像探测器产生的原始数据</span></span><br><span class="line">previewInfo.dwDisplayBufNum = <span class="number">6</span>;   <span class="comment">//播放库播放缓冲区最大缓冲帧数，取值范围：1、6（默认，自适应播放模式）、15，置0时默认为1 </span></span><br><span class="line">previewInfo.byNPQMode = <span class="number">1</span>;         <span class="comment">//NPQ模式：0- 直连模式，1-过流媒体模式 </span></span><br><span class="line">previewInfo.byRecvMetaData = <span class="literal">false</span>;</span><br><span class="line">previewInfo.byDataType = <span class="number">0</span>;        <span class="comment">//数据类型：0-码流数据，1-音频数据</span></span><br><span class="line">memset(previewInfo.byRes, <span class="number">0</span>, sizeof(previewInfo.byRes));</span><br><span class="line"></span><br><span class="line"><span class="comment">//实时预览函数</span></span><br><span class="line">LONG lRealPlayHandle = <span class="constructor">NET_DVR_RealPlay_V40(<span class="params">lLoginID</span>, &amp;<span class="params">previewInfo</span>, RealPlayV30Callback, NULL)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (lRealPlayHandle &lt; <span class="number">0</span>) &#123;</span><br><span class="line">DWORD errCode = <span class="constructor">NET_DVR_GetLastError()</span>;</span><br><span class="line">spdlog::error(<span class="string">&quot;海康设备实时预览启动失败, code=&#123;&#125;, message=&#123;&#125;&quot;</span>, errCode, <span class="constructor">NET_DVR_GetErrorMsg((LONG<span class="operator">*</span>)</span>&amp;errCode));</span><br><span class="line">goto endPoint;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="constructor">Sleep(5000)</span>;</span><br><span class="line"><span class="constructor">NET_DVR_StopRealPlay(<span class="params">lLoginID</span>)</span>;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">endPoint:</span><br><span class="line"><span class="comment">//释放播放库资源</span></span><br><span class="line"><span class="keyword">if</span> (lPort &gt; -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="constructor">PlayM4_Stop(<span class="params">lPort</span>)</span>;</span><br><span class="line"><span class="constructor">PlayM4_CloseStream(<span class="params">lPort</span>)</span>;</span><br><span class="line"><span class="constructor">PlayM4_FreePort(<span class="params">lPort</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="constructor">NET_DVR_Cleanup()</span>;</span><br><span class="line">spdlog::drop<span class="constructor">_all()</span>;</span><br><span class="line">spdlog::shutdown<span class="literal">()</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;Hello World!\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实时预览回调函数"><a href="#实时预览回调函数" class="headerlink" title="实时预览回调函数"></a>实时预览回调函数</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实时预览回调函数</span></span><br><span class="line">void CALLBACK <span class="constructor">RealPlayV30Callback(LONG <span class="params">lRealHandle</span>, DWORD <span class="params">dwDataType</span>, BYTE<span class="operator">*</span> <span class="params">pBuffer</span>, DWORD <span class="params">dwBufSize</span>, <span class="params">void</span><span class="operator">*</span> <span class="params">pUser</span>)</span> &#123;</span><br><span class="line">#<span class="keyword">if</span> <span class="number">1</span></span><br><span class="line">HWND hWnd = NULL;                     <span class="comment">//如果不需要显示视频 句柄需要传NULL,这样的话就只解码 不显示视频</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">HWND hWnd = <span class="constructor">GetConsoleWindowAPI()</span>;    <span class="comment">//控制台 窗口句柄</span></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">switch (dwDataType)</span><br><span class="line">&#123;</span><br><span class="line">case NET_DVR_SYSHEAD: <span class="comment">//系统头</span></span><br><span class="line"><span class="keyword">if</span> (lPort &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">break;  <span class="comment">//该通道取流之前已经获取到句柄，后续接口不需要再调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_GetPort(&amp;<span class="params">lPort</span>)</span>)  <span class="comment">//获取播放库未使用的通道号</span></span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//m_iPort = lPort; //第一次回调的是系统头，将获取的播放库port号赋值给全局port，</span></span><br><span class="line"><span class="comment">//下次回调数据时即使用此port号播放</span></span><br><span class="line"><span class="keyword">if</span> (dwBufSize &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_SetStreamOpenMode(<span class="params">lPort</span>, STREAME_REALTIME)</span>)  <span class="comment">//设置实时流播放模式</span></span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_OpenStream(<span class="params">lPort</span>, <span class="params">pBuffer</span>, <span class="params">dwBufSize</span>, 1024 <span class="operator">*</span> 1024)</span>) <span class="comment">//打开流接口</span></span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置解码回调函数</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_SetDecCallBack(<span class="params">lPort</span>, DecodeFrameCallback)</span>) &#123;</span><br><span class="line">spdlog::error(<span class="string">&quot;设置解码器回调函数DecodeFrameCallback失败.&quot;</span>);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_Play(<span class="params">lPort</span>, <span class="params">hWnd</span>)</span>) <span class="comment">//播放开始</span></span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">case NET_DVR_STREAMDATA:   <span class="comment">//码流数据</span></span><br><span class="line"><span class="keyword">if</span> (dwBufSize &gt; <span class="number">0</span><span class="operator"> &amp;&amp; </span>lPort != -<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_InputData(<span class="params">lPort</span>, <span class="params">pBuffer</span>, <span class="params">dwBufSize</span>)</span>)</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">default: <span class="comment">//其他数据</span></span><br><span class="line"><span class="keyword">if</span> (dwBufSize &gt; <span class="number">0</span><span class="operator"> &amp;&amp; </span>lPort != -<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="constructor">PlayM4_InputData(<span class="params">lPort</span>, <span class="params">pBuffer</span>, <span class="params">dwBufSize</span>)</span>)</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置解码回调函数"><a href="#设置解码回调函数" class="headerlink" title="设置解码回调函数"></a>设置解码回调函数</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">/只解码不显示抓图实现方式/</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span></span><br><span class="line">void CALLBACK DecodeFrameCallback(long nPort, char* pBuffer, long nSize, FRAME_INFO* pFrameInfo, long nReserved1, long nReserved2) &#123;</span><br><span class="line">spdlog::info(<span class="string">&quot;播放解码数据回调函数 nSize=&#123;&#125;,nWidth=&#123;&#125;,nHeight=&#123;&#125;,nStamp=&#123;&#125;,nType=&#123;&#125;&quot;</span>, nSize, pFrameInfo-&gt;nWidth, pFrameInfo-&gt;nHeight, pFrameInfo-&gt;nStamp, pFrameInfo-&gt;nType);</span><br><span class="line"></span><br><span class="line">switch (pFrameInfo-&gt;nType)</span><br><span class="line">&#123;</span><br><span class="line">case T_RGB32:</span><br><span class="line"><span class="regexp">//</span>视频数据，yv12格式</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case T_UYVY:</span><br><span class="line"><span class="regexp">//</span>视频数据，uyvy格式</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case T_YV12:</span><br><span class="line"><span class="regexp">//</span>视频数据。每个像素<span class="number">4</span>个字节，排列方式与位图相似，“B-G-R-<span class="number">0</span> …”，第一个像素位于图像左下角</span><br><span class="line"><span class="regexp">//</span>保存jpeg图像到磁盘</span><br><span class="line">&#123;</span><br><span class="line"><span class="regexp">//</span>获取yv12缓存转换成mat对象逻辑</span><br><span class="line">long time1 = clock();</span><br><span class="line">IplImage* pImgYCrCb = cvCreateImage(cvSize(pFrameInfo-&gt;nWidth, pFrameInfo-&gt;nHeight), <span class="number">8</span>, <span class="number">3</span>);<span class="regexp">//</span>得到图像的Y分量  </span><br><span class="line">yv12toYUV(pImgYCrCb-&gt;imageData, pBuffer, pFrameInfo-&gt;nWidth, pFrameInfo-&gt;nHeight, pImgYCrCb-&gt;widthStep);<span class="regexp">//</span>得到全部RGB图像</span><br><span class="line">spdlog::info(<span class="string">&quot;图片数据width=&#123;&#125;, height=&#123;&#125;, 行数=&#123;&#125;&quot;</span>, pFrameInfo-&gt;nWidth, pFrameInfo-&gt;nHeight, pImgYCrCb-&gt;widthStep);</span><br><span class="line">IplImage* pImg = cvCreateImage(cvSize(pFrameInfo-&gt;nWidth, pFrameInfo-&gt;nHeight), <span class="number">8</span>, <span class="number">3</span>);     <span class="regexp">//</span>rbg 图像</span><br><span class="line">cvCvtColor(pImgYCrCb, pImg, CV_YCrCb2RGB);</span><br><span class="line"><span class="regexp">//</span>拿到img对象 组装mat</span><br><span class="line">cv::Mat mat = cv::cvarrToMat(pImg, true);</span><br><span class="line">cvReleaseImage(&amp;pImgYCrCb);</span><br><span class="line">cvReleaseImage(&amp;pImg);</span><br><span class="line">long time2 = clock();</span><br><span class="line">spdlog::info(<span class="string">&quot;yv12转mat起始时间=&#123;&#125;,结束时间=&#123;&#125;,耗时&#123;&#125;&quot;</span>, time1, time2, time2 - time1);</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>使用imwrite保存jpeg文件</span><br><span class="line">char fileName[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">sprintf_s(fileName, <span class="string">&quot;../pic/%d_%d_%d.jpg&quot;</span>, pFrameInfo-&gt;nWidth, pFrameInfo-&gt;nHeight, pFrameInfo-&gt;nStamp);</span><br><span class="line">std::vector&lt;int&gt; compression_params;</span><br><span class="line">compression_params.push_back(cv::IMWRITE_JPEG_QUALITY);</span><br><span class="line">compression_params.push_back(<span class="number">98</span>);   <span class="regexp">//</span>jpeg压缩质量  <span class="number">0</span>-<span class="number">100</span> <span class="number">100</span>无压缩</span><br><span class="line">imwrite(fileName, mat, compression_params);</span><br><span class="line">spdlog::info(<span class="string">&quot;图片帧获取成功, 图像帧率=&#123;&#125;,图像帧数=&#123;&#125;&quot;</span>, pFrameInfo-&gt;nFrameRate, pFrameInfo-&gt;dwFrameNum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>需要把YV12转换错JPEG、bmp</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">case T_AUDIO16:</span><br><span class="line"><span class="regexp">//</span>音频数据</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">default:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="yv12转rbg"><a href="#yv12转rbg" class="headerlink" title="yv12转rbg"></a>yv12转rbg</h2><p><a href="https://blog.csdn.net/weixin_41064152/article/details/104097545">参考网址</a></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">yv12toYUV</span><span class="params">(<span class="type">char</span>* outYuv, <span class="type">char</span>* inYv12, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span> widthStep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> col, row;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> Y, U, V;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line"><span class="type">int</span> idx;</span><br><span class="line"><span class="keyword">for</span> (row = <span class="number">0</span>; row &lt; height; row++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (col = <span class="number">0</span>; col &lt; width; col++)</span><br><span class="line">&#123;</span><br><span class="line">tmp = (row / <span class="number">2</span>) * (width / <span class="number">2</span>) + (col / <span class="number">2</span>);</span><br><span class="line">Y = (<span class="type">unsigned</span> <span class="type">int</span>)inYv12[row * width + col];</span><br><span class="line">U = (<span class="type">unsigned</span> <span class="type">int</span>)inYv12[width * height + width * height / <span class="number">4</span> + tmp];</span><br><span class="line">V = (<span class="type">unsigned</span> <span class="type">int</span>)inYv12[width * height + tmp];</span><br><span class="line">outYuv[idx + col * <span class="number">3</span>] = Y;</span><br><span class="line">outYuv[idx + col * <span class="number">3</span> + <span class="number">1</span>] = U;</span><br><span class="line">outYuv[idx + col * <span class="number">3</span> + <span class="number">2</span>] = V;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;海康摄像头通过实时预览从视频流获取yv12帧数据后通过opencv转存jpeg格式数据。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="c++" scheme="http://lehoon.cn/tags/c/"/>
    
    <category term="HCNetSDK" scheme="http://lehoon.cn/tags/HCNetSDK/"/>
    
    <category term="截图" scheme="http://lehoon.cn/tags/%E6%88%AA%E5%9B%BE/"/>
    
    <category term="摄像头" scheme="http://lehoon.cn/tags/%E6%91%84%E5%83%8F%E5%A4%B4/"/>
    
    <category term="yv12" scheme="http://lehoon.cn/tags/yv12/"/>
    
    <category term="jpeg" scheme="http://lehoon.cn/tags/jpeg/"/>
    
  </entry>
  
  <entry>
    <title>java线程池任务取消注意点</title>
    <link href="http://lehoon.cn/backend/2022/10/19/java-threadpool-task-cancel.html"/>
    <id>http://lehoon.cn/backend/2022/10/19/java-threadpool-task-cancel.html</id>
    <published>2022-10-19T02:11:29.000Z</published>
    <updated>2023-06-25T06:08:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>java线程池提交一个任务后任务取消注意点。</p><span id="more"></span><p>在java中使用线程池场景非常多, 只要实现ExecutorService即可实现一个线程池,java中提供了几种实现,通过submit提交一个任务就行了。  有的时候需要在指定的时间点把提交的任务取消掉,线程池框架提供了一个cancel方法,但是在实践中发现有些需要注意点,任务实现接口后需要声明改方法抛出线程中断异常InterruptedException、有Thread.sleep()调用支持线程中断,否则cancel不起作用。</p><h1 id="api定义"><a href="#api定义" class="headerlink" title="api定义"></a>api定义</h1><h2 id="线程池定义"><a href="#线程池定义" class="headerlink" title="线程池定义"></a>线程池定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ExecutorService</span> <span class="keyword">extends</span> <span class="title class_">Executor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Initiates an orderly shutdown in which previously submitted</span></span><br><span class="line"><span class="comment">     * tasks are executed, but no new tasks will be accepted.</span></span><br><span class="line"><span class="comment">     * Invocation has no additional effect if already shut down.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;This method does not wait for previously submitted tasks to</span></span><br><span class="line"><span class="comment">     * complete execution.  Use &#123;<span class="doctag">@link</span> #awaitTermination awaitTermination&#125;</span></span><br><span class="line"><span class="comment">     * to do that.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SecurityException if a security manager exists and</span></span><br><span class="line"><span class="comment">     *         shutting down this ExecutorService may manipulate</span></span><br><span class="line"><span class="comment">     *         threads that the caller is not permitted to modify</span></span><br><span class="line"><span class="comment">     *         because it does not hold &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment">     *         java.lang.RuntimePermission&#125;&#123;<span class="doctag">@code</span> (&quot;modifyThread&quot;)&#125;,</span></span><br><span class="line"><span class="comment">     *         or the security manager&#x27;s &#123;<span class="doctag">@code</span> checkAccess&#125; method</span></span><br><span class="line"><span class="comment">     *         denies access.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">shutdown</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Attempts to stop all actively executing tasks, halts the</span></span><br><span class="line"><span class="comment">     * processing of waiting tasks, and returns a list of the tasks</span></span><br><span class="line"><span class="comment">     * that were awaiting execution.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;This method does not wait for actively executing tasks to</span></span><br><span class="line"><span class="comment">     * terminate.  Use &#123;<span class="doctag">@link</span> #awaitTermination awaitTermination&#125; to</span></span><br><span class="line"><span class="comment">     * do that.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;There are no guarantees beyond best-effort attempts to stop</span></span><br><span class="line"><span class="comment">     * processing actively executing tasks.  For example, typical</span></span><br><span class="line"><span class="comment">     * implementations will cancel via &#123;<span class="doctag">@link</span> Thread#interrupt&#125;, so any</span></span><br><span class="line"><span class="comment">     * task that fails to respond to interrupts may never terminate.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> list of tasks that never commenced execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SecurityException if a security manager exists and</span></span><br><span class="line"><span class="comment">     *         shutting down this ExecutorService may manipulate</span></span><br><span class="line"><span class="comment">     *         threads that the caller is not permitted to modify</span></span><br><span class="line"><span class="comment">     *         because it does not hold &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment">     *         java.lang.RuntimePermission&#125;&#123;<span class="doctag">@code</span> (&quot;modifyThread&quot;)&#125;,</span></span><br><span class="line"><span class="comment">     *         or the security manager&#x27;s &#123;<span class="doctag">@code</span> checkAccess&#125; method</span></span><br><span class="line"><span class="comment">     *         denies access.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Runnable&gt; <span class="title function_">shutdownNow</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns &#123;<span class="doctag">@code</span> true&#125; if this executor has been shut down.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this executor has been shut down</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isShutdown</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns &#123;<span class="doctag">@code</span> true&#125; if all tasks have completed following shut down.</span></span><br><span class="line"><span class="comment">     * Note that &#123;<span class="doctag">@code</span> isTerminated&#125; is never &#123;<span class="doctag">@code</span> true&#125; unless</span></span><br><span class="line"><span class="comment">     * either &#123;<span class="doctag">@code</span> shutdown&#125; or &#123;<span class="doctag">@code</span> shutdownNow&#125; was called first.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if all tasks have completed following shut down</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isTerminated</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Blocks until all tasks have completed execution after a shutdown</span></span><br><span class="line"><span class="comment">     * request, or the timeout occurs, or the current thread is</span></span><br><span class="line"><span class="comment">     * interrupted, whichever happens first.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this executor terminated and</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@code</span> false&#125; if the timeout elapsed before termination</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">awaitTermination</span><span class="params">(<span class="type">long</span> timeout, TimeUnit unit)</span></span><br><span class="line">        <span class="keyword">throws</span> InterruptedException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Submits a value-returning task for execution and returns a</span></span><br><span class="line"><span class="comment">     * Future representing the pending results of the task. The</span></span><br><span class="line"><span class="comment">     * Future&#x27;s &#123;<span class="doctag">@code</span> get&#125; method will return the task&#x27;s result upon</span></span><br><span class="line"><span class="comment">     * successful completion.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * If you would like to immediately block waiting</span></span><br><span class="line"><span class="comment">     * for a task, you can use constructions of the form</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> result = exec.submit(aCallable).get();&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Note: The &#123;<span class="doctag">@link</span> Executors&#125; class includes a set of methods</span></span><br><span class="line"><span class="comment">     * that can convert some other common closure-like objects,</span></span><br><span class="line"><span class="comment">     * for example, &#123;<span class="doctag">@link</span> java.security.PrivilegedAction&#125; to</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Callable&#125; form so they can be submitted.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task the task to submit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the task&#x27;s result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a Future representing pending completion of the task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if the task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if the task is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; Future&lt;T&gt; <span class="title function_">submit</span><span class="params">(Callable&lt;T&gt; task)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Submits a Runnable task for execution and returns a Future</span></span><br><span class="line"><span class="comment">     * representing that task. The Future&#x27;s &#123;<span class="doctag">@code</span> get&#125; method will</span></span><br><span class="line"><span class="comment">     * return the given result upon successful completion.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task the task to submit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> result the result to return</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a Future representing pending completion of the task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if the task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if the task is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; Future&lt;T&gt; <span class="title function_">submit</span><span class="params">(Runnable task, T result)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Submits a Runnable task for execution and returns a Future</span></span><br><span class="line"><span class="comment">     * representing that task. The Future&#x27;s &#123;<span class="doctag">@code</span> get&#125; method will</span></span><br><span class="line"><span class="comment">     * return &#123;<span class="doctag">@code</span> null&#125; upon &lt;em&gt;successful&lt;/em&gt; completion.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task the task to submit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a Future representing pending completion of the task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if the task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if the task is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Future&lt;?&gt; submit(Runnable task);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning a list of Futures holding</span></span><br><span class="line"><span class="comment">     * their status and results when all complete.</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Future#isDone&#125; is &#123;<span class="doctag">@code</span> true&#125; for each</span></span><br><span class="line"><span class="comment">     * element of the returned list.</span></span><br><span class="line"><span class="comment">     * Note that a &lt;em&gt;completed&lt;/em&gt; task could have</span></span><br><span class="line"><span class="comment">     * terminated either normally or by throwing an exception.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a list of Futures representing the tasks, in the same</span></span><br><span class="line"><span class="comment">     *         sequential order as produced by the iterator for the</span></span><br><span class="line"><span class="comment">     *         given task list, each of which has completed</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting, in</span></span><br><span class="line"><span class="comment">     *         which case unfinished tasks are cancelled</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks or any of its elements are &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if any task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; List&lt;Future&lt;T&gt;&gt; <span class="title function_">invokeAll</span><span class="params">(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks)</span></span><br><span class="line">        <span class="keyword">throws</span> InterruptedException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning a list of Futures holding</span></span><br><span class="line"><span class="comment">     * their status and results</span></span><br><span class="line"><span class="comment">     * when all complete or the timeout expires, whichever happens first.</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Future#isDone&#125; is &#123;<span class="doctag">@code</span> true&#125; for each</span></span><br><span class="line"><span class="comment">     * element of the returned list.</span></span><br><span class="line"><span class="comment">     * Upon return, tasks that have not completed are cancelled.</span></span><br><span class="line"><span class="comment">     * Note that a &lt;em&gt;completed&lt;/em&gt; task could have</span></span><br><span class="line"><span class="comment">     * terminated either normally or by throwing an exception.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a list of Futures representing the tasks, in the same</span></span><br><span class="line"><span class="comment">     *         sequential order as produced by the iterator for the</span></span><br><span class="line"><span class="comment">     *         given task list. If the operation did not time out,</span></span><br><span class="line"><span class="comment">     *         each task will have completed. If it did time out, some</span></span><br><span class="line"><span class="comment">     *         of these tasks will not have completed.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting, in</span></span><br><span class="line"><span class="comment">     *         which case unfinished tasks are cancelled</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks, any of its elements, or</span></span><br><span class="line"><span class="comment">     *         unit are &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if any task cannot be scheduled</span></span><br><span class="line"><span class="comment">     *         for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; List&lt;Future&lt;T&gt;&gt; <span class="title function_">invokeAll</span><span class="params">(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks,</span></span><br><span class="line"><span class="params">                                  <span class="type">long</span> timeout, TimeUnit unit)</span></span><br><span class="line">        <span class="keyword">throws</span> InterruptedException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning the result</span></span><br><span class="line"><span class="comment">     * of one that has completed successfully (i.e., without throwing</span></span><br><span class="line"><span class="comment">     * an exception), if any do. Upon normal or exceptional return,</span></span><br><span class="line"><span class="comment">     * tasks that have not completed are cancelled.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the result returned by one of the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks or any element task</span></span><br><span class="line"><span class="comment">     *         subject to execution is &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if tasks is empty</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ExecutionException if no task successfully completes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if tasks cannot be scheduled</span></span><br><span class="line"><span class="comment">     *         for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; T <span class="title function_">invokeAny</span><span class="params">(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks)</span></span><br><span class="line">        <span class="keyword">throws</span> InterruptedException, ExecutionException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning the result</span></span><br><span class="line"><span class="comment">     * of one that has completed successfully (i.e., without throwing</span></span><br><span class="line"><span class="comment">     * an exception), if any do before the given timeout elapses.</span></span><br><span class="line"><span class="comment">     * Upon normal or exceptional return, tasks that have not</span></span><br><span class="line"><span class="comment">     * completed are cancelled.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the result returned by one of the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks, or unit, or any element</span></span><br><span class="line"><span class="comment">     *         task subject to execution is &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TimeoutException if the given timeout elapses before</span></span><br><span class="line"><span class="comment">     *         any task successfully completes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ExecutionException if no task successfully completes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if tasks cannot be scheduled</span></span><br><span class="line"><span class="comment">     *         for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; T <span class="title function_">invokeAny</span><span class="params">(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks,</span></span><br><span class="line"><span class="params">                    <span class="type">long</span> timeout, TimeUnit unit)</span></span><br><span class="line">        <span class="keyword">throws</span> InterruptedException, ExecutionException, TimeoutException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="任务定义"><a href="#任务定义" class="headerlink" title="任务定义"></a>任务定义</h2><p>提交线程池的任务可以实现Runnable或者Callable接口,如果需要获取返回值的话就实现Callable,不需要的话就实现Runnable接口。</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * When an object implementing interface &lt;code&gt;Runnable&lt;/code&gt; is used</span></span><br><span class="line"><span class="comment">     * to create a thread, starting the thread causes the object&#x27;s</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;run&lt;/code&gt; method to be called in that separately executing</span></span><br><span class="line"><span class="comment">     * thread.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * The general contract of the method &lt;code&gt;run&lt;/code&gt; is that it may</span></span><br><span class="line"><span class="comment">     * take any action whatsoever.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.lang.Thread#run()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Callable</span>&lt;<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Computes a result, or throws an exception if unable to do so.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> computed result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception if unable to compute a result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">V <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Future定义"><a href="#Future定义" class="headerlink" title="Future定义"></a>Future定义</h2><p>需要提供cancel功能的话，需要线程池提交任务后返回一个Future对象,通过Future提供的cancel方法取消任务.</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Future</span>&lt;<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Attempts to cancel execution of this task.  This attempt will</span></span><br><span class="line"><span class="comment">     * fail if the task has already completed, has already been cancelled,</span></span><br><span class="line"><span class="comment">     * or could not be cancelled for some other reason. If successful,</span></span><br><span class="line"><span class="comment">     * and this task has not started when &#123;<span class="doctag">@code</span> cancel&#125; is called,</span></span><br><span class="line"><span class="comment">     * this task should never run.  If the task has already started,</span></span><br><span class="line"><span class="comment">     * then the &#123;<span class="doctag">@code</span> mayInterruptIfRunning&#125; parameter determines</span></span><br><span class="line"><span class="comment">     * whether the thread executing this task should be interrupted in</span></span><br><span class="line"><span class="comment">     * an attempt to stop the task.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;After this method returns, subsequent calls to &#123;<span class="doctag">@link</span> #isDone&#125; will</span></span><br><span class="line"><span class="comment">     * always return &#123;<span class="doctag">@code</span> true&#125;.  Subsequent calls to &#123;<span class="doctag">@link</span> #isCancelled&#125;</span></span><br><span class="line"><span class="comment">     * will always return &#123;<span class="doctag">@code</span> true&#125; if this method returned &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mayInterruptIfRunning &#123;<span class="doctag">@code</span> true&#125; if the thread executing this</span></span><br><span class="line"><span class="comment">     * task should be interrupted; otherwise, in-progress tasks are allowed</span></span><br><span class="line"><span class="comment">     * to complete</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> false&#125; if the task could not be cancelled,</span></span><br><span class="line"><span class="comment">     * typically because it has already completed normally;</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> true&#125; otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">cancel</span><span class="params">(<span class="keyword">boolean</span> mayInterruptIfRunning)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns &#123;<span class="doctag">@code</span> true&#125; if this task was cancelled before it completed</span></span><br><span class="line"><span class="comment">     * normally.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this task was cancelled before it completed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isCancelled</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns &#123;<span class="doctag">@code</span> true&#125; if this task completed.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Completion may be due to normal termination, an exception, or</span></span><br><span class="line"><span class="comment">     * cancellation -- in all of these cases, this method will return</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this task completed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isDone</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Waits if necessary for the computation to complete, and then</span></span><br><span class="line"><span class="comment">     * retrieves its result.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the computed result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> CancellationException if the computation was cancelled</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ExecutionException if the computation threw an</span></span><br><span class="line"><span class="comment">     * exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if the current thread was interrupted</span></span><br><span class="line"><span class="comment">     * while waiting</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">V <span class="title">get</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException, ExecutionException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Waits if necessary for at most the given time for the computation</span></span><br><span class="line"><span class="comment">     * to complete, and then retrieves its result, if available.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the computed result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> CancellationException if the computation was cancelled</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ExecutionException if the computation threw an</span></span><br><span class="line"><span class="comment">     * exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if the current thread was interrupted</span></span><br><span class="line"><span class="comment">     * while waiting</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TimeoutException if the wait timed out</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">V <span class="title">get</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException, ExecutionException, TimeoutException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h1><h2 id="线程池定义-1"><a href="#线程池定义-1" class="headerlink" title="线程池定义"></a>线程池定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> FinesysDataPlayBack <span class="title function_">finesysDataPlayBack</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">FinesysDataPlayBack</span> <span class="variable">finesysDataPlayBack</span> <span class="operator">=</span> FinesysDataPlayBack.getInstance();</span><br><span class="line">    finesysDataPlayBack.setPlayBackThreadPool(playbackExecutorService());</span><br><span class="line">    <span class="keyword">return</span> finesysDataPlayBack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> ExecutorService <span class="title function_">playbackExecutorService</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ThreadFactory</span> <span class="variable">threadFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadFactoryBuilder</span>().setNameFormat(<span class="string">&quot;playback-pool-%d&quot;</span>).build();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">16</span>,</span><br><span class="line">            <span class="number">1024</span>,</span><br><span class="line">            <span class="number">0L</span>,</span><br><span class="line">            TimeUnit.MILLISECONDS,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span>&lt;Runnable&gt;(<span class="number">4096</span>),</span><br><span class="line">            threadFactory,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.AbortPolicy());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="任务定义-1"><a href="#任务定义-1" class="headerlink" title="任务定义"></a>任务定义</h2><p>AbstractTask.java</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="symbol">AbstractTask</span> <span class="symbol">extends</span> <span class="symbol">Callable</span>&lt;<span class="symbol">String</span>&gt; &#123;</span><br><span class="line">    <span class="built_in">void</span> setTaskId(String taskId);</span><br><span class="line">    String taskId();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DataPlaybackWithSleepTask.java</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataPlaybackWithSleepTask</span> <span class="keyword">implements</span> <span class="title">AbstractTask</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String taskId;</span><br><span class="line">    <span class="keyword">private</span> IProducer producer;</span><br><span class="line">    <span class="keyword">private</span> IConsumer consumer;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sleepTimeout = <span class="number">30000</span>L;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataPlaybackWithSleepTask</span><span class="params">(IProducer producer, IConsumer consumer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(producer, consumer, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataPlaybackWithSleepTask</span><span class="params">(IProducer producer, IConsumer consumer, <span class="keyword">long</span> sleepTimeout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(consumer.instanceId(), producer, consumer, sleepTimeout);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataPlaybackWithSleepTask</span><span class="params">(String taskId, IProducer producer, IConsumer consumer, <span class="keyword">long</span> sleepTimeout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.taskId = taskId;</span><br><span class="line">        <span class="keyword">this</span>.producer = producer;</span><br><span class="line">        <span class="keyword">this</span>.consumer = consumer;</span><br><span class="line">        <span class="keyword">this</span>.sleepTimeout = sleepTimeout;</span><br><span class="line">        <span class="keyword">this</span>.consumer.producer(producer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (producer == <span class="keyword">null</span> || consumer == <span class="keyword">null</span>) &#123;</span><br><span class="line">            log.<span class="keyword">error</span>(<span class="string">&quot;[sleep task] producer或consumer为空, 任务未运行退出&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!producer.init()) &#123;</span><br><span class="line">            log.<span class="keyword">error</span>(<span class="string">&quot;[sleep task] producer.init失败, 任务未运行退出&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!consumer.init()) &#123;</span><br><span class="line">            log.<span class="keyword">error</span>(<span class="string">&quot;[sleep task] consumer.init失败, 任务未运行退出&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;playback sleep task begin sleep(&#123;&#125;)&quot;</span>, sleepTimeout);</span><br><span class="line">        Thread.sleep(sleepTimeout);</span><br><span class="line">        log.info(<span class="string">&quot;playback sleep task end sleep(&#123;&#125;)&quot;</span>, sleepTimeout);</span><br><span class="line">        consumer.beforeProcess();</span><br><span class="line">        consumer.process();</span><br><span class="line">        consumer.afterProcess();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setSleepTimeout</span><span class="params">(<span class="keyword">long</span> sleepTimeout)</span> </span>&#123;</span><br><span class="line">        sleepTimeout = Math.abs(sleepTimeout);</span><br><span class="line">        <span class="keyword">if</span> (sleepTimeout &lt; <span class="number">10000</span>L) sleepTimeout = <span class="number">10000</span>L;</span><br><span class="line">        <span class="keyword">if</span> (sleepTimeout &gt; Long.MAX_VALUE) sleepTimeout = <span class="number">10000</span>L;</span><br><span class="line">        <span class="keyword">this</span>.sleepTimeout = sleepTimeout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">(<span class="keyword">long</span> timeout)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(timeout);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">String <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        run();</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="title">taskId</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setTaskId</span><span class="params">(String taskId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.taskId = taskId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">String <span class="title">taskId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> taskId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="任务逻辑实现定义"><a href="#任务逻辑实现定义" class="headerlink" title="任务逻辑实现定义"></a>任务逻辑实现定义</h2><p>IConsumer.java</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IConsumer</span>&lt;<span class="title">T</span>&gt; &#123;</span><br><span class="line">    <span class="function">boolean <span class="title">init</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">beforeProcess</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">afterProcess</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">producer</span>(<span class="params">IProducer&lt;T&gt; producer</span>)</span>;</span><br><span class="line">    <span class="comment">//具体实现方法</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">process</span>() throws Exception</span>;</span><br><span class="line">    <span class="function">boolean <span class="title">workDone</span>()</span>;</span><br><span class="line">    <span class="function">String <span class="title">instanceId</span>()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类AbstractPlayBackSendEvent2ApamaConsumer.java</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">public abstract class AbstractPlayBackSendEvent2ApamaConsumer implements IConsumer&lt;DepthModel&gt; &#123;</span><br><span class="line">    protected PlaybackContext playbackContext = new PlaybackContext();</span><br><span class="line">    protected IProducer&lt;DepthModel&gt; producer;</span><br><span class="line"></span><br><span class="line">    protected AbstractPlayBackSendEvent2ApamaConsumer() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public AbstractPlayBackSendEvent2ApamaConsumer(String serviceId,</span><br><span class="line">                                                   String instanceId,</span><br><span class="line">                                                   String backReqId,</span><br><span class="line">                                                   String channelKey,</span><br><span class="line">                                                   <span class="keyword">int</span> playbackRate) &#123;</span><br><span class="line">        this.serviceId = serviceId;</span><br><span class="line">        this.instanceId = instanceId;</span><br><span class="line">        this.backReqId = backReqId;</span><br><span class="line">        this.channelKey = channelKey;</span><br><span class="line">        this.playbackRate = Math.abs(playbackRate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void producer(IProducer&lt;DepthModel&gt; producer) &#123;</span><br><span class="line">        this.producer = producer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process() throws Exception &#123;</span><br><span class="line">        final Date beginTime = DateUtils.formatDepthPlaybackDate1(producer.beginTime()),</span><br><span class="line">            endTime = DateUtils.formatDepthPlaybackDate1(producer.endTime());</span><br><span class="line"></span><br><span class="line">        long subDays = DateUtils.subDateTime(beginTime, endTime);</span><br><span class="line">        <span class="keyword">if</span> (subDays == <span class="number">0</span>) subDays = <span class="number">1</span>;</span><br><span class="line">        subDays += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> <span class="function"><span class="keyword">sub</span> = 0</span>; <span class="function"><span class="keyword">sub</span> &lt; <span class="title">subDays</span></span>; <span class="function"><span class="keyword">sub</span>++) </span>&#123;</span><br><span class="line">            Date beginDate = DateUtils.getMarketBegineTime(beginTime, <span class="function"><span class="keyword">sub</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (DateUtils.isWorkOutDay(beginDate)) <span class="keyword">continue</span>;</span><br><span class="line">            Date endDate = DateUtils.getMarketEndTime(beginDate);</span><br><span class="line">            playbackContext.resetDepthMap();</span><br><span class="line"></span><br><span class="line">            try &#123;</span><br><span class="line">                ((EsPlaybackOnceDayProducer) producer).setMarketTime(beginDate, endDate);</span><br><span class="line">            &#125; catch (EsReaderException e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;查询当日行情数据失败&quot;</span>, e);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;[%s]日待回放行情数据量[%d]&quot;</span>, DateUtils.formatSdfDay(beginDate),</span><br><span class="line">                    producer.totalCount()));</span><br><span class="line">            <span class="keyword">if</span> (producer.totalCount() == 0L) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (producer.hasNext()) &#123;</span><br><span class="line">                List&lt;DepthModel&gt; dataList = null;</span><br><span class="line">                try &#123;</span><br><span class="line">                    dataList = producer.next();</span><br><span class="line">                &#125; catch (EsReaderException e) &#123;</span><br><span class="line">                    log.error(<span class="string">&quot;es查询数据失败&quot;</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dataList == null || dataList.isEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                consumerCount.addAndGet(dataList.size());</span><br><span class="line">                consumerDailyCount.addAndGet(dataList.size());</span><br><span class="line">                <span class="regexp">//l</span>og.info(String.format(<span class="string">&quot;开始回放数据,本次回放条数%d&quot;</span>, dataList.size()));</span><br><span class="line">                <span class="keyword">for</span> (DepthModel depth : dataList) &#123;</span><br><span class="line">                    playbackContext.decrementCurrentWaitSendCount();</span><br><span class="line">                    <span class="regexp">//l</span>ogger.info(String.format(<span class="string">&quot;当前处理行情数据[%s]&quot;</span>, depth.toString()));</span><br><span class="line">                    currentCreated = depth.getCreated().getTime();</span><br><span class="line">                    <span class="keyword">if</span> (lastCreated == 0L) lastCreated = currentCreated;</span><br><span class="line">                    subTime = currentCreated - lastCreated;</span><br><span class="line">                    lastCreated = currentCreated;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (subTime &gt; oneSecond &amp;&amp; playbackRate &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        long sleepTimeout = subTime / playbackRate;</span><br><span class="line">                        log.info(String.format(<span class="string">&quot;上次行情时间[%d],本次行情时间[%d],回放速率[%d],本次行情需要延迟[%d]毫秒&quot;</span>,</span><br><span class="line">                                lastCreated, currentCreated, playbackRate, sleepTimeout));</span><br><span class="line">                        Thread.sleep(sleepTimeout);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    //发送行情数据</span><br><span class="line">                    log.info(String.format(<span class="string">&quot;当前处理行情数据%s&quot;</span>, depth.toString()));</span><br><span class="line">                    isLastOne = isLastOne(depth);</span><br><span class="line">                    isTodayLastOne = isTodayLastOne(depth);</span><br><span class="line">                    <span class="keyword">send</span>(depth);</span><br><span class="line">                    update(depth);</span><br><span class="line">                    resetPlaybackContext();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;[%s]日期行情回放完毕,本次共回放[%d]条数据,[%s]&quot;</span>,</span><br><span class="line">                    DateUtils.formatSdfDay(beginDate),</span><br><span class="line">                    consumerDailyCount.get(), requestInfo()));</span><br><span class="line"></span><br><span class="line">            consumerDailyCount.set(0L);</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            <span class="regexp">//</span>发送日结信息</span><br><span class="line">            sendDailySettlementEvent(beginDate);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="提交任务"><a href="#提交任务" class="headerlink" title="提交任务"></a>提交任务</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> boolean submitTask(IProducer producer, IConsumer consumer) &#123;</span><br><span class="line">    <span class="keyword">if</span> (playBackThreadPool == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (producer == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (consumer == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    PLAYBACK_TASK_LOCK.lock();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        AbstractTask playbackTask = new DataPlaybackWithSleepTask(producer, consumer, <span class="number">30000L</span>);</span><br><span class="line">        Future&lt;String&gt; futureTask = playBackThreadPool.submit(playbackTask);</span><br><span class="line">        PLAYBACK_TASK_MAP.put(playbackTask.taskId(), futureTask);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RejectedExecutionException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        PLAYBACK_TASK_LOCK.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取消任务"><a href="#取消任务" class="headerlink" title="取消任务"></a>取消任务</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelTask</span>(<span class="params">String taskId</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (taskId == <span class="literal">null</span> || taskId.length() == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    PLAYBACK_TASK_LOCK.<span class="keyword">lock</span>();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!PLAYBACK_TASK_MAP.containsKey(taskId)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;取消回放任务,当前没有带取消的taskid任务对象&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Future&lt;String&gt; futureTask = PLAYBACK_TASK_MAP.<span class="keyword">get</span>(taskId);</span><br><span class="line">        <span class="keyword">if</span> (!futureTask.isDone()) &#123;</span><br><span class="line">            futureTask.cancel(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        PLAYBACK_TASK_MAP.<span class="keyword">remove</span>(taskId);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        PLAYBACK_TASK_LOCK.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;java线程池提交一个任务后任务取消注意点。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="java" scheme="http://lehoon.cn/tags/java/"/>
    
    <category term="threadpool" scheme="http://lehoon.cn/tags/threadpool/"/>
    
    <category term="任务取消" scheme="http://lehoon.cn/tags/%E4%BB%BB%E5%8A%A1%E5%8F%96%E6%B6%88/"/>
    
    <category term="线程池" scheme="http://lehoon.cn/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>c++嵌入v8参数传递及返回值获取</title>
    <link href="http://lehoon.cn/backend/2022/10/17/c-embedded-v8-args.html"/>
    <id>http://lehoon.cn/backend/2022/10/17/c-embedded-v8-args.html</id>
    <published>2022-10-17T02:23:46.000Z</published>
    <updated>2023-06-25T06:08:58.998Z</updated>
    
    <content type="html"><![CDATA[<p>c++嵌入v8参数传递及获取返回值</p><span id="more"></span><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><p>嵌入v8函数调用传递参数有2种方式,一种是全局参数放在global context中, 直接可以使用变量名; 另外一种是给函数传递参数属于当前context参数作用域.</p><h2 id="全局参数"><a href="#全局参数" class="headerlink" title="全局参数"></a>全局参数</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//组装请求数据context全局变量</span></span><br><span class="line">static v8::Local&lt;v8::ObjectTemplate&gt; <span class="constructor">CreateGetLevelCountGlobalObject(<span class="params">v8</span>::Isolate<span class="operator">*</span> <span class="params">isolate</span>, <span class="params">const</span> PaymentUserInfo&amp; <span class="params">userInfo</span>)</span> &#123;</span><br><span class="line">v8::Local&lt;v8::ObjectTemplate&gt; global_object = v8::ObjectTemplate::<span class="constructor">New(<span class="params">isolate</span>)</span>;</span><br><span class="line"><span class="comment">//用户信息对象 userInfo</span></span><br><span class="line">v8::Local&lt;v8::ObjectTemplate&gt; global_user_info_object = v8::ObjectTemplate::<span class="constructor">New(<span class="params">isolate</span>)</span>;</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;id&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">id</span>)</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;userNewId&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">userNewId</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;userOldId&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">userOldId</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;userName&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">userName</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;phone&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">phone</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;cardNo&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">cardNo</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;compnayId&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">compnayId</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;payCnt&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">payCnt</span>)</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;fillCnt&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">fillCnt</span>)</span>);</span><br><span class="line">global_user_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;meterId&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userInfo</span>.<span class="params">meterId</span>)</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共信息对象commonInfo</span></span><br><span class="line">v8::Local&lt;v8::ObjectTemplate&gt; global_common_info_object = v8::ObjectTemplate::<span class="constructor">New(<span class="params">isolate</span>)</span>;</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;buyTotalQuantity&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">buyTotalQuantity</span>)</span>);</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;buyTotalMoney&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">buyTotalMoney</span>)</span>);</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;yearTotalQuantity&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">buyTotalMoney</span>)</span>);</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;chargePoorId&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">chargePoorId</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;chargePoorPrice&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">chargePoorPrice</span>)</span>);</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;chargePoorMonthMaxMoney&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">chargePoorMonthMaxMoney</span>)</span>);</span><br><span class="line">global_common_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;monthTotalMoney&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">commonField</span>.<span class="params">monthTotalMoney</span>)</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//收费价格对象 priceInfo</span></span><br><span class="line">v8::Local&lt;v8::ObjectTemplate&gt; global_price_info_object = v8::ObjectTemplate::<span class="constructor">New(<span class="params">isolate</span>)</span>;</span><br><span class="line">global_price_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;id&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userPriceType</span>.<span class="params">id</span>)</span>);</span><br><span class="line">global_price_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;detailId&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userPriceType</span>.<span class="params">detailId</span>)</span>);</span><br><span class="line">global_price_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;price&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">userPriceType</span>.<span class="params">price</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//最后一次缴费记录 lastPayInfo</span></span><br><span class="line">v8::Local&lt;v8::ObjectTemplate&gt; global_last_pay_info_object = v8::ObjectTemplate::<span class="constructor">New(<span class="params">isolate</span>)</span>;</span><br><span class="line">global_last_pay_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;payMoney&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">lastPaymentRecord</span>.<span class="params">payMoney</span>)</span>);</span><br><span class="line">global_last_pay_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;surplus&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Number::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">lastPaymentRecord</span>.<span class="params">surplus</span>)</span>);</span><br><span class="line">global_last_pay_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;lastSurplus&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Number::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">lastPaymentRecord</span>.<span class="params">lastSurplus</span>)</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//ic信息 cardInfo</span></span><br><span class="line">v8::Local&lt;v8::ObjectTemplate&gt; global_card_info_object = v8::ObjectTemplate::<span class="constructor">New(<span class="params">isolate</span>)</span>;</span><br><span class="line">global_card_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;id&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">cardParamInfo</span>.<span class="params">id</span>)</span>);</span><br><span class="line">global_card_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;isDelete&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::Integer::<span class="constructor">New(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">cardParamInfo</span>.<span class="params">isDelete</span>)</span>);</span><br><span class="line">global_card_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;name&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">cardParamInfo</span>.<span class="params">name</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line">global_card_info_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;paramSet&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::String::<span class="constructor">NewFromUtf8(<span class="params">isolate</span>, <span class="params">userInfo</span>.<span class="params">cardParamInfo</span>.<span class="params">paramSet</span>.<span class="params">c_str</span>()</span>).<span class="constructor">ToLocalChecked()</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//填充global对象</span></span><br><span class="line">global_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;userInfo&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, global_user_info_object);</span><br><span class="line">global_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;commonInfo&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, global_common_info_object);</span><br><span class="line">global_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;priceInfo&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, global_price_info_object);</span><br><span class="line">global_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;lastPayInfo&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, global_last_pay_info_object);</span><br><span class="line">global_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;cardInfo&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, global_card_info_object);</span><br><span class="line">global_object-&gt;<span class="constructor">Set(<span class="params">v8</span>::String::NewFromUtf8(<span class="params">isolate</span>, <span class="string">&quot;log&quot;</span>)</span>.<span class="constructor">ToLocalChecked()</span>, v8::FunctionTemplate::<span class="constructor">New(<span class="params">isolate</span>, LogCallback)</span>);</span><br><span class="line">return global_object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h2><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建js函数调用参数   这里需要传入充值金额、获取用户信息对象</span></span><br><span class="line">v8::Local&lt;v8::Value&gt; funArg = v8::<span class="type">String</span>::<span class="title function_ invoke__">NewFromUtf8</span>(isolate, money).<span class="title function_ invoke__">ToLocalChecked</span>();</span><br></pre></td></tr></table></figure><h2 id="参数使用"><a href="#参数使用" class="headerlink" title="参数使用"></a>参数使用</h2><p>全局参数直接在js中使用变量名即可获取到,函数参数在当前函数中有效,出了函数作用域不可访问.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">testFunction</span>(<span class="params">money</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> outJsonObject = &#123;&#125;;</span><br><span class="line">    <span class="comment">//直接使用函数参数money  当前context下有效</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">MoneyCnt</span>_Pre = <span class="built_in">parseFloat</span>(money);</span><br><span class="line">    <span class="comment">//全局参数priceInfo   在global context下有效</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">StepPrice</span> = priceInfo.<span class="property">price</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;input is &#x27;</span> + money);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(<span class="title class_">MoneyCnt</span>_Pre) || <span class="title class_">StepPrice</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(outJsonObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="返回值获取"><a href="#返回值获取" class="headerlink" title="返回值获取"></a>返回值获取</h1><p>返回值通过v8::Value接收返回值,  然后转成v8::String::Utf8Value对象,直接使用<em>操作符获取到char</em>数据</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    v8::TryCatch <span class="title function_ invoke__">tryCatch</span>(isolate);</span><br><span class="line">    <span class="comment">//调用js函数  传递参数并获取返回值</span></span><br><span class="line">    v8::MaybeLocal&lt;v8::Value&gt; funResult =</span><br><span class="line">        functionValue.As&lt;v8::Object&gt;()<span class="punctuation">-&gt;</span><span class="title function_ invoke__">CallAsFunction</span>(context, context<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Global</span>(), <span class="number">1</span>, &amp;funArg);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">if</span> (!funResult.<span class="title function_ invoke__">IsEmpty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        v8::<span class="type">String</span>::Utf8Value <span class="title function_ invoke__">utf8Value</span>(isolate, funResult.<span class="title function_ invoke__">ToLocalChecked</span>());</span><br><span class="line">        spdlog::<span class="title function_ invoke__">info</span>(<span class="string">&quot;调用js函数ProcessLevelCount(&#123;&#125;)获取的返回值&#123;&#125;&quot;</span>, money, *utf8Value);</span><br><span class="line">        outJson.<span class="title function_ invoke__">clear</span>();</span><br><span class="line">        outJson.<span class="title function_ invoke__">append</span>(*utf8Value);</span><br><span class="line">        bResult = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//调用失败的话 需要从异常里面拿到异常信息</span></span><br><span class="line">        v8::<span class="type">String</span>::Utf8Value <span class="title function_ invoke__">utf8Value</span>(isolate, tryCatch.<span class="title function_ invoke__">Message</span>()<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Get</span>());</span><br><span class="line">        spdlog::<span class="title function_ invoke__">error</span>(<span class="string">&quot;js调用失败,错误信息&#123;&#125;&quot;</span>, *utf8Value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>在js中不可避免会产生异常,c++中想要获取到js发生的异常信息,使用v8::TryCatch 声明一个对象,然后进行v8函数调用，发生异常后可以从trycatch对象中获取到js中发生的异常信息.</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    v8::TryCatch <span class="title function_ invoke__">tryCatch</span>(isolate);</span><br><span class="line">    <span class="comment">//调用js函数  传递参数并获取返回值</span></span><br><span class="line">    v8::MaybeLocal&lt;v8::Value&gt; funResult =</span><br><span class="line">        functionValue.As&lt;v8::Object&gt;()<span class="punctuation">-&gt;</span><span class="title function_ invoke__">CallAsFunction</span>(context, context<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Global</span>(), <span class="number">1</span>, &amp;funArg);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">if</span> (!funResult.<span class="title function_ invoke__">IsEmpty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        v8::<span class="type">String</span>::Utf8Value <span class="title function_ invoke__">utf8Value</span>(isolate, funResult.<span class="title function_ invoke__">ToLocalChecked</span>());</span><br><span class="line">        spdlog::<span class="title function_ invoke__">info</span>(<span class="string">&quot;调用js函数ProcessLevelCount(&#123;&#125;)获取的返回值&#123;&#125;&quot;</span>, money, *utf8Value);</span><br><span class="line">        outJson.<span class="title function_ invoke__">clear</span>();</span><br><span class="line">        outJson.<span class="title function_ invoke__">append</span>(*utf8Value);</span><br><span class="line">        bResult = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//调用失败的话 需要从异常里面拿到异常信息</span></span><br><span class="line">        v8::<span class="type">String</span>::Utf8Value <span class="title function_ invoke__">utf8Value</span>(isolate, tryCatch.<span class="title function_ invoke__">Message</span>()<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Get</span>());</span><br><span class="line">        spdlog::<span class="title function_ invoke__">error</span>(<span class="string">&quot;js调用失败,错误信息&#123;&#125;&quot;</span>, *utf8Value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;c++嵌入v8参数传递及获取返回值&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="c++" scheme="http://lehoon.cn/tags/c/"/>
    
    <category term="v8" scheme="http://lehoon.cn/tags/v8/"/>
    
    <category term="js engine" scheme="http://lehoon.cn/tags/js-engine/"/>
    
    <category term="内嵌" scheme="http://lehoon.cn/tags/%E5%86%85%E5%B5%8C/"/>
    
  </entry>
  
  <entry>
    <title>win10编译v8引擎</title>
    <link href="http://lehoon.cn/backend/2022/09/26/v8-complie-win10.html"/>
    <id>http://lehoon.cn/backend/2022/09/26/v8-complie-win10.html</id>
    <published>2022-09-26T08:16:35.000Z</published>
    <updated>2023-06-25T06:08:59.061Z</updated>
    
    <content type="html"><![CDATA[<p>记录在win10编译v8过程。</p><span id="more"></span><h1 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h1><p><a href="https://v8.dev/docs/build">参考网址</a>  可以单独通过git从github下载v8引擎源码，官方推荐使用depot_toos下载源码，因此本文使用depot_tools下载拉去v8源码。</p><h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><p>因为v8源码在外网上,默认不能访问,因此需要配置一个代理。<br>打开window控制台,设置代理信息</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">HTTP_PROXY</span>=http://127.0.0.1:8293</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">HTTPS_PROXY</span>=http://127.0.0.1:8293</span><br></pre></td></tr></table></figure><h2 id="下载depot-tools"><a href="#下载depot-tools" class="headerlink" title="下载depot_tools"></a>下载depot_tools</h2><p>下载depot_tools<a href="https://storage.googleapis.com/chrome-infra/depot_tools.zip">压缩包</a>, 或者使用git clone下来 git clone <a href="https://chromium.googlesource.com/chromium/tools/depot_tools.git">https://chromium.googlesource.com/chromium/tools/depot_tools.git</a><br>然后配置环境变量, 添加depot_tools目录到环境变量path中</p><h2 id="安装window-10-sdk"><a href="#安装window-10-sdk" class="headerlink" title="安装window 10 sdk"></a>安装window 10 sdk</h2><p>编译v8在window上需要window sdk, 当前在win10上编译v8需要最新window sdk版本为10.0.20348.0, <a href="https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/">下载网址</a>,下载完成安装。</p><h2 id="下载v8-源码"><a href="#下载v8-源码" class="headerlink" title="下载v8 源码"></a>下载v8 源码</h2><p>打开控制台,进入指定目录创建v8目录,然后进入v8目录后执行fetch v8获取v8源码</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">cd</span> c:\home</span><br><span class="line"><span class="symbol">mkdir</span> <span class="built_in">v8</span></span><br><span class="line"><span class="symbol">cd</span> <span class="built_in">v8</span></span><br><span class="line"><span class="symbol">fetch</span> <span class="built_in">v8</span></span><br></pre></td></tr></table></figure><h1 id="编译步骤"><a href="#编译步骤" class="headerlink" title="编译步骤"></a>编译步骤</h1><p>打开控制台,进入v8目录,使用gn生成编译文件</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">cd</span> c:\home\<span class="built_in">v8</span>\<span class="built_in">v8</span></span><br></pre></td></tr></table></figure><h2 id="编译32位v8程序"><a href="#编译32位v8程序" class="headerlink" title="编译32位v8程序"></a>编译32位v8程序</h2><p>通过gn生成编译环境后需要修改对应目录下的args.gn文件,修改对应的target_cpu类型（x86）</p><h3 id="编译debug版"><a href="#编译debug版" class="headerlink" title="编译debug版"></a>编译debug版</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn args <span class="keyword">out</span>/x86.<span class="keyword">debug</span></span><br><span class="line"><span class="comment">#执行完后需要修改args.gn文件,然后执行ninja编译</span></span><br><span class="line"></span><br><span class="line">ninja -C <span class="keyword">out</span>\x86.<span class="keyword">debug</span> v8_monolith</span><br></pre></td></tr></table></figure><h3 id="编译release版"><a href="#编译release版" class="headerlink" title="编译release版"></a>编译release版</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn args out/<span class="keyword">x</span><span class="number">86</span>.<span class="keyword">release</span></span><br><span class="line">#执行完后需要修改args.gn文件<span class="punctuation">,</span>然后执行ninja编译</span><br><span class="line"></span><br><span class="line">ninja -C out\<span class="keyword">x</span><span class="number">86</span>.<span class="keyword">release</span> v<span class="number">8</span>_monolith</span><br></pre></td></tr></table></figure><h3 id="args-gn文件内容"><a href="#args-gn文件内容" class="headerlink" title="args.gn文件内容"></a>args.gn文件内容</h3><p>文件路径路径: c:\home\v8\v8\out\x86.release\args.gn</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">v8_monolithic</span>=<span class="literal">true</span> </span><br><span class="line"><span class="attr">v8_use_external_startup_data</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">use_custom_libcxx</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">is_component_build</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">treat_warnings_as_errors</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">v8_symbol_level</span>=<span class="number">0</span> </span><br><span class="line"><span class="attr">is_clang</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">is_debug</span>=<span class="literal">false</span>   <span class="comment">#是否debug</span></span><br><span class="line"><span class="attr">target_cpu</span>=<span class="string">&quot;x86&quot;</span> <span class="comment">#目标cpu类型</span></span><br></pre></td></tr></table></figure><h2 id="编译64位v8程序"><a href="#编译64位v8程序" class="headerlink" title="编译64位v8程序"></a>编译64位v8程序</h2><h3 id="编译debug版-1"><a href="#编译debug版-1" class="headerlink" title="编译debug版"></a>编译debug版</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn args <span class="keyword">out</span>/x64.<span class="keyword">debug</span></span><br><span class="line"><span class="comment">#执行完后需要修改args.gn文件,然后执行ninja编译</span></span><br><span class="line"></span><br><span class="line">ninja -C <span class="keyword">out</span>\x64.<span class="keyword">debug</span> v8_monolith</span><br></pre></td></tr></table></figure><h3 id="编译release版-1"><a href="#编译release版-1" class="headerlink" title="编译release版"></a>编译release版</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn args out/<span class="keyword">x</span><span class="number">64</span>.<span class="keyword">release</span></span><br><span class="line">#执行完后需要修改args.gn文件<span class="punctuation">,</span>然后执行ninja编译</span><br><span class="line"></span><br><span class="line">ninja -C out\<span class="keyword">x</span><span class="number">64</span>.<span class="keyword">release</span> v<span class="number">8</span>_monolith</span><br></pre></td></tr></table></figure><h3 id="args-gn文件内容-1"><a href="#args-gn文件内容-1" class="headerlink" title="args.gn文件内容"></a>args.gn文件内容</h3><p>文件路径路径: c:\home\v8\v8\out\x64.release\args.gn</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">v8_monolithic</span>=<span class="literal">true</span> </span><br><span class="line"><span class="attr">v8_use_external_startup_data</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">use_custom_libcxx</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">is_component_build</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">treat_warnings_as_errors</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">v8_symbol_level</span>=<span class="number">0</span> </span><br><span class="line"><span class="attr">is_clang</span>=<span class="literal">false</span> </span><br><span class="line"><span class="attr">is_debug</span>=<span class="literal">false</span>   <span class="comment">#是否debug</span></span><br><span class="line"><span class="attr">target_cpu</span>=<span class="string">&quot;x64&quot;</span> <span class="comment">#目标cpu类型</span></span><br></pre></td></tr></table></figure><h1 id="c-样例"><a href="#c-样例" class="headerlink" title="c++样例"></a>c++样例</h1><p>需要注意的是初始化v8的时候，必须填充当前程序的路径，否则会出现异常.</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">void CJavaScriptEngine::<span class="title function_ invoke__">TestFunction</span>() &#123;</span><br><span class="line">TCHAR szCurrentDir[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="title function_ invoke__">GetModuleFileName</span>(NULL, szCurrentDir, <span class="title function_ invoke__">sizeof</span>(szCurrentDir));</span><br><span class="line">SStringT <span class="title function_ invoke__">exePath</span>(szCurrentDir);</span><br><span class="line">SStringA exePath1 = <span class="title function_ invoke__">S_CW2A</span>(exePath);</span><br><span class="line"><span class="comment">// Initialize V8.</span></span><br><span class="line">v8::V8::<span class="title function_ invoke__">InitializeICUDefaultLocation</span>(exePath1.<span class="title function_ invoke__">c_str</span>());</span><br><span class="line">v8::V8::<span class="title function_ invoke__">InitializeExternalStartupData</span>(exePath1.<span class="title function_ invoke__">c_str</span>());</span><br><span class="line">std::unique_ptr&lt;v8::Platform&gt; platform = v8::platform::<span class="title function_ invoke__">NewDefaultPlatform</span>();</span><br><span class="line">v8::V8::<span class="title function_ invoke__">InitializePlatform</span>(platform.<span class="title function_ invoke__">get</span>());</span><br><span class="line">v8::V8::<span class="title function_ invoke__">Initialize</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a new Isolate and make it the current one.</span></span><br><span class="line">v8::Isolate::CreateParams create_params;</span><br><span class="line">create_params.array_buffer_allocator =</span><br><span class="line">v8::ArrayBuffer::Allocator::<span class="title function_ invoke__">NewDefaultAllocator</span>();</span><br><span class="line">v8::Isolate* isolate = v8::Isolate::<span class="title function_ invoke__">New</span>(create_params);</span><br><span class="line">&#123;</span><br><span class="line">v8::Isolate::Scope <span class="title function_ invoke__">isolate_scope</span>(isolate);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a stack-allocated handle scope.</span></span><br><span class="line">v8::HandleScope <span class="title function_ invoke__">handle_scope</span>(isolate);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a new context.</span></span><br><span class="line">v8::Local&lt;v8::Context&gt; context = v8::Context::<span class="title function_ invoke__">New</span>(isolate);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Enter the context for compiling and running the hello world script.</span></span><br><span class="line">v8::Context::Scope <span class="title function_ invoke__">context_scope</span>(context);</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Create a string containing the JavaScript source code.</span></span><br><span class="line">v8::Local&lt;v8::<span class="type">String</span>&gt; source =</span><br><span class="line">v8::<span class="type">String</span>::<span class="title function_ invoke__">NewFromUtf8Literal</span>(isolate, <span class="string">&quot;&#x27;Hello&#x27; + &#x27;, World!&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Compile the source code.</span></span><br><span class="line">v8::Local&lt;v8::Script&gt; script =</span><br><span class="line">v8::Script::<span class="title function_ invoke__">Compile</span>(context, source).<span class="title function_ invoke__">ToLocalChecked</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Run the script to get the result.</span></span><br><span class="line">v8::Local&lt;v8::Value&gt; result = script<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Run</span>(context).<span class="title function_ invoke__">ToLocalChecked</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Convert the result to an UTF8 string and print it.</span></span><br><span class="line">v8::<span class="type">String</span>::Utf8Value <span class="title function_ invoke__">utf8</span>(isolate, result);</span><br><span class="line"><span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *utf8);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Use the JavaScript API to generate a WebAssembly module.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// |bytes| contains the binary format for the following module:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//     (func (export &quot;add&quot;) (param i32 i32) (result i32)</span></span><br><span class="line"><span class="comment">//       get_local 0</span></span><br><span class="line"><span class="comment">//       get_local 1</span></span><br><span class="line"><span class="comment">//       i32.add)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">const</span> <span class="type">char</span> csource[] = R<span class="string">&quot;(</span></span><br><span class="line"><span class="string">        let bytes = new Uint8Array([</span></span><br><span class="line"><span class="string">          0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x07, 0x01,</span></span><br><span class="line"><span class="string">          0x60, 0x02, 0x7f, 0x7f, 0x01, 0x7f, 0x03, 0x02, 0x01, 0x00, 0x07,</span></span><br><span class="line"><span class="string">          0x07, 0x01, 0x03, 0x61, 0x64, 0x64, 0x00, 0x00, 0x0a, 0x09, 0x01,</span></span><br><span class="line"><span class="string">          0x07, 0x00, 0x20, 0x00, 0x20, 0x01, 0x6a, 0x0b</span></span><br><span class="line"><span class="string">        ]);</span></span><br><span class="line"><span class="string">        let module = new WebAssembly.Module(bytes);</span></span><br><span class="line"><span class="string">        let instance = new WebAssembly.Instance(module);</span></span><br><span class="line"><span class="string">        instance.exports.add(3, 4);</span></span><br><span class="line"><span class="string">      )&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a string containing the JavaScript source code.</span></span><br><span class="line">v8::Local&lt;v8::<span class="type">String</span>&gt; source =</span><br><span class="line">v8::<span class="type">String</span>::<span class="title function_ invoke__">NewFromUtf8Literal</span>(isolate, csource);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Compile the source code.</span></span><br><span class="line">v8::Local&lt;v8::Script&gt; script =</span><br><span class="line">v8::Script::<span class="title function_ invoke__">Compile</span>(context, source).<span class="title function_ invoke__">ToLocalChecked</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Run the script to get the result.</span></span><br><span class="line">v8::Local&lt;v8::Value&gt; result = script<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Run</span>(context).<span class="title function_ invoke__">ToLocalChecked</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Convert the result to a uint32 and print it.</span></span><br><span class="line">uint32_t number = result<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Uint32Value</span>(context).<span class="title function_ invoke__">ToChecked</span>();</span><br><span class="line"><span class="title function_ invoke__">printf</span>(<span class="string">&quot;3 + 4 = %u\n&quot;</span>, number);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dispose the isolate and tear down V8.</span></span><br><span class="line">isolate<span class="punctuation">-&gt;</span><span class="title function_ invoke__">Dispose</span>();</span><br><span class="line">v8::V8::<span class="title function_ invoke__">Dispose</span>();</span><br><span class="line">v8::V8::<span class="title function_ invoke__">DisposePlatform</span>();</span><br><span class="line">delete create_params.array_buffer_allocator;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录在win10编译v8过程。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="v8" scheme="http://lehoon.cn/tags/v8/"/>
    
    <category term="js engine" scheme="http://lehoon.cn/tags/js-engine/"/>
    
    <category term="编译" scheme="http://lehoon.cn/tags/%E7%BC%96%E8%AF%91/"/>
    
    <category term="win10" scheme="http://lehoon.cn/tags/win10/"/>
    
  </entry>
  
  <entry>
    <title>常用的开源解决方案</title>
    <link href="http://lehoon.cn/%E5%BC%80%E6%BA%90/2022/01/07/opensource-list.html"/>
    <id>http://lehoon.cn/%E5%BC%80%E6%BA%90/2022/01/07/opensource-list.html</id>
    <published>2022-01-07T01:55:59.000Z</published>
    <updated>2023-06-25T06:08:59.046Z</updated>
    
    <content type="html"><![CDATA[<p>记录常用的一些开源解决方案，基于开放源码可以进行二次开发完成需求任务.</p><span id="more"></span><h1 id="pdf相关"><a href="#pdf相关" class="headerlink" title="pdf相关"></a>pdf相关</h1><h2 id="mupdf"><a href="#mupdf" class="headerlink" title="mupdf"></a>mupdf</h2><p>管网地址：<a href="https://mupdf.com/">https://mupdf.com/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录常用的一些开源解决方案，基于开放源码可以进行二次开发完成需求任务.&lt;/p&gt;</summary>
    
    
    
    <category term="开源" scheme="http://lehoon.cn/categories/%E5%BC%80%E6%BA%90/"/>
    
    
    <category term="开源" scheme="http://lehoon.cn/tags/%E5%BC%80%E6%BA%90/"/>
    
    <category term="常见解决方案" scheme="http://lehoon.cn/tags/%E5%B8%B8%E8%A7%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    <category term="二次开发" scheme="http://lehoon.cn/tags/%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>c++生成一定范围内随机数的通用算法公式</title>
    <link href="http://lehoon.cn/backend/2021/12/21/cplusplus-random.html"/>
    <id>http://lehoon.cn/backend/2021/12/21/cplusplus-random.html</id>
    <published>2021-12-21T06:22:14.000Z</published>
    <updated>2023-06-25T06:08:58.998Z</updated>
    
    <content type="html"><![CDATA[<p>c++生成一定范围内随机数的通用算法公式,引用windows游戏编程之从零开始。</p><span id="more"></span><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>通用公式: a + rand() % n,  获取[a, a + b)范围的随机整数,启动a是起始值, n是整数的范围</p><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、要取得[a,b)的随机整数, 使用(rand() <span class="comment">% (b - a)) + a     (结果值包含a不包含b)</span></span><br><span class="line"><span class="number">2</span>、要取得[a,b]的随机整数, 使用(rand() <span class="comment">% (b - a + 1)) + a  (结果值包含a包含b)</span></span><br><span class="line"><span class="number">3</span>、要取得(a,b]的随机整数, 使用(rand() <span class="comment">% (b - a)) + a + 1 (结果值不包含a包含b)</span></span><br></pre></td></tr></table></figure><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、要取得[<span class="keyword">a</span>,b)的随机整数, 使用<span class="keyword">a</span> + (int) (b - <span class="keyword">a</span>) * rand() / (RAND_MAX + <span class="number">1</span>)  (结果值包含<span class="keyword">a</span>不包含b)</span><br><span class="line"><span class="number">2</span>、要取得[<span class="keyword">a</span>,b]的随机整数, 使用<span class="keyword">a</span> + (int) (b - <span class="keyword">a</span>) * rand() / RAND_MAX  (结果值包含<span class="keyword">a</span>包含b)</span><br><span class="line"><span class="number">3</span>、要取得(<span class="keyword">a</span>,b]的随机整数, 使用<span class="keyword">a</span> + <span class="number">1</span> + (int) (b - <span class="keyword">a</span>) * rand() / RAND_MAX (结果值不包含<span class="keyword">a</span>包含b)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;c++生成一定范围内随机数的通用算法公式,引用windows游戏编程之从零开始。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="c++" scheme="http://lehoon.cn/tags/c/"/>
    
    <category term="随机数" scheme="http://lehoon.cn/tags/%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>netty客户端与多个远程服务器连接</title>
    <link href="http://lehoon.cn/backend/2021/12/06/netty-client-demo.html"/>
    <id>http://lehoon.cn/backend/2021/12/06/netty-client-demo.html</id>
    <published>2021-12-06T08:53:59.000Z</published>
    <updated>2023-06-25T06:08:59.045Z</updated>
    
    <content type="html"><![CDATA[<p>java使用netty实现客户端与多个远程服务器建立连接并接收数据及发送数据。</p><span id="more"></span><h1 id="pom依赖"><a href="#pom依赖" class="headerlink" title="pom依赖"></a>pom依赖</h1><p>基于netty-4.1.58开发。</p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><h2 id="FoFParseClientFactory连接工厂代码"><a href="#FoFParseClientFactory连接工厂代码" class="headerlink" title="FoFParseClientFactory连接工厂代码"></a>FoFParseClientFactory连接工厂代码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Copyright: CopyRight (c) 2020-2035&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: lehoon Co. LTD.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Author: lehoon&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Date: 2021/12/3 14:25&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> final <span class="keyword">class</span> <span class="title">FoFParseClientFactory</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Bootstrap bootstrap = <span class="keyword">new</span> Bootstrap();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> EventLoopGroup <span class="keyword">group</span> = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Channel&gt; channelList = <span class="keyword">new</span> ArrayList&lt;Channel&gt;(<span class="number">128</span>);</span><br><span class="line">    <span class="keyword">private</span> final <span class="keyword">static</span> FoFParseClientFactory instance = <span class="keyword">new</span> FoFParseClientFactory();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FoFParseClientFactory</span>()</span> &#123;</span><br><span class="line">        bootstrap.<span class="keyword">group</span>(<span class="keyword">group</span>)</span><br><span class="line">                .channel(NioSocketChannel.<span class="keyword">class</span>)</span><br><span class="line">                .option(ChannelOption.SO_TIMEOUT, <span class="number">60</span>)</span><br><span class="line">                .option(ChannelOption.TCP_NODELAY, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FoFParseClientFactory <span class="title">getInstance</span>()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">newEmailParseTask</span>(<span class="params">String host, <span class="built_in">int</span> port, String userId, IMessageListener messageListener</span>) throws Exception</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!TcpHelper.isRemoteAlive(host, port)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;邮件解析服务器未启动, 连接失败.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            bootstrap.handler(<span class="keyword">new</span> FoFNewNioChannelInitializer(userId, messageListener));</span><br><span class="line">            ChannelFuture channelFuture = bootstrap.connect(host, port);</span><br><span class="line">            channelFuture.sync();</span><br><span class="line">            channelList.<span class="keyword">add</span>(channelFuture.channel());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;与邮件服务器连接失败.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disConnect</span>(<span class="params">Channel channel</span>)</span> &#123;</span><br><span class="line">        channelList.<span class="keyword">remove</span>(channel);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span>()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Channel channel : channelList) &#123;</span><br><span class="line">            channel.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        channelList.clear();</span><br><span class="line">        <span class="keyword">group</span>.shutdownGracefully().syncUninterruptibly();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="FoFNewNioChannelInitializer连接通道初始化代码"><a href="#FoFNewNioChannelInitializer连接通道初始化代码" class="headerlink" title="FoFNewNioChannelInitializer连接通道初始化代码"></a>FoFNewNioChannelInitializer连接通道初始化代码</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Copyright: CopyRight (c) 2020-2035&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: lehoon Co. LTD.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Author: lehoon&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Date: 2021/12/3 14:35&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FoFNewNioChannelInitializer</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">ChannelInitializer</span></span>&lt;<span class="title">NioSocketChannel</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> userId;</span><br><span class="line">    <span class="keyword">private</span> IMessageListener messageListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> FoFNewNioChannelInitializer() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> FoFNewNioChannelInitializer(<span class="keyword">String</span> userId) &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> FoFNewNioChannelInitializer(<span class="keyword">String</span> userId, IMessageListener messageListener) &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId;</span><br><span class="line">        <span class="built_in">this</span>.messageListener = messageListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void initChannel(NioSocketChannel ch) throws Exception &#123;</span><br><span class="line">        ch.pipeline().addLast(<span class="keyword">new</span> <span class="type">LineEncoder</span>(LineSeparator.WINDOWS));</span><br><span class="line">        ch.pipeline().addLast(<span class="keyword">new</span> <span class="type">StringEncoder</span>(CharsetUtil.UTF_8));</span><br><span class="line">        ch.pipeline().addLast(<span class="keyword">new</span> <span class="type">StringDecoder</span>(CharsetUtil.UTF_8));</span><br><span class="line">        ch.pipeline().addLast(<span class="keyword">new</span> <span class="type">FoFParseResponseHandler</span>(userId, messageListener));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FoFParseResponseHandler数据包解析代码"><a href="#FoFParseResponseHandler数据包解析代码" class="headerlink" title="FoFParseResponseHandler数据包解析代码"></a>FoFParseResponseHandler数据包解析代码</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Copyright: CopyRight (c) 2020-2035&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: lehoon Co. LTD.&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Author: lehoon&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Date: 2021/12/3 14:47&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> FoFParseResponseHandler extends ChannelInboundHandlerAdapter &#123;</span><br><span class="line">    <span class="keyword">private</span> String userId;</span><br><span class="line">    <span class="keyword">private</span> IMessageListener messageListener;</span><br><span class="line"></span><br><span class="line">    public <span class="constructor">FoFParseResponseHandler()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="constructor">FoFParseResponseHandler(String <span class="params">userId</span>)</span> &#123;</span><br><span class="line">        this.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="constructor">FoFParseResponseHandler(String <span class="params">userId</span>, IMessageListener <span class="params">messageListener</span>)</span> &#123;</span><br><span class="line">        this.userId = userId;</span><br><span class="line">        this.messageListener = messageListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void channel<span class="constructor">Active(ChannelHandlerContext <span class="params">ctx</span>)</span> throws Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (messageListener != null) messageListener.on<span class="constructor">Connect(<span class="params">userId</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">StringUtils</span>.</span></span>is<span class="constructor">Blank(<span class="params">userId</span>)</span>) &#123;</span><br><span class="line">            ctx.close<span class="literal">()</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String message = <span class="module-access"><span class="module"><span class="identifier">MessageHelper</span>.</span></span>email<span class="constructor">ParseRequest(<span class="params">userId</span>)</span>;</span><br><span class="line">        ByteBuf byteBuf = <span class="module-access"><span class="module"><span class="identifier">Unpooled</span>.</span></span>copied<span class="constructor">Buffer(<span class="params">message</span>.<span class="params">getBytes</span>()</span>);</span><br><span class="line">        ctx.write<span class="constructor">AndFlush(<span class="params">byteBuf</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (messageListener != null) messageListener.on<span class="constructor">Write(<span class="params">message</span>.<span class="params">getBytes</span>()</span>, message.get<span class="constructor">Bytes()</span>.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void channel<span class="constructor">Read(ChannelHandlerContext <span class="params">ctx</span>, Object <span class="params">msg</span>)</span> throws Exception &#123;</span><br><span class="line">        super.channel<span class="constructor">Read(<span class="params">ctx</span>, <span class="params">msg</span>)</span>;</span><br><span class="line">        EmailParseResponse response = <span class="module-access"><span class="module"><span class="identifier">MessageHelper</span>.</span></span>email<span class="constructor">ParseResponse((String)</span> msg);</span><br><span class="line">        <span class="keyword">if</span> (response<span class="operator"> == </span>null) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (messageListener<span class="operator"> == </span>null) return;</span><br><span class="line">        <span class="keyword">if</span>(messageListener.on<span class="constructor">Read(<span class="params">userId</span>, <span class="params">response</span>)</span><span class="operator"> == </span>MessageCallBackAction.SHUTDOWN) &#123;</span><br><span class="line">            ctx.close<span class="literal">()</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="keyword">exception</span><span class="constructor">Caught(ChannelHandlerContext <span class="params">ctx</span>, Throwable <span class="params">cause</span>)</span> throws Exception &#123;</span><br><span class="line">        super.<span class="keyword">exception</span><span class="constructor">Caught(<span class="params">ctx</span>, <span class="params">cause</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FoFParseClientFactory</span>.</span></span>get<span class="constructor">Instance()</span>.dis<span class="constructor">Connect(<span class="params">ctx</span>.<span class="params">channel</span>()</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void handler<span class="constructor">Removed(ChannelHandlerContext <span class="params">ctx</span>)</span> throws Exception &#123;</span><br><span class="line">        super.handler<span class="constructor">Removed(<span class="params">ctx</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (messageListener != null) &#123;</span><br><span class="line">            messageListener.on<span class="constructor">Close(<span class="params">userId</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FoFParseClientFactory</span>.</span></span>get<span class="constructor">Instance()</span>.dis<span class="constructor">Connect(<span class="params">ctx</span>.<span class="params">channel</span>()</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void set<span class="constructor">MessageListener(IMessageListener <span class="params">messageListener</span>)</span> &#123;</span><br><span class="line">        this.messageListener = messageListener;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="客户端使用代码"><a href="#客户端使用代码" class="headerlink" title="客户端使用代码"></a>客户端使用代码</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">public BusinessResult&lt;String&gt; start<span class="constructor">ParseTask()</span> &#123;</span><br><span class="line">    String userId = get<span class="constructor">UserId()</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">StringUtils</span>.</span></span>is<span class="constructor">Blank(<span class="params">userId</span>)</span>) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;获取当前登陆用户失败, 启动邮件解析任务失败.&quot;</span>);</span><br><span class="line">        return <span class="keyword">new</span> BusinessResult&lt;String&gt;<span class="literal">()</span>.fail(<span class="module-access"><span class="module"><span class="identifier">BusinessCode</span>.</span><span class="module"><span class="identifier">AUTH_USER_NOT_EXIST</span>.</span></span>get<span class="constructor">Code()</span>, <span class="string">&quot;当前用户不存在, 发送邮件解析指令失败!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">StringUtils</span>.</span></span>is<span class="constructor">Blank(<span class="params">remoteHost</span>)</span><span class="operator"> || </span>remotePort &lt;= <span class="number">0</span><span class="operator"> || </span>remotePort &gt; <span class="number">65535</span>) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;当前没有配置邮件解析服务器远程地址.&quot;</span>);</span><br><span class="line">        return <span class="keyword">new</span> BusinessResult&lt;String&gt;<span class="literal">()</span>.fail(<span class="module-access"><span class="module"><span class="identifier">BusinessCode</span>.</span><span class="module"><span class="identifier">SERVICE_UNAVAILABLE</span>.</span></span>get<span class="constructor">Code()</span>, <span class="string">&quot;当前没有配置邮件解析服务器远程地址!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FoFParseClientFactory</span>.</span></span>get<span class="constructor">Instance()</span>.<span class="keyword">new</span><span class="constructor">EmailParseTask(<span class="params">remoteHost</span>, <span class="params">remotePort</span>, <span class="params">userId</span>, <span class="params">new</span> IMessageListener()</span> &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void on<span class="constructor">Connect(String <span class="params">userId</span>)</span> &#123;</span><br><span class="line">                log.info(<span class="string">&quot;与邮件服务器建立连接成功.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public MessageCallBackAction on<span class="constructor">Read(String <span class="params">userId</span>, EmailParseResponse <span class="params">response</span>)</span> &#123;</span><br><span class="line">                log.info(<span class="string">&quot;接收到邮件解析数据:&#123;&#125;, &#123;&#125;&quot;</span>, userId, response);</span><br><span class="line">                <span class="keyword">if</span> (response.is<span class="constructor">Done()</span>) &#123;</span><br><span class="line">                    return MessageCallBackAction.SHUTDOWN;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return MessageCallBackAction.CONTINUE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void on<span class="constructor">Write(<span class="params">byte</span>[] <span class="params">data</span>, <span class="params">int</span> <span class="params">length</span>)</span> &#123;</span><br><span class="line">                log.info(<span class="string">&quot;发送数据到邮件解析服务器成功, &#123;&#125;, &#123;&#125;&quot;</span>, length, <span class="keyword">new</span> <span class="constructor">String(<span class="params">data</span>)</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void on<span class="constructor">Close(String <span class="params">userId</span>)</span> &#123;</span><br><span class="line">                log.info(<span class="string">&quot;与邮件服务器断开连接.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始标志</span></span><br><span class="line">        log.info(<span class="string">&quot;发送邮件解析任务成功.&quot;</span>);</span><br><span class="line">        return <span class="keyword">new</span> BusinessResult&lt;String&gt;<span class="literal">()</span>.success<span class="literal">()</span>;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        return <span class="keyword">new</span> BusinessResult&lt;String&gt;<span class="literal">()</span>.fail(<span class="module-access"><span class="module"><span class="identifier">BusinessCode</span>.</span><span class="module"><span class="identifier">SYSTEM_EXCEPTION</span>.</span></span>get<span class="constructor">Code()</span>, e.get<span class="constructor">Message()</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;java使用netty实现客户端与多个远程服务器建立连接并接收数据及发送数据。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="java" scheme="http://lehoon.cn/tags/java/"/>
    
    <category term="netty" scheme="http://lehoon.cn/tags/netty/"/>
    
  </entry>
  
  <entry>
    <title>部署运维系统1.0</title>
    <link href="http://lehoon.cn/project/2021/03/24/finesys-devops.html"/>
    <id>http://lehoon.cn/project/2021/03/24/finesys-devops.html</id>
    <published>2021-03-24T02:19:46.000Z</published>
    <updated>2023-06-25T06:08:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>使用springboot2.3.0.RELEASE、Dubbo2.7.5、rocketmq4.7.1、vuejs、golang开发的部署、运维、监控平台.</p><span id="more"></span><h2 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h2><img src="https://lehoon.cn/static/upload/finesys-devops.png"/><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><ul><li>Springboot2.3.0.RELEASE</li><li>Dubbo2.7.5</li><li>rocketmq4.7.1</li><li>vuejs</li><li>golang</li><li>c/c++</li><li>javaagent</li><li>tdengine2.0.16.0</li></ul><h2 id="当前支持功能"><a href="#当前支持功能" class="headerlink" title="当前支持功能"></a>当前支持功能</h2><h3 id="管理服务器集群"><a href="#管理服务器集群" class="headerlink" title="管理服务器集群"></a>管理服务器集群</h3><p>通过部署golang开发的agent进程，统一管理当前服务器节点，支持下发的部署服务指令、定期采集服务器监控指标信息上报到网关，网关写入到rocketmq中。<br><img src="https://lehoon.cn/static/upload/devops-server.png"/></p><h3 id="应用app管理"><a href="#应用app管理" class="headerlink" title="应用app管理"></a>应用app管理</h3><p>把应用app上传到系统中，需要该app的客户可以申请授权，授权后，可以把app部署到自己的服务器节点上去<br><img src="https://lehoon.cn/static/upload/devops-app.png"/></p><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><p>通过选择服务器节点、app应用、用户、部署目录等参数可以发布一个新的服务<br><img src="https://lehoon.cn/static/upload/devops-service.png"/></p><h3 id="服务监控"><a href="#服务监控" class="headerlink" title="服务监控"></a>服务监控</h3><p>没启动一个新的服务器，就会实施采集该服务的监控指标信息，java项目通过javaagent启动一个agent进程每隔指定时间就会采集jvm的监控进程、cpu、内存、线程等信息。<br><img src="https://lehoon.cn/static/upload/devops-monitor-jvm-list.png"/></p><h3 id="jvm实时监控"><a href="#jvm实时监控" class="headerlink" title="jvm实时监控"></a>jvm实时监控</h3><img src="https://lehoon.cn/static/upload/devops-monitor-jvm.png"/>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用springboot2.3.0.RELEASE、Dubbo2.7.5、rocketmq4.7.1、vuejs、golang开发的部署、运维、监控平台.&lt;/p&gt;</summary>
    
    
    
    <category term="项目" scheme="http://lehoon.cn/categories/project/"/>
    
    
    <category term="部署" scheme="http://lehoon.cn/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="运维" scheme="http://lehoon.cn/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="监控" scheme="http://lehoon.cn/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="devops" scheme="http://lehoon.cn/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>java屏蔽控制台INT信号</title>
    <link href="http://lehoon.cn/orther/2020/04/30/java-signal-ignore-note.html"/>
    <id>http://lehoon.cn/orther/2020/04/30/java-signal-ignore-note.html</id>
    <published>2020-04-30T02:15:53.000Z</published>
    <updated>2023-06-25T06:08:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>java控制台程序屏蔽结束信号ctrl-c。</p><span id="more"></span><p>mian方法里面添加下面代码，经过测试有效。</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sun.misc.SignalHandler <span class="keyword">handler</span> = <span class="keyword">new</span> sun.misc.SignalHandler() &#123;  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">handle</span><span class="params">(sun.misc.Signal signal)</span> </span>&#123;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line">sun.misc.Signal.handle(<span class="keyword">new</span> sun.misc.Signal(<span class="string">&quot;INT&quot;</span>), <span class="keyword">handler</span>); </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;java控制台程序屏蔽结束信号ctrl-c。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="http://lehoon.cn/categories/orther/"/>
    
    
    <category term="java" scheme="http://lehoon.cn/tags/java/"/>
    
    <category term="控制台" scheme="http://lehoon.cn/tags/%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
    
    <category term="屏蔽信号" scheme="http://lehoon.cn/tags/%E5%B1%8F%E8%94%BD%E4%BF%A1%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>微信商城小程序</title>
    <link href="http://lehoon.cn/project/2020/04/29/weixin-minishop-note.html"/>
    <id>http://lehoon.cn/project/2020/04/29/weixin-minishop-note.html</id>
    <published>2020-04-29T07:56:01.000Z</published>
    <updated>2023-06-25T06:08:59.061Z</updated>
    
    <content type="html"><![CDATA[<p>微信小程序网上商城，使用php开发的微商城.</p><span id="more"></span><img src="https://lehoon.cn/static/images/gh_f459a92816f5_344.jpg"/>]]></content>
    
    
    <summary type="html">&lt;p&gt;微信小程序网上商城，使用php开发的微商城.&lt;/p&gt;</summary>
    
    
    
    <category term="项目" scheme="http://lehoon.cn/categories/project/"/>
    
    
    <category term="微信" scheme="http://lehoon.cn/tags/%E5%BE%AE%E4%BF%A1/"/>
    
    <category term="小程序" scheme="http://lehoon.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="商城" scheme="http://lehoon.cn/tags/%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>flink安装部署</title>
    <link href="http://lehoon.cn/backend/2019/11/20/flink-study-note.html"/>
    <id>http://lehoon.cn/backend/2019/11/20/flink-study-note.html</id>
    <published>2019-11-20T02:18:23.000Z</published>
    <updated>2023-06-25T06:08:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>Flink-1.9.0 Standalone安装部署记录。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h3><p>1、cpu 4核<br>2、内存16g</p><h3 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h3><p>1、<a href="http://archive.apache.org/dist/flink/flink-1.9.0/flink-1.9.0-bin-scala_2.11.tgz">flink版本为1.9.0</a><br>2、<a href="http://centos.org/">CentOS Linux release 7.6.1810 (Core)</a><br>3、<a href="http://www.oracle.com/">1.8.0_201 64-Bit Server</a></p><h3 id="节点环境"><a href="#节点环境" class="headerlink" title="节点环境"></a>节点环境</h3><p>master  192.168.1.56<br>slave01 192.168.1.58<br>slave02 192.168.1.59<br>slave03 192.168.1.60<br>修改/etc/hosts文件，添加映射关系</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="创建flink账号，密码flink"><a href="#创建flink账号，密码flink" class="headerlink" title="创建flink账号，密码flink"></a>创建flink账号，密码flink</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">adduser flink</span></span><br><span class="line"><span class="attribute">passwd flink</span></span><br></pre></td></tr></table></figure><h3 id="添加ssh免密码登陆"><a href="#添加ssh免密码登陆" class="headerlink" title="添加ssh免密码登陆"></a>添加ssh免密码登陆</h3><p>在master上使用ssh-keygen -t rsa生成公钥后，使用ssh-copyid复制master公钥到salve机器上。</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[flink<span class="meta">@master</span> ~]$ ssh-keygen -t rsa</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/home/flink/.ssh/id_rsa): </span><br><span class="line">Created directory &#x27;/home/flink/.ssh&#x27;.</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /home/flink/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /home/flink/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:dMjfT7GUSv03bXpdYb038gsB5XEcGtWylc9oSDhkLhw flink<span class="meta">@master</span></span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|<span class="string">        E.o. +o++</span>|</span><br><span class="line">|<span class="string">       o =o +.*++</span>|</span><br><span class="line">|<span class="string">        * o+.+=Oo</span>|</span><br><span class="line">|<span class="string">       . + ooo=+*</span>|</span><br><span class="line">|<span class="string">        S . o+o+B</span>|</span><br><span class="line">|<span class="string">             o+oB</span>|</span><br><span class="line">|<span class="string">             .o.o</span>|</span><br><span class="line">|<span class="string">              ...</span>|</span><br><span class="line">|<span class="string">               . </span>|</span><br><span class="line">+----[SHA256]-----+</span><br><span class="line"></span><br><span class="line">然后使用ssh-copyid复制</span><br><span class="line">[flink<span class="meta">@master</span> ~]$ ssh-copy-id flink<span class="meta">@slave01</span></span><br><span class="line">[flink<span class="meta">@master</span> ~]$ ssh-copy-id flink<span class="meta">@slave02</span></span><br><span class="line">[flink<span class="meta">@master</span> ~]$ ssh-copy-id flink<span class="meta">@slave03</span></span><br></pre></td></tr></table></figure><h3 id="切换flink账号下载flink-解压flink"><a href="#切换flink账号下载flink-解压flink" class="headerlink" title="切换flink账号下载flink,解压flink"></a>切换flink账号下载flink,解压flink</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[flink@master ~]$ wget http:<span class="regexp">//</span>archive.apache.org<span class="regexp">/dist/</span>flink<span class="regexp">/flink-1.9.0/</span>flink-<span class="number">1.9</span>.<span class="number">0</span>-bin-scala_2.<span class="number">11</span>.tgz</span><br><span class="line"></span><br><span class="line">[flink@master ~]$ tar zxvf flink-<span class="number">1.9</span>.<span class="number">0</span>-bin-scala_2.<span class="number">11</span>.tgz</span><br></pre></td></tr></table></figure><h3 id="添加flink环境变量"><a href="#添加flink环境变量" class="headerlink" title="添加flink环境变量"></a>添加flink环境变量</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi ~ /.bash_profile</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">FLINK_HOME</span>=/home/flink/flink-1.9.0</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$FLINK_HOME/bin</span><br></pre></td></tr></table></figure><h3 id="修改flink配置文件"><a href="#修改flink配置文件" class="headerlink" title="修改flink配置文件"></a>修改flink配置文件</h3><p>进入目录/home/flink/flink-1.9.0/conf<br>修改flink-conf.yaml,主要修改项：jobmanager.rpc.address</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi flink-conf<span class="selector-class">.yaml</span></span><br><span class="line">jobmanager<span class="selector-class">.rpc</span><span class="selector-class">.address</span>: master</span><br></pre></td></tr></table></figure><p>修改masters 文件,添加master映射名称到master文件中</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vi</span> /home/flink/flink-<span class="number">1</span>.<span class="number">9</span>.<span class="number">0</span>/conf/masters </span><br><span class="line"><span class="attribute">master</span>:<span class="number">8081</span></span><br></pre></td></tr></table></figure><p>修改slaves文件，添加slave到文件中</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/home/</span>flink<span class="regexp">/flink-1.9.0/</span>conf/slaves</span><br><span class="line">slave01</span><br><span class="line">slave02</span><br><span class="line">slave03</span><br></pre></td></tr></table></figure><h3 id="分发flink到slave机器"><a href="#分发flink到slave机器" class="headerlink" title="分发flink到slave机器"></a>分发flink到slave机器</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/flink</span><br><span class="line">scp -r flink<span class="number">-1.9</span>.<span class="number">0</span>/ flink<span class="variable">@slave01</span><span class="symbol">:/home/flink</span></span><br><span class="line">scp -r flink<span class="number">-1.9</span>.<span class="number">0</span>/ flink<span class="variable">@slave02</span><span class="symbol">:/home/flink</span></span><br><span class="line">scp -r flink<span class="number">-1.9</span>.<span class="number">0</span>/ flink<span class="variable">@slave03</span><span class="symbol">:/home/flink</span></span><br></pre></td></tr></table></figure><h2 id="启动flink"><a href="#启动flink" class="headerlink" title="启动flink"></a>启动flink</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/home/</span>flink<span class="regexp">/flink-1.9.0/</span>bin</span><br><span class="line">./start-cluster.sh</span><br></pre></td></tr></table></figure><h2 id="停止flink"><a href="#停止flink" class="headerlink" title="停止flink"></a>停止flink</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/home/</span>flink<span class="regexp">/flink-1.9.0/</span>bin</span><br><span class="line">./stop-cluster.sh</span><br></pre></td></tr></table></figure><h2 id="查看控制台"><a href="#查看控制台" class="headerlink" title="查看控制台"></a>查看控制台</h2><p>打开网址: <a href="http://master:8081/">http://master:8081</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Flink-1.9.0 Standalone安装部署记录。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="flink" scheme="http://lehoon.cn/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>chrome占用cpu解决方法</title>
    <link href="http://lehoon.cn/orther/2019/11/18/chrome-cpu-note.html"/>
    <id>http://lehoon.cn/orther/2019/11/18/chrome-cpu-note.html</id>
    <published>2019-11-18T02:39:10.000Z</published>
    <updated>2023-06-25T06:08:58.998Z</updated>
    
    <content type="html"><![CDATA[<p>chrome长时间占用cpu解决方法。</p><h2 id="清理浏览器缓存"><a href="#清理浏览器缓存" class="headerlink" title="清理浏览器缓存"></a>清理浏览器缓存</h2><p>通过清理浏览器缓存有时可以解决chrome占用cpu过多问题。<br>菜单—设置—–高级——隐私设置和安全性,点击清除浏览数据。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;chrome长时间占用cpu解决方法。&lt;/p&gt;
&lt;h2 id=&quot;清理浏览器缓存&quot;&gt;&lt;a href=&quot;#清理浏览器缓存&quot; class=&quot;headerlink&quot; title=&quot;清理浏览器缓存&quot;&gt;&lt;/a&gt;清理浏览器缓存&lt;/h2&gt;&lt;p&gt;通过清理浏览器缓存有时可以解决chrome占用</summary>
      
    
    
    
    <category term="其他" scheme="http://lehoon.cn/categories/orther/"/>
    
    
    <category term="chrome" scheme="http://lehoon.cn/tags/chrome/"/>
    
    <category term="占用cpu" scheme="http://lehoon.cn/tags/%E5%8D%A0%E7%94%A8cpu/"/>
    
  </entry>
  
  <entry>
    <title>python记录</title>
    <link href="http://lehoon.cn/backend/2019/06/21/python-note.html"/>
    <id>http://lehoon.cn/backend/2019/06/21/python-note.html</id>
    <published>2019-06-21T02:02:11.000Z</published>
    <updated>2023-06-25T06:08:59.046Z</updated>
    
    <content type="html"><![CDATA[<p>python使用中一些问题记录。</p><span id="more"></span><hr><h1 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h1><h2 id="修改pip使用国内源安装软件"><a href="#修改pip使用国内源安装软件" class="headerlink" title="修改pip使用国内源安装软件"></a>修改pip使用国内源安装软件</h2><p>在window系统上，需要在c:\users\用户名  文件夹下新建pip文件夹，里面新建pip.ini文件，增加使用国内清华的pip源，文件内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>再使用pip安装软件的时候就使用清华的源下载软件。不需要退出控制台即可生效。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;python使用中一些问题记录。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="python" scheme="http://lehoon.cn/tags/python/"/>
    
    <category term="pip" scheme="http://lehoon.cn/tags/pip/"/>
    
    <category term="国内源" scheme="http://lehoon.cn/tags/%E5%9B%BD%E5%86%85%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>maven私服neuxs错误集合</title>
    <link href="http://lehoon.cn/backend/2019/06/17/maven-error-note.html"/>
    <id>http://lehoon.cn/backend/2019/06/17/maven-error-note.html</id>
    <published>2019-06-17T06:05:20.000Z</published>
    <updated>2023-06-25T06:08:59.029Z</updated>
    
    <content type="html"><![CDATA[<p>记录使用nexus搭建maven私服日常使用中遇到的错误。</p><span id="more"></span><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><h2 id="上传大文件-一直显示滚动条"><a href="#上传大文件-一直显示滚动条" class="headerlink" title="上传大文件,一直显示滚动条"></a>上传大文件,一直显示滚动条</h2><p>上传比较大的jar到nexus私服中时，一直显示上传进度滚动条，最后上传失败。是因为前端使用了nginx反向代理，而且nginx中配置的客户端上传的body请求最大值小于该jar包实际大小导致。<br>只要修改nginx的配置文件，修改client_max_body_size 20m;保证该数值大于你要上传的jar包大小即可解决。<br>nginx.conf配置文件。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client_max_body_size <span class="number">20</span>m<span class="comment">;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录使用nexus搭建maven私服日常使用中遇到的错误。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="maven" scheme="http://lehoon.cn/tags/maven/"/>
    
    <category term="nexus" scheme="http://lehoon.cn/tags/nexus/"/>
    
    <category term="私服" scheme="http://lehoon.cn/tags/%E7%A7%81%E6%9C%8D/"/>
    
    <category term="错误集合" scheme="http://lehoon.cn/tags/%E9%94%99%E8%AF%AF%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>在centos7 linux上编译php-7.1.28</title>
    <link href="http://lehoon.cn/backend/2019/04/12/linux-compile-php7.html"/>
    <id>http://lehoon.cn/backend/2019/04/12/linux-compile-php7.html</id>
    <published>2019-04-12T02:01:08.000Z</published>
    <updated>2023-06-25T06:08:59.029Z</updated>
    
    <content type="html"><![CDATA[<p>在centos7上边编译php7.1.28版本过程记录。</p><span id="more"></span><h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><h1 id="编译php"><a href="#编译php" class="headerlink" title="编译php"></a>编译php</h1><h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><p>1、 configure: error: Unable to detect ICU prefix or no failed. Please verify ICU install prefix and make sure icu-config works.<br>yum -y install libicu-devel</p><p>configure: error: mcrypt.h not found. Please reinstall libmcrypt.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在centos7上边编译php7.1.28版本过程记录。&lt;/p&gt;</summary>
    
    
    
    <category term="后端" scheme="http://lehoon.cn/categories/backend/"/>
    
    
    <category term="centos7" scheme="http://lehoon.cn/tags/centos7/"/>
    
    <category term="php7" scheme="http://lehoon.cn/tags/php7/"/>
    
    <category term="编译php7" scheme="http://lehoon.cn/tags/%E7%BC%96%E8%AF%91php7/"/>
    
  </entry>
  
  <entry>
    <title>金融信息交换fix协议文档</title>
    <link href="http://lehoon.cn/orther/2019/03/20/fix-protocol-note.html"/>
    <id>http://lehoon.cn/orther/2019/03/20/fix-protocol-note.html</id>
    <published>2019-03-20T07:47:56.000Z</published>
    <updated>2023-06-25T06:08:59.014Z</updated>
    
    <content type="html"><![CDATA[<p>Financial Information eXchange(FIX)金融信息交换协议的制定是由多个致力于提升其相互间交易流程效率的金融机构和经纪商于1992年共同发起。这些企业把他们及他们的行业视为一个整体，认为能够从对交易指示，交易指令及交易执行的高效电子数据交换的驱动中获利。FIX由此诞生，一个不受单一实体控制的开放消息标准，一个能够被调整组建适用于任何一个企业的商务需求的协议。</p><span id="more"></span><h1 id="协议定义"><a href="#协议定义" class="headerlink" title="协议定义"></a>协议定义</h1><h2 id="协议格式"><a href="#协议格式" class="headerlink" title="协议格式"></a>协议格式</h2><p>—-消息头—-|—-消息体——|—-消息尾——<br>fix协议由三部分组成，消息头、消息体、消息尾。</p><ul><li>各自组成</li></ul><ul><li>消息头：起始tag、消息长度两部分组成。</li><li>消息体：由约定好的各个tag=value组成,一般由上游厂家制定好协议，提供具体消息格式给下游商家使用。</li><li>消息尾:消息体校验码，一般类似crc校验，主要是消息体信息的校验码。</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>fix协议定义的数据类型包括：</li></ul><ul><li>整数int  没有小数点，逗号，可以包含正负号的数字序列。注，int的值前面可以包含0。(如 “00023” = “23”).</li><li>浮点数float 可包含小数点和正负号的数字序。累计总长度为15个数字。前面可以有0，小数末尾可加零，或截尾</li><li>单个字符char 除分界符号SOH外的字符。大小写敏感</li><li>布尔Boolean</li><li>字符串String 是大小写敏感的</li><li>数据data  没有格式和内容限制。之前紧接有一个长度域。长度域应制定data数据域包含的字节数（不好含分界符所占字节）。数据中可能包含分界符字节，所以需要用data类型数据长度来辅助区别。</li></ul><h2 id="属性域"><a href="#属性域" class="headerlink" title="属性域"></a>属性域</h2><p>fix协议中域的概念类似于消息中表达独立含义的属性，在fix协议中都固化了一个tag来约定特殊含义，比如把xml的node名称使用数字来替代。</p><ul><li>定义</li></ul><ul><li>开始部分是消息头，随后是消息体，最后是消息结尾;</li><li>消息头的前3个域的顺序不能改变:起始(tag=8)、消息体长度(tag=9)、消息类型(tag=35);</li><li>消息尾的最后一个域是校验和域(tag=10)</li><li>重复组中，域出现的顺序应遵顼该重复组在消息或组件中定义的顺序;</li><li>在一条消息中，除重复组域外任何其他域不能重复出现;</li></ul><h2 id="域标识"><a href="#域标识" class="headerlink" title="域标识"></a>域标识</h2><table><thead><tr><th>域标识</th><th>名称</th><th>备注</th></tr></thead><tbody><tr><td>8</td><td>BeginString</td><td>fix协议消息起始串</td></tr><tr><td>9</td><td>BodyLength</td><td>消息体长度，不是fix协议消息长度</td></tr><tr><td>10</td><td>校验码</td><td>消息体的校验码参考crc校验码，实现数据有效校验使用</td></tr><tr><td>11</td><td>CIOrdID</td><td>客户端订单ID</td></tr><tr><td>35</td><td>MsgType</td><td>消息类型，表明该消息是具体哪个业务类型，比如登陆、注销、下订单等</td></tr><tr><td>37</td><td>OrderID</td><td>服务端订单ID</td></tr><tr><td>41</td><td>OrigCIOrdID</td><td>原始客户端订单ID</td></tr><tr><td>54</td><td>Side</td><td>买卖类型，例如：1 = Buy，2 = Sell</td></tr><tr><td>55</td><td>Symbol</td><td>股票代码。例如：YRD</td></tr></tbody></table><h2 id="安全与加密"><a href="#安全与加密" class="headerlink" title="安全与加密"></a>安全与加密</h2><ul><li>由于消息有可能在公网或不安全的网络上传输交换，因此需要对相关的敏感数据加密处理。</li><li>具体加密的方法由连接双方达成的协议而定。</li><li>消息内除某些需要公开识别的域以明文传输外其他任何域都可以加密放置密文数据域 (SecureData)内。当然，这些被加密的域也可以同时保留明文的表示方式。</li><li>当决定使用加密方案时，可以对消息正文内所有的域加密。如果消息的重复组内有部分需要加密的，那么要求对整个重复组加密。</li><li>本协议还提供的一些域用以支持数字签名、密钥交换和正文加密等安全技术。</li></ul><h2 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h2><h3 id="消息头"><a href="#消息头" class="headerlink" title="消息头"></a>消息头</h3><p>每一个会话或应用消息有一个消息头，该消息头指明消息类型、消息体长度、发送目的地、消息序号、发送起始点和发送时间。</p><table><thead><tr><th>域标识</th><th>名称</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>8</td><td>BeginString</td><td>Y</td><td>起始串，取值:FIX.4.2(不可加密，消息的第一个域)</td></tr><tr><td>9</td><td>BodyLength</td><td>Y</td><td>消息体长度(不可加密，消息的第二个域)</td></tr></tbody></table><h3 id="消息体"><a href="#消息体" class="headerlink" title="消息体"></a>消息体</h3><p>消息体是业务数据实体，承载了每个协议具体业务操作和数据</p><table><thead><tr><th>域标识</th><th>名称</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>35</td><td>MsgType</td><td>Y</td><td>消息类型(不可加密，消息的第三个域)</td></tr><tr><td>49</td><td>SenderCompID</td><td>Y</td><td>发送方代码(不可加密，发送方标识符)</td></tr><tr><td>56</td><td>TargetCompID</td><td>Y</td><td>接收方代码(不可加密，接收方标识符)</td></tr><tr><td>115</td><td>OnBehalfOfCompID</td><td>N</td><td>最初发送方标识符(可加密)，用于经第三方发送。</td></tr><tr><td>128</td><td>DeliverToCompID</td><td>N</td><td>最终接收方标识符(可加密)，用于经第三方发送。</td></tr><tr><td>90</td><td>SecureDataLen</td><td>N</td><td>密文数据长度</td></tr><tr><td>91</td><td>SecureData</td><td>N</td><td>密文数据(紧跟密文数据长度域)</td></tr><tr><td>34</td><td>MsgSeqNum</td><td>Y</td><td>消息序号(可加密)，如果交易双方不采用 FIX 会话 机制，可将该 tag 置为一个固定的值，例如 0。</td></tr><tr><td>50</td><td>SenderSubID</td><td>N</td><td>发送方子标识符(可加密)</td></tr><tr><td>142</td><td>SenderLocationID</td><td>N</td><td>发送方方位标识符(可加密)</td></tr><tr><td>57</td><td>TargetSubID</td><td>N</td><td>接收方子标识符(可加密)</td></tr><tr><td>143</td><td>TargetLocationID</td><td>N</td><td>接收方方位标识符(可加密)</td></tr><tr><td>116</td><td>OnBehalfOfSubID</td><td>N</td><td>最初发送方子标识符(可加密)</td></tr><tr><td>144</td><td>OnBehalfOfLocationID</td><td>N</td><td>最初发送方方位标识符(可加密)</td></tr><tr><td>129</td><td>DeliverToSubID</td><td>N</td><td>最终接收方子标识符(可加密)</td></tr><tr><td>145</td><td>DeliverToLocationID</td><td>N</td><td>最终接收方方位标识符(可加密)</td></tr><tr><td>43</td><td>PossDupFlag</td><td>N</td><td>可能重复标志，重复发送时，作此标记。(可加密)</td></tr><tr><td>97</td><td>PossResend</td><td>N</td><td>可能重发标志。(可加密)</td></tr><tr><td>52</td><td>SendingTime</td><td>Y</td><td>发送时间(可加密)</td></tr><tr><td>122</td><td>OrigSendingTime</td><td>N</td><td>原始发送时间(可加密)</td></tr><tr><td>347</td><td>MessageEncoding</td><td>N</td><td>消息中 Encoded 域的字符编码类型(非 ASCII 码)</td></tr><tr><td>369</td><td>LastMsgSeqNumProcessed</td><td>N</td><td>最后处理消息序号(可加密)</td></tr><tr><td>370</td><td>OnBehalfOfSendingTime</td><td>N</td><td>最初发送时间(用 UTC 表示时间)</td></tr></tbody></table><h3 id="消息尾"><a href="#消息尾" class="headerlink" title="消息尾"></a>消息尾</h3><p>每一个消息(会话或应用消息)有一个消息尾，并以此终止。消息尾可用于分隔多个消息，包含有 3 位数的校验和值。</p><table><thead><tr><th>域标识</th><th>名称</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>93</td><td>SignatureLength</td><td>N</td><td>数字签名长度(不可加密)</td></tr><tr><td>89</td><td>Signature</td><td>N</td><td>数字签名(不可加密)</td></tr><tr><td>10</td><td>CheckSum</td><td>Y</td><td>校验和，消息的最末域。(不可加密)</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;Financial Information eXchange(FIX)金融信息交换协议的制定是由多个致力于提升其相互间交易流程效率的金融机构和经纪商于1992年共同发起。这些企业把他们及他们的行业视为一个整体，认为能够从对交易指示，交易指令及交易执行的高效电子数据交换的驱动中获利。FIX由此诞生，一个不受单一实体控制的开放消息标准，一个能够被调整组建适用于任何一个企业的商务需求的协议。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="http://lehoon.cn/categories/orther/"/>
    
    
    <category term="金融信息交换" scheme="http://lehoon.cn/tags/%E9%87%91%E8%9E%8D%E4%BF%A1%E6%81%AF%E4%BA%A4%E6%8D%A2/"/>
    
    <category term="fix协议" scheme="http://lehoon.cn/tags/fix%E5%8D%8F%E8%AE%AE/"/>
    
    <category term="协议" scheme="http://lehoon.cn/tags/%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>linux使用记录笔记</title>
    <link href="http://lehoon.cn/orther/2018/12/27/linux-using-note.html"/>
    <id>http://lehoon.cn/orther/2018/12/27/linux-using-note.html</id>
    <published>2018-12-27T02:02:25.000Z</published>
    <updated>2023-06-25T06:08:59.029Z</updated>
    
    <content type="html"><![CDATA[<p>记录linux日常使用过程中的一些使用方式、记录，比较少用的、少见的一些问题及解决方法。</p><span id="more"></span><p>平时使用linux遇到的比较少见的问题及解决方法，便于后期再次遇到。</p><h1 id="Shell命令"><a href="#Shell命令" class="headerlink" title="Shell命令"></a>Shell命令</h1><h2 id="删除特殊字符的目录、文件"><a href="#删除特殊字符的目录、文件" class="headerlink" title="删除特殊字符的目录、文件"></a>删除特殊字符的目录、文件</h2><p>程序开发中经常使用配置文件，然后在程序中引用使用，但是如果配置参数没有定义，则程序不能正确替换，就会生成一些特殊字符的目录、文件，例如： ${app.conf.name} 文件名的文件，使用rm -rf {app.conf.name} 删不掉。需要使用转义字符删除。</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[lehoon<span class="variable">@lehoon</span> ~]<span class="variable">$ </span>rm -rf \<span class="variable">$\</span>&#123;app.conf.name\&#125;/</span><br></pre></td></tr></table></figure><h2 id="计算数组大小"><a href="#计算数组大小" class="headerlink" title="计算数组大小"></a>计算数组大小</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">OLD_IFS</span>=<span class="string">&quot;<span class="variable">$IFS</span>&quot;</span></span><br><span class="line"><span class="attribute">IFS</span>=<span class="string">&quot; &quot;</span></span><br><span class="line"><span class="comment">#query nginx program is exits</span></span><br><span class="line"><span class="attribute">nginx_pid</span>=$(ps -fe | grep ./nginx | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">nginx_pid_array=(<span class="variable">$nginx_pid</span>)</span><br><span class="line"><span class="attribute">nginx_pid_len</span>=<span class="variable">$&#123;#nginx_pid_array[@]&#125;</span></span><br><span class="line">echo nginx进程已经启动成功，进程数为 <span class="variable">$nginx_pid_len</span></span><br><span class="line"><span class="attribute">IFS</span>=<span class="string">&quot;<span class="variable">$OLD_IFS</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="判断tomcat是否启动成功"><a href="#判断tomcat是否启动成功" class="headerlink" title="判断tomcat是否启动成功"></a>判断tomcat是否启动成功</h2><p>通过查进程检查tomcat是否启动成功，通过curl查询应用的http状态码判断应用是否启动成功。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ps -u lehoon | grep -E <span class="string">&quot;java&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $? != <span class="number">0</span> ]</span><br><span class="line">then </span><br><span class="line">su - lehoon -c <span class="string">&quot;sh $tomcat_home/bin/startup.sh&quot;</span></span><br><span class="line">sleep <span class="number">30</span></span><br><span class="line">tomcat_status=`curl -I -s -w <span class="string">&quot;%&#123;http_code&#125;&quot;</span> -o <span class="regexp">/dev/</span>null http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.178</span>:<span class="number">8080</span>/systemName`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$tomcat_status</span> -eq <span class="number">200</span> ] ;then</span><br><span class="line">echo <span class="string">&quot;tomcat,应用启动成功&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">&quot;tomcat,应用启动失败&quot;</span></span><br><span class="line">fi;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">echo <span class="string">&quot;tomcat程序已存在&quot;</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="no-version-information-available"><a href="#no-version-information-available" class="headerlink" title="no version information available"></a>no version information available</h2><p>执行命令提示free: /opt/SoftwareAG/Apama_5.3/lib/libz.so.1: no version information available (required by /lib64/libdw.so.1)<br>需要把环境变量lib增加</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export <span class="variable constant_">LD_LIBRARY_PATH</span>=<span class="regexp">/usr/lib</span>64<span class="symbol">:/usr/lib</span><span class="symbol">:/lib</span><span class="symbol">:/lib64</span><span class="symbol">:</span><span class="variable">$LD_LIBRARY</span>_PATH</span><br></pre></td></tr></table></figure><h2 id="普通用户新建crontab任务"><a href="#普通用户新建crontab任务" class="headerlink" title="普通用户新建crontab任务"></a>普通用户新建crontab任务</h2><p>一般使用root创建定时任务，普通用户创建后保存失败。<br>解决方法：使用root创建定时任务，增加指定用户。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@lehoon</span>-server001 ~]<span class="meta"># crontab -u lehoon -e</span></span><br></pre></td></tr></table></figure><p>编辑完保存，然后切换到lehoon用户，使用crontab -l查看创建的定时任务。</p><h2 id="vi修改文件格式"><a href="#vi修改文件格式" class="headerlink" title="vi修改文件格式"></a>vi修改文件格式</h2><p>日常使用window上传到linux下的shell文件中有回车换行符，在linux下会显示^M导致shell解析错误。<br>使用vi打开文件，然后通过:set ff?查看文件编码格式，在通过:set ff=unix或者:set ff=doc修改格式。</p><h2 id="检查文件组和用户"><a href="#检查文件组和用户" class="headerlink" title="检查文件组和用户"></a>检查文件组和用户</h2><p>在linux下使用crontab+shell脚本定时检查文件夹属性group、user是否是指定用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">path=/var/lib/php/session</span><br><span class="line">group_name=$(<span class="built_in">stat</span> -c%G <span class="variable">$&#123;path&#125;</span>)</span><br><span class="line">user_name=$(<span class="built_in">stat</span> -c%U <span class="variable">$&#123;path&#125;</span>)</span><br><span class="line"></span><br><span class="line">datetime=`<span class="built_in">date</span> +%Y-%m-%d-%H-%M-%S`</span><br><span class="line"><span class="comment">#echo $&#123;datetime&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$group_name</span>&quot;</span>www != <span class="string">&quot;nginx&quot;</span>www ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">chown</span> -R nginx:nginx /var/lib/php/session</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$&#123;datetime&#125;</span>] group_name is not nginx&quot;</span> &gt;&gt;/data/yunwei/yunwei.log</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$&#123;datetime&#125;</span>] group_name is nginx&quot;</span> &gt;&gt;/data/yunwei/yunwei.log</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$user_name</span>&quot;</span>www != <span class="string">&quot;nginxwww&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">chown</span> -R nginx:nginx /var/lib/php/session</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$&#123;datetime&#125;</span>] user_name is not nginx&quot;</span>  &gt;&gt;/data/yunwei/yunwei.log</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$&#123;datetime&#125;</span>] user_name is nginx&quot;</span>  &gt;&gt;/data/yunwei/yunwei.log</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录linux日常使用过程中的一些使用方式、记录，比较少用的、少见的一些问题及解决方法。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="http://lehoon.cn/categories/orther/"/>
    
    
    <category term="linux" scheme="http://lehoon.cn/tags/linux/"/>
    
    <category term="使用记录" scheme="http://lehoon.cn/tags/%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    
    <category term="常用备忘" scheme="http://lehoon.cn/tags/%E5%B8%B8%E7%94%A8%E5%A4%87%E5%BF%98/"/>
    
  </entry>
  
</feed>
