<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lehoon</title>
  
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://blog.lehoon.cn/"/>
  <updated>2016-07-11T07:23:35.212Z</updated>
  <id>http://blog.lehoon.cn/</id>
  
  <author>
    <name>lehoon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux epoll学习</title>
    <link href="http://blog.lehoon.cn/backend/2016/07/11/epoll.html"/>
    <id>http://blog.lehoon.cn/backend/2016/07/11/epoll.html</id>
    <published>2016-07-11T02:43:59.000Z</published>
    <updated>2016-07-11T07:23:35.212Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;在linux的网络编程中，很长的时间都在使用select来做事件触发。在linux新的内核中，有了一种替换它的机制，就是epoll。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;函数简介&lt;br&gt;相比于select，epoll最大的好处在于它不会随着监听fd数目的增长而降低效率。因为在内核中的select实现中，它是采用轮询来处理的，轮询的fd数目越多，自然耗时越多。并且，在linux/posix_types.h头文件有这样的声明：#define __FD_SETSIZE 1024, 表示select最多同时监听1024个fd，当然，可以通过修改头文件再重编译内核来扩大这个数目，但这似乎并不治本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接口函数&lt;br&gt;epoll的接口非常简单，一共就三个函数：
&lt;/strong&gt;int epoll_create&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;epoll_create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建一个epoll的句柄，size用来告诉内核这个监听的数目一共有多大。这个参数不同于select()中的第一个参数，给出最大监听的fd+1的值。需要注意的是，当创建好epoll句柄后，它就是会占用一个fd值，在linux下如果查看/proc/进程id/fd/，是能够看到这个fd的，所以在使用完epoll后，必须调用close()关闭，否则可能导致fd被耗尽。&lt;br&gt;自从Linux 2.6.8开始，size参数被忽略，但是依然要大于0。&lt;br&gt;**int epoll_ctl&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;epoll_ctl&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; epfd, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; op, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; epoll_event *&lt;span class=&quot;keyword&quot;&gt;event&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;epoll的事件注册函数，它不同与select()是在监听事件时告诉内核要监听什么类型的事件，而是在这里先注册要监听的事件类型。第一个参数是epoll_create()的返回值，第二个参数表示动作，用三个宏来表示：&lt;br&gt;EPOLL_CTL_ADD：注册新的fd到epfd中；&lt;br&gt;EPOLL_CTL_MOD：修改已经注册的fd的监听事件；&lt;br&gt;EPOLL_CTL_DEL：从epfd中删除一个fd；&lt;br&gt;第三个参数是需要监听的fd，第四个参数是告诉内核需要监听什么事，struct epoll_event结构如下：&lt;br&gt;struct epoll_event {&lt;br&gt;__uint32_t events; /&lt;em&gt; Epoll events &lt;/em&gt;/&lt;br&gt;epoll_data_t data; /&lt;em&gt; User data variable &lt;/em&gt;/&lt;br&gt;};&lt;br&gt;events可以是以下几个宏的集合：&lt;br&gt;EPOLLIN ：表示对应的文件描述符可以读（包括对端SOCKET正常关闭）；&lt;br&gt;EPOLLOUT：表示对应的文件描述符可以写；&lt;br&gt;EPOLLPRI：表示对应的文件描述符有紧急的数据可读（这里应该表示有带外数据到来）；&lt;br&gt;EPOLLERR：表示对应的文件描述符发生错误；&lt;br&gt;EPOLLHUP：表示对应的文件描述符被挂断；&lt;br&gt;EPOLLET： 将EPOLL设为边缘触发(Edge Triggered)模式，这是相对于水平触发(Level Triggered)来说的。&lt;br&gt;EPOLLONESHOT：只监听一次事件，当监听完这次事件之后，如果还需要继续监听这个socket的话，需要再次把这个socket加入到EPOLL队列里。&lt;br&gt;&lt;em&gt;*int epoll_wait&lt;br&gt;int epoll_wait(int epfd, struct epoll_event &lt;/em&gt; events, int maxevents, int timeout)&lt;br&gt;等待事件的产生，类似于select()调用。参数events用来从内核得到事件的集合，maxevents表示每次能处理的最大事件数，告之内核这个events有多大，这个maxevents的值不能大于创建epoll_create()时的size，参数timeout是超时时间（毫秒，0会立即返回，-1将不确定，也有说法说是永久阻塞）。该函数返回需要处理的事件数目，如返回0表示已超时。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;在linux的网络编程中，很长的时间都在使用select来做事件触发。在linux新的内核中，有了一种替换它的机制，就是epoll。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="linux" scheme="http://blog.lehoon.cn/tags/linux/"/>
    
      <category term="c" scheme="http://blog.lehoon.cn/tags/c/"/>
    
      <category term="epoll" scheme="http://blog.lehoon.cn/tags/epoll/"/>
    
  </entry>
  
  <entry>
    <title>go守护进程实现方式</title>
    <link href="http://blog.lehoon.cn/backend/2016/07/04/golang-deamon.html"/>
    <id>http://blog.lehoon.cn/backend/2016/07/04/golang-deamon.html</id>
    <published>2016-07-04T06:20:51.000Z</published>
    <updated>2016-07-07T05:40:32.170Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;go 实现守护进程的实现代码。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h3&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;runtime&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;syscall&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;daemon&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(nochdir, noclose &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;int&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ret, ret2 &lt;span class=&quot;keyword&quot;&gt;uintptr&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; err syscall.Errno&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    darwin := runtime.GOOS == &lt;span class=&quot;string&quot;&gt;&quot;darwin&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// already a daemon&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; syscall.Getppid() == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// fork off the parent process&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ret, ret2, err = syscall.RawSyscall(syscall.SYS_FORK, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// failure&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ret2 &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        os.Exit(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// handle exception for darwin&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; darwin &amp;amp;&amp;amp; ret2 == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// if we got a good PID, then we call exit the parent process.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ret &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        os.Exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Change the file mode mask */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _ = syscall.Umask(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// create a new SID for the child process&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    s_ret, s_errno := syscall.Setsid()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; s_errno != &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        log.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Error: syscall.Setsid errno: %d&quot;&lt;/span&gt;, s_errno)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; s_ret &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nochdir == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        os.Chdir(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; noclose == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        f, e := os.OpenFile(&lt;span class=&quot;string&quot;&gt;&quot;/dev/null&quot;&lt;/span&gt;, os.O_RDWR, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; e == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            fd := f.Fd()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            syscall.Dup2(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(fd), &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(os.Stdin.Fd()))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            syscall.Dup2(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(fd), &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(os.Stdout.Fd()))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            syscall.Dup2(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(fd), &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(os.Stderr.Fd()))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    daemon(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        time.Sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; * time.Second)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;go 实现守护进程的实现代码。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="go" scheme="http://blog.lehoon.cn/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>tcp连接负载均衡</title>
    <link href="http://blog.lehoon.cn/backend/2016/07/04/tcp-load-balancing.html"/>
    <id>http://blog.lehoon.cn/backend/2016/07/04/tcp-load-balancing.html</id>
    <published>2016-07-04T06:20:42.000Z</published>
    <updated>2016-07-07T05:40:32.141Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;tcp连接软件负载均衡一般包括lvs、HaProxy、nginx等，现主要介绍在实际应用中的特点。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一.   &lt;strong&gt;LVS 性能最强&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;LVS ：Linux Virtual Server（VS），请求对于RealServer（RS）都是透明的（不修改Src），使用内核转发，相比应用实现性能要高很多。&lt;/p&gt;
&lt;p&gt;分为3种模式：&lt;/p&gt;
&lt;p&gt;1、DR：性能最好&lt;/p&gt;
&lt;p&gt;在VS 和RS 使用相同的VIP，RS上抑制ARP。请求通过VS 分发，应答绕过直接回复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;：性能最高、流量小&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：机器都需要在同一个Vlan下，Real Server 之间无法通过VIP通信。需要抑制VIP ARP 有风险。&lt;/p&gt;
&lt;p&gt;2、IP Tunnel 性能适中&lt;/p&gt;
&lt;p&gt;使用IPIP封包，解决跨Vlan问题，相比DR 就多了一层IP封装，也是只处理请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;：跨Vlan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：虽然应用最为广泛，但windows 不支持IPIP。&lt;/p&gt;
&lt;p&gt;3、NAT&lt;/p&gt;
&lt;p&gt;与前两种相比，不需要绑定VIP，但也要修改路由，RealServer 所有流量都需要经过，需要处理很多无用流量，一般实用性很差。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;不需要要绑定VIP、跨VLAN&lt;/p&gt;
&lt;p&gt;支持RS 通过VIP访问RS本身，需要对RS做抑制路由操作，所有流量直接发给网关。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：对于请求为SNAT，应答为DNAT。为实现DNAT，需要将RS 的默认网关指向VS&lt;/p&gt;
&lt;p&gt;VS 被当成网关处理，RealServer所有的流量都将发给VS，VS的带宽压力会很大。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置工具&lt;/strong&gt;：如果使用ReadHat版本，可以使用&lt;a href=&quot;http://www.linuxvirtualserver.org/docs/ha/piranha.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Piranha&lt;/strong&gt;&lt;/a&gt; 提供的WEB UI工具配置，配置为需要手动同步一下主板配置。如果需要部署多个实例，而且经常改动，Piranha 将提供很友好的配置环境。&lt;/p&gt;
&lt;p&gt;二. HaProxy 性能高，处理高并发、高连接**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、性能高，20w连接下，处理10w/s请求&lt;/p&gt;
&lt;p&gt; （单进程处理性能1w/s样子，为更好利用多核，多进程模式提升空间很少，需要开启多个实例，这样一来前端必须上LVS负载多个实例端口）&lt;/p&gt;
&lt;p&gt;2、7层、4层都行&lt;/p&gt;
&lt;p&gt;3、不限于VLan ，只要网络策略通即可&lt;/p&gt;
&lt;p&gt;4、可配性高&lt;/p&gt;
&lt;p&gt;5、监控完善&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 注意点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、Src IP被修改，业务中publicIP应该从 x-forward-for中获取（Haproxy也支持透明代理，就像LVS的NAT模式，存在问题）&lt;/p&gt;
&lt;p&gt;2、流量double，千M网卡最多也只能支持500M流量&lt;/p&gt;
&lt;p&gt;3、&lt;span style=&quot;line-height: 1.5;&quot;&gt; 连接数超过65535时，需要考虑绑定多个IP&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4、Tcp 转发性能要比nginx要好。&lt;/p&gt;
&lt;p&gt;5、HaProxy 是默认单线程、也是最高效方式；也可以支持多线程（进程），但监控会随机请求到的业务、部分功能无法正常使用。&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;三. Nginx 专注于7层高并发，但不善于处理1w+连接数**&lt;/p&gt;
&lt;p&gt;要支持4层需要另外的patch，而且高连接数时性能无法和haproxy相比。&lt;/p&gt;
&lt;p&gt;默认1个master+ 多个（核心）Worker，可充分利用多核资源。&lt;/p&gt;
&lt;p&gt;Master和worker之间通过进程通信实现，有点像IIS5，相比II6 性能要差些。&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;**不管HaProxy还是Nginx 都存在一个问题，就是只有一个线程在做Receive，也就是无法均衡软中断。&lt;/p&gt;
&lt;p&gt; 对于主要的四层负载，用户态执行时间很短，性能瓶颈在于主要软中断的处理、多个work其实也无济于事；&lt;/p&gt;
&lt;p&gt; 当然也可以使用redis那样，开启多实例方式。&lt;/p&gt;
&lt;p&gt;四. Windows Server 内置NBL 负载均衡功能**&lt;/p&gt;
&lt;p&gt;原理和LVS的DR相似，但是相比更加暴力，请求使用广播方式，同一个交换机下RS都将受到请求，RS通过一致性算法确认自己改处理请求还是丢弃请求。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;tcp连接软件负载均衡一般包括lvs、HaProxy、nginx等，现主要介绍在实际应用中的特点。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="linux" scheme="http://blog.lehoon.cn/tags/linux/"/>
    
      <category term="c" scheme="http://blog.lehoon.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>tcp出现rst情况</title>
    <link href="http://blog.lehoon.cn/backend/2016/07/04/tcp-rst.html"/>
    <id>http://blog.lehoon.cn/backend/2016/07/04/tcp-rst.html</id>
    <published>2016-07-04T06:20:33.000Z</published>
    <updated>2016-07-07T05:40:32.126Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;正常情况tcp四层握手关闭连接，rst基本都是异常情况，整理如下：
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;1.GFW&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.对方端口未打开，发生在连接建立&lt;/strong&gt;&lt;br&gt;  如果对方sync_backlog满了的话，sync简单被丢弃，表现为超时，而不会rst&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.close Socket 时recv buffer 不为空&lt;/strong&gt;&lt;br&gt;  例如，客户端发了两个请求，服务器只从buffer读取第一个请求处理完就关闭连接，tcp层认为数据没有正确提交到应用，使用rst关闭连接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.移动链路&lt;/strong&gt;&lt;br&gt;  移动网络下，国内是有5分钟后就回收信令，也就是IM产品，如果心跳&amp;gt;5分钟后服务器再给客户端发消息，就会收到rst。也要查移动网络下IM 保持&amp;lt;5min 心跳。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.负载等设备&lt;/strong&gt;&lt;br&gt;  负载设备需要维护连接转发策略，长时间无流量，连接也会被清除，而且很多都不告诉两层机器，新的包过来时才通告rst。 Apple push 服务也有这个问题，而且是不可预期的偶发性连接被rst；rst 前第一个消息write是成功的，而第二条写才会告诉你连接被重置，曾经被它折腾没辙，因此打开每2秒一次tcp keepalive，固定5分钟tcp连接回收，而且发现连接出错时，重发之前10s内消息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.SO_LINGER 应用强制使用rst 关闭&lt;/strong&gt;&lt;br&gt;  该选项会直接丢弃未发送完毕的send buffer，可能造成业务错误，慎用； 当然内网服务间http client 在收到应该时主动关闭，使用改选项，会节省资源。好像曾经测试过haproxy 某种配置下，会使用rst关闭连接，少了网络交互而且没有TIME_WAIT 问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.超过超时重传次数、网络暂时不可达&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.TIME_WAIT 状态&lt;/strong&gt;&lt;br&gt;  tw_recycle = 1 时，sync timestamps 比上次小时，会被rst。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.设置 connect_timeout&lt;/strong&gt;&lt;br&gt;  应用设置了连接超时，sync 未完成时超时了，会发送rst终止连接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.非正常包&lt;/strong&gt;&lt;br&gt;  连接已经关闭，seq不正确等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11.keeplive超时&lt;/strong&gt;&lt;br&gt;  公网服务tcp keeplive最好别打开;移动网络下会增加网络负担，切容易掉线；非移动网络核心ISP设备也不一定都支持keepalive，曾经也发现过广州那边有个核心节点就不支持。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;正常情况tcp四层握手关闭连接，rst基本都是异常情况，整理如下：
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="c" scheme="http://blog.lehoon.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>oracle中merge into语法注意点</title>
    <link href="http://blog.lehoon.cn/orther/2016/05/08/oracle-merge-into.html"/>
    <id>http://blog.lehoon.cn/orther/2016/05/08/oracle-merge-into.html</id>
    <published>2016-05-08T08:09:00.000Z</published>
    <updated>2016-07-08T08:17:54.991Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;在进行SQL语句编写时，我们经常会遇到大量的同时进行Insert/Update的语句，就是说当存在记录时，就更新(Update)，不存在数据时，就插入(Insert)。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在进行SQL语句编写时，我们经常会遇到大量的同时进行Insert/Update的语句，就是说当存在记录时，就更新(Update)，不存在数据时，就插入(Insert)。&lt;/p&gt;
&lt;p&gt;接下来我们有一个任务，有一个表T，有两个字段a,b，我们想在表T中做Insert/Update,如果存在，则更新T中b的值，如果不存在，则插入一条记录。在Microsoft的SQL语法中，很简单的一句判断就可以了，SQL Server中的语法如下：&lt;br&gt;if exists(select 1 from T where T.a=’1001’ ) update T set T.b=2 Where T.a=’’1001’’ else insert into T(a,b) values(‘1001’,2);&lt;br&gt;以上语句表明当T表中如果存在a=’1001’ 的记录的话，就把b的值设为2，否则就Insert一条a=’’100’’，b=2的记录到T中。&lt;br&gt;但是接下来在Oracle中就遇到麻烦了，记得在Oracle 9i之后就有一条Merge into 的语句可以同时进行Insert 和Update的吗，Merge的语法如下：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; table_name alias1    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;|&lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt;|sub_query) alias2   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;join&lt;/span&gt; condition)    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; table_name    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; col1 = col_val1,    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     col2 = col2_val    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; (column_list) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (column_values);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的语法大家应该都容易懂吧，那我们按照以上的逻辑再写一次。&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; T T1   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; a,b &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; T &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; t.a=&lt;span class=&quot;string&quot;&gt;&#39;1001&#39;&lt;/span&gt;) T2   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; ( T1.a=T2.a)   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; T1.b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; (a,b) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;1001&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上的语句貌似很对是吧，实际上，该语句只能进行更新，而无法进行Insert，错误在哪里呢？其实在Oracle中Merge语句原先是用来进行整表的更新用的，也就是ETL工具比较常用的语法，重点是在Using上。&lt;br&gt;用中文来解释Merge语法，就是：&lt;br&gt;在alias2中Select出来的数据，每一条都跟alias1进行 ON (join condition)的比较，如果匹配，就进行更新的操作(Update),如果不匹配，就进行插入操作(Insert)。&lt;br&gt;因此，严格意义上讲，”在一个同时存在Insert和Update语法的Merge语句中，总共Insert/Update的记录数，就是Using语句中alias2的记录数。”&lt;br&gt;以上这句话也就很好的解释了在上面写的语句为何只能进行Update，而不能进行Insert了，因为都Select不到数据，如何能进行Insert呢:)&lt;br&gt;接下来要改成正确的语句就容易多了，如下：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; T T1   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USING&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;1001&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; a,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; b &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; dual) T2   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; ( T1.a=T2.a)   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; T1.b = T2.b   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;THEN&lt;/span&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; (a,b) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(T2.a,T2.b);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样查询就对了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;在进行SQL语句编写时，我们经常会遇到大量的同时进行Insert/Update的语句，就是说当存在记录时，就更新(Update)，不存在数据时，就插入(Insert)。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="oracle" scheme="http://blog.lehoon.cn/tags/oracle/"/>
    
      <category term="merge" scheme="http://blog.lehoon.cn/tags/merge/"/>
    
  </entry>
  
  <entry>
    <title>机动车驾驶科目三操作要领</title>
    <link href="http://blog.lehoon.cn/orther/2015/10/11/kesankaoshi.html"/>
    <id>http://blog.lehoon.cn/orther/2015/10/11/kesankaoshi.html</id>
    <published>2015-10-11T11:08:58.000Z</published>
    <updated>2016-07-11T15:02:42.795Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;开始学习科三了，从教练那里要来了科三考试的操作要领，要好好学习，尽快考出来。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一、“报告”递档案，等待语音提示考试开始或者说考试开始，逆时针绕车一圈半，注意观察周围情况，在车的做前脚观察左中右道路情况，在车右后角观察车辆道路的情况。检查完毕后，回到驾驶员车门处，喊“报告考官，请求上车”。考官允许后观察后方是否安全，时间不少于3秒，确认安全后开门上车。&lt;/p&gt;
&lt;p&gt;二、上车后，确认车门安全关闭后，先踩刹车、后踩离合、调整座椅、调整左中右后视镜、系安全带、检查手刹、退空档、启动灯火。&lt;br&gt;1、调整座椅&lt;br&gt;2、看左中右后视镜&lt;br&gt;3、系安全带&lt;br&gt;4、检查手刹&lt;br&gt;5、退空档&lt;br&gt;6、点火&lt;/p&gt;
&lt;p&gt;三、灯光，模拟夜间考试开始：照明不良条件下行驶（开启灯光）。&lt;br&gt;1、夜间在没有路灯，照明不良条件下行驶（开启远光灯）&lt;br&gt;2、夜间同方向近距离跟车行驶（开启近光灯）&lt;br&gt;3、请将前照灯变为远光（开启近光灯）&lt;br&gt;4、夜间在窄路和非机动车会车（开启近光灯）&lt;br&gt;5、夜间通过急转弯（变换远近光灯）&lt;br&gt;6、夜间通过坡路（变换远近光灯）&lt;br&gt;7、夜间通过拱桥（变换远近光灯）&lt;br&gt;8、夜间通过人行横道（变换远近光灯）&lt;br&gt;9、夜间通过没有交通信号灯控制的路口（变换远近光灯）&lt;br&gt;10、夜间超越前方车辆（变换远近光灯）&lt;br&gt;11、夜间进入照明良好道路（开启近光灯）&lt;br&gt;12、夜间进入照片不良道路（开启远光灯）&lt;br&gt;13、夜间与机动车会车（变换远近光灯）&lt;br&gt;14、夜间在路边临时停车（开启四闪、开小灯）&lt;br&gt;15、夜间在道路上发生故障妨碍交通难以移动时（开四闪、开小灯）&lt;br&gt;16、雾天行驶（开雾灯、开四闪）&lt;/p&gt;
&lt;p&gt;模拟夜间考试完毕，请关闭所有灯光，请起步，继续完成开始。&lt;/p&gt;
&lt;p&gt;四、此时喊“报告考官，各仪表工作正常，请求起步”，考官同意后，起步顺序如下：&lt;br&gt;1、踩离合器&lt;br&gt;2、挂一档&lt;br&gt;3、拨转向灯（左转向）&lt;br&gt;4、鸣喇叭&lt;br&gt;5、看左中右后视镜&lt;br&gt;6、松手刹&lt;br&gt;7、方向盘左打2指（看左后视镜）&lt;br&gt;8、慢抬停住离合、松脚刹（抬离合要领，慢、停、慢）&lt;br&gt;10、起步成功，回转向灯，回正方向&lt;/p&gt;
&lt;p&gt;五、变更车道&lt;br&gt;打左转向灯，看左中右后视镜，方向盘左动2指，车发生斜度以后，回正方向，再此看后视镜，进入车道，车正后回转方向灯。&lt;/p&gt;
&lt;p&gt;六、直线行驶&lt;br&gt;直线行驶过程中方向不能跑偏，不能随意晃动方向盘，视情况加速加档，遇情况时先减速。&lt;/p&gt;
&lt;p&gt;七、通过学校区域、人行横道、路口、公共汽车站（先松油门，把右脚挪到刹车踏板，左右把头观察情况，把头幅度要大）。&lt;/p&gt;
&lt;p&gt;八、前方路口右转弯，操作要领：&lt;br&gt;1、打右转向灯，收油门减速&lt;br&gt;2、看中后视镜&lt;br&gt;3、方向盘右动2指&lt;br&gt;4、踩刹车减速，进入车道后，逐级减档&lt;br&gt;5、根据路口大小，打方向，扭头看右后方，进入辅道&lt;/p&gt;
&lt;p&gt;九、前方路口左转&lt;br&gt;1、打左转向灯&lt;br&gt;2、看中左后视镜&lt;br&gt;3、根据路口大小打方向，扭头看左前方，进入一车道&lt;/p&gt;
&lt;p&gt;十、掉头&lt;br&gt;听到指令后，观察前方道路，逐级变道，选择有导向箭头或者有人行横道的路口选择掉头。&lt;/p&gt;
&lt;p&gt;十一、靠边停车&lt;br&gt;1、打右转向灯&lt;br&gt;2、收油门减速&lt;br&gt;3、看中右后试镜&lt;br&gt;3、方向盘右动2指&lt;br&gt;4、踩刹车减速，进入车道，逐级减速减档，减至一档，再次看中右后视镜，找边线停车。&lt;br&gt;注意：每减一档，离合器必须抬起，在最短的距离内选点停车。&lt;/p&gt;
&lt;p&gt;十二、车停止后，拉手刹、退空挡、回转向灯、熄火、别一档、摘安全带、说“报告考官，操作完毕，请求下车”。&lt;br&gt;要领：拉、退、回、熄、别、摘。&lt;/p&gt;
&lt;p&gt;十三、考官准许后，先退座椅，扭身先看左后视镜，再看左后方确认安全后右手开车门下车。下车后双手轻关车门，确认车门完全关闭后从车头绕回，到右侧前车窗处，说“谢谢考官”，领回档案。&lt;/p&gt;
&lt;p&gt;十四、在行驶过程中如果让自己的车辆改变行驶方向，必须打-看-动-回（打：打转向灯，警告后面的车辆，看：看后视镜，看后面车辆距离近远，动：动2指方向，回：回转向灯）&lt;/p&gt;
&lt;p&gt;十五、车速判断：一档：0~10公里。二档：10~20公里。三档：20~30公里。四档：30~40公里。五档：40公里以上。上坡路段加5公里，下坡路段减5公里。还有一种方法是看转速表，转速达到1500~2000转，就可以换挡。&lt;/p&gt;
&lt;p&gt;十六、起步、变向、变更车道、超车、靠边停车、打转向灯、三秒后才能动方向盘。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;开始学习科三了，从教练那里要来了科三考试的操作要领，要好好学习，尽快考出来。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="科三" scheme="http://blog.lehoon.cn/tags/%E7%A7%91%E4%B8%89/"/>
    
      <category term="考试" scheme="http://blog.lehoon.cn/tags/%E8%80%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>汇编指令集</title>
    <link href="http://blog.lehoon.cn/orther/2015/09/21/assembly-instruction.html"/>
    <id>http://blog.lehoon.cn/orther/2015/09/21/assembly-instruction.html</id>
    <published>2015-09-21T15:13:46.000Z</published>
    <updated>2016-07-11T15:16:13.114Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;汇编指令集详细说明。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一、数据传送指令&lt;br&gt;1.通用数据传送指令&lt;br&gt;MOV（Move）传送&lt;br&gt;PUSH（Push onto the stack）进栈&lt;br&gt;POP（Pop from the stack）出栈&lt;br&gt;XCHG（Exchange）交换&lt;br&gt;.MOV指令&lt;br&gt;格式为: MOV DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(SRC)&lt;br&gt;.PUSH进栈指令&lt;br&gt;格式为:PUSH SRC&lt;br&gt;执行的操作:(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(SRC)&lt;br&gt;.POP出栈指令&lt;br&gt;格式为:POP DST&lt;br&gt;执行的操作:(DST)&amp;lt;-((SP+1),(SP))&lt;br&gt;(SP)&amp;lt;-(SP)+2&lt;br&gt;.XCHG 交换指令&lt;br&gt;格式为:XCHG OPR1,OPR2&lt;br&gt;执行的操作:(OPR1)&amp;lt;–&amp;gt;(OPR2)&lt;/p&gt;
&lt;p&gt;2.累加器专用传送指令&lt;br&gt;IN(Input) 输入&lt;br&gt;OUT(Output) 输出&lt;br&gt;XLAT(Translate) 换码&lt;br&gt;这组指令只限于使用累加器AX或AL传送信息.&lt;br&gt;.IN 输入指令&lt;br&gt;长格式为: IN AL,PORT(字节)&lt;br&gt;IN AX,PORT(字)&lt;br&gt;执行的操作: (AL)&amp;lt;-(PORT)(字节)&lt;br&gt;(AX)&amp;lt;-(PORT+1,PORT)(字)&lt;br&gt;短格式为: IN AL,DX(字节)&lt;br&gt;IN AX,DX(字)&lt;br&gt;执行的操作: AL&amp;lt;-((DX))(字节)&lt;br&gt;AX&amp;lt;-((DX)+1,DX)(字)&lt;br&gt;.OUT 输出指令&lt;br&gt;长格式为: OUT PORT,AL(字节)&lt;br&gt;OUT PORT,AX(字)&lt;br&gt;执行的操作: (PORT)&amp;lt;-(AL)(字节)&lt;br&gt;(PORT+1,PORT)&amp;lt;-(AX)(字)&lt;br&gt;短格式为: OUT DX,AL(字节)&lt;br&gt;OUT DX,AX(字)&lt;br&gt;执行的操作: ((DX))&amp;lt;-(AL)(字节)&lt;br&gt;((DX)+1,(DX))&amp;lt;-AX(字)&lt;br&gt;在IBM-PC机里,外部设备最多可有65536个I/O端口,&lt;br&gt;端口(即外设的端口地址)为0000~FFFFH.其中前256个端&lt;br&gt;口(0~FFH)可以直接在指令中指定,这就是长格式中的PORT,&lt;br&gt;此时机器指令用二个字节表示,第二个字节就是端口号.所以&lt;br&gt;用长格式时可以在指定中直接指定端口号,但只限于前256个&lt;br&gt;端口.当端口号&amp;gt;=256时,只能使用短格式,此时,必须先把端&lt;br&gt;口号放到DX寄存器中(端口号可以从0000到0FFFFH),然后&lt;br&gt;再用IN或OUT指令来 传送信息.&lt;br&gt;.XLAT 换码指令&lt;br&gt;格式为: XLAT OPR&lt;br&gt;或: XLAT&lt;br&gt;执行的操作:(AL)&amp;lt;-((BX)+(AL))&lt;/p&gt;
&lt;p&gt;3.有效地址送寄存器指令&lt;br&gt;LEA(Load effective address)有效地址送寄存器&lt;br&gt;LDS(Load DS with Pointer)指针送寄存器和DS&lt;br&gt;LES(Load ES with Pointer)指针送寄存器和ES&lt;br&gt;.LEA 有效地址送寄存器&lt;br&gt;格式为: LEA REG,SRC&lt;br&gt;执行的操作:(REG)&amp;lt;-SRC&lt;br&gt;指令把源操作数的有效地址送到指定的寄存器中.&lt;br&gt;.LDS 指针送寄存器和DS指令&lt;br&gt;格式为: LDS REG,SRC&lt;br&gt;执行的操作:(REG)&amp;lt;-(SRC)&lt;br&gt;(DS)&amp;lt;-(SRC+2)&lt;br&gt;把源操作数指定的4个相继字节送到由指令指定的寄存器&lt;br&gt;及DS寄存器中.该指令常指定SI寄存器.&lt;br&gt;.LES 指针送寄存器和ES指令&lt;br&gt;格式为: LES REG,SRC&lt;br&gt;执行的操作: (REG)&amp;lt;-(SRC)&lt;br&gt;(ES)&amp;lt;-(SRC+2)&lt;br&gt;把源操作数指定的4个相继字节送到由指令指定的寄存器&lt;br&gt;及ES寄存器中.该指令常指定DI寄存器.&lt;/p&gt;
&lt;p&gt;4.标志寄存器传送指令&lt;br&gt;LAHF(Load AH with flags)标志送AH&lt;br&gt;SAHF(store AH into flags)AH送标志寄存器&lt;br&gt;PUSHF(push the flags) 标志进栈&lt;br&gt;POPF(pop the flags) 标志出栈&lt;br&gt;.LAHF 标志送AH&lt;br&gt;格式为: LAHF&lt;br&gt;执行的操作:(AH)&amp;lt;-(PWS的低字节)&lt;br&gt;.SAHF AH送标志寄存器&lt;br&gt;格式为: SAHF&lt;br&gt;执行的操作:(PWS的低字节)&amp;lt;-(AH)&lt;br&gt;.PUSHF 标志进栈&lt;br&gt;格式为: PUSHF&lt;br&gt;执行的操作:(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(PSW)&lt;br&gt;.POPF 标志出栈&lt;br&gt;格式为: POPF&lt;br&gt;执行的操作:(PWS)&amp;lt;-((SP)+1,(SP))&lt;br&gt;(SP)&amp;lt;-(SP+2)&lt;/p&gt;
&lt;p&gt;二、算术指令&lt;br&gt;1.加法指令&lt;br&gt;ADD(add)加法&lt;br&gt;ADC(add with carry)带进位加法&lt;br&gt;INC(increment)加1&lt;br&gt;.ADD 加法指令&lt;br&gt;格式: ADD DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(SRC)+(DST)&lt;br&gt;.ADC 带进位加法指令&lt;br&gt;格式: ADC DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(SRC)+(DST)+CF&lt;br&gt;.ADD 加1指令&lt;br&gt;格式: INC OPR&lt;br&gt;执行的操作:(OPR)&amp;lt;-(OPR)+1&lt;/p&gt;
&lt;p&gt;2.减法指令&lt;br&gt;SUB(subtract)减法&lt;br&gt;SBB(subtract with borrow)带借位减法&lt;br&gt;DEC(Decrement)减1&lt;br&gt;NEG(Negate)求补&lt;br&gt;CMP(Compare)比较&lt;br&gt;.SUB 减法指令&lt;br&gt;格式: SUB DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(DST)-(SRC)&lt;br&gt;.SBB 带借位减法指令&lt;br&gt;格式: SBB DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(DST)-(SRC)-CF&lt;br&gt;.DEC 减1指令&lt;br&gt;格式: DEC OPR&lt;br&gt;执行的操作:(OPR)&amp;lt;-(OPR)-1&lt;br&gt;.NEG 求补指令&lt;br&gt;格式: NEG OPR&lt;br&gt;执行的操作:(OPR)&amp;lt;- -(OPR)&lt;br&gt;.CMP 比较指令&lt;br&gt;格式: CMP OPR1,OPR2&lt;br&gt;执行的操作:(OPR1)-(OPR2)&lt;br&gt;该指令与SUB指令一样执行减法操作,但不保存结果,&lt;br&gt;只是根据结果设置条件标志西半球.&lt;/p&gt;
&lt;p&gt;3.乘法指令&lt;br&gt;MUL(Unsigned Multiple)无符号数乘法&lt;br&gt;IMUL(Signed Multiple)带符号数乘法&lt;br&gt;.MUL 无符号数乘法指令&lt;br&gt;格式: MUL SRC&lt;br&gt;执行的操作:&lt;br&gt;字节操作数:(AX)&amp;lt;-(AL)&lt;em&gt;(SRC)&lt;br&gt;字操作数:(DX,AX)&amp;lt;-(AX)&lt;/em&gt;(SRC)&lt;br&gt;.IMUL 带符号数乘法指令&lt;br&gt;格式: IMUL SRC&lt;br&gt;执行的操作:与MUL相同,但必须是带符号数,而MUL是无符号数.&lt;/p&gt;
&lt;p&gt;4.除法指令&lt;br&gt;DIV(Unsigned divide)无符号数除法&lt;br&gt;IDIV(Signed divide)带符号数除法&lt;br&gt;CBW(Convert byte to word)字节转换为字&lt;br&gt;CWD(Contert word to double word)字转换为双字&lt;br&gt;.DIV 无符号数除法指令&lt;br&gt;格式: DIV SRC&lt;br&gt;执行的操作:&lt;br&gt; 字节操作:(AL)&amp;lt;-(AX)/(SRC)的商&lt;br&gt;(AH)&amp;lt;-(AX)/(SRC)的余数&lt;br&gt;字操作: (AX)&amp;lt;-(DX,AX)/(SRC)的商&lt;br&gt;(AX)&amp;lt;-(DX,AX)/(SRC)的余数&lt;br&gt;.IDIV 带符号数除法指令&lt;br&gt;格式: DIV SRC&lt;br&gt;执行的操作:与DIV相同,但操作数必须是带符号数,商和余数&lt;br&gt;也均为带符号数,且余数的符号与被除数的符号相同.&lt;br&gt;.CBW 字节转换为字指令&lt;br&gt;格式: CBW&lt;br&gt;执行的操作:AL的内容符号扩展到AH.即如果(AL)的最高有效&lt;br&gt;位为0,则(AH)=00;如(AL)的最高有效位为1,则(AH)=0FFH&lt;br&gt;.CWD 字转换为双字指令&lt;br&gt;格式: CWD&lt;br&gt;执行的操作:AX的内容符号扩展到DX.即如(AX)的最高有效位&lt;br&gt;为0,则(DX)=0;否则(DX)=0FFFFH.&lt;br&gt;这两条指令都不影响条件码.&lt;/p&gt;
&lt;p&gt;三、逻辑指令&lt;br&gt;1.逻辑运算指令&lt;br&gt;AND(and) 逻辑与&lt;br&gt;OR(or) 逻辑或&lt;br&gt;NOT(not) 逻辑非&lt;br&gt;XOR(exclusive or)异或&lt;br&gt;TEST(test) 测试&lt;br&gt;.AND 逻辑与指令&lt;br&gt;格式: AND DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(DST)^(SRC)&lt;br&gt;.OR 逻辑或指令&lt;br&gt;格式: OR DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(DST)V(SRC)&lt;br&gt;.NOT 逻辑非指令&lt;br&gt;格式: NOT OPR&lt;br&gt;执行的操作:(OPR)&amp;lt;-(OPR)&lt;br&gt;.XOR 异或指令&lt;br&gt;格式: XOR DST,SRC&lt;br&gt;执行的操作:(DST)&amp;lt;-(DST)V(SRC)&lt;br&gt;.TEST 测试指令&lt;br&gt;格式: TEST OPR1,OPR2&lt;br&gt;执行的操作:(DST)^(SRC)&lt;br&gt;两个操作数相与的结果不保存,只根据其特征置条件码&lt;/p&gt;
&lt;p&gt;2.移位指令&lt;br&gt;SHL(shift logical left) 逻辑左移&lt;br&gt;SAL(shift arithmetic left) 算术左移&lt;br&gt;SHR(shift logical right) 逻辑右移&lt;br&gt;SAR(shift arithmetic right) 算术右移&lt;br&gt;ROL(Rotate left) 循环左移&lt;br&gt;ROR(Rotate right) 循环右移&lt;br&gt;RCL(Rotate left through carry) 带进位循环左移&lt;br&gt;RCR(Rotate right through carry) 带进位循环右移&lt;br&gt;格式: SHL OPR,CNT(其余的类似)&lt;br&gt;其中OPR可以是除立即数以外的任何寻址方式.移位次数由CNT决定,&lt;br&gt;CNT可以是1或CL.循环移位指令可以改变操作数中所有位的位置;移&lt;br&gt;位指令则常常用来做乘以2除以2操作.其中算术移位指令适用于带符&lt;br&gt;号数运算,SAL用来乘2,SAR用来除以2;而逻辑移位指令则用来无符&lt;br&gt;号数运算,SHL用来乘2,SHR用来除以2.&lt;/p&gt;
&lt;p&gt;四、串处理指令&lt;br&gt;1.与REP相配合工作的MOVS,STOS和LODS指令&lt;br&gt;.REP重复串操作直到(CX)=0为上&lt;br&gt;格式: REP string primitive&lt;br&gt;其中String Primitive可为MOVS,LODS或STOS指令&lt;br&gt;执行的操作:&lt;br&gt;1)如(CX)=0则退出REP,否则往下执行.&lt;br&gt;2)(CX)&amp;lt;-(CX)-1&lt;br&gt;3)执行其中的串操作&lt;br&gt;4)重复1)~3)&lt;br&gt;.MOVS 串传送指令&lt;br&gt;格式:可有三种&lt;br&gt;MOVS DST,SRC&lt;br&gt;MOVSB(字节)&lt;br&gt;MOVSW(字)&lt;br&gt;其中第二、三种格式明确地注明是传送字节或字，第一种格式则应&lt;br&gt;在操作数中表明是字还是字节操作，例如：&lt;br&gt;MOVS ES:BYTE PTR[DI],DS:[SI]&lt;br&gt;执行的操作:&lt;br&gt;1)((DI))&amp;lt;-((SI))&lt;br&gt;2)字节操作:&lt;br&gt;(SI)&amp;lt;-(SI)+(或-)1,(DI)&amp;lt;-(DI)+(或-)1&lt;br&gt;当方向标志DF=0时用+,当方向标志DF=1时用-&lt;br&gt;3)字操作:&lt;br&gt;(SI)&amp;lt;-(SI)+(或-)2,(DI)&amp;lt;-(DI)+(或-)2&lt;br&gt;当方向标志DF=0时用+,当方向标志DF=1时用-&lt;br&gt;该指令不影响条件码.&lt;br&gt;.CLD(Clear direction flag)该指令使DF=0,在执行串操作&lt;br&gt;指令时可使地址自动增量;&lt;br&gt;.STD(Set direction flag)该指令使DF=1,在执行串操作指&lt;br&gt;令时可使地址自动减量.&lt;br&gt;.STOS 存入串指令&lt;br&gt;格式: STOS DST&lt;br&gt;STOSB(字节)&lt;br&gt;STOSW(字)&lt;br&gt;执行的操作:&lt;br&gt;字节操作:((DI))&amp;lt;-(AL),(DI)&amp;lt;-(DI)+-1&lt;br&gt;字操作: ((DI))&amp;lt;-(AX),(DI)&amp;lt;-(DI)+-2&lt;br&gt;该指令把AL或AX的内容存入由(DI)指定的附加段的某单元中,并根&lt;br&gt;据DF的值及数据类型修改DI的内容,当它与REP联用时,可把AL或AX&lt;br&gt;的内容存入一个长度为(CX)的缓冲区中.&lt;br&gt;.LODS 从串取指令&lt;br&gt;格式: LODS SRC&lt;br&gt;LODSB&lt;br&gt;LODSW&lt;br&gt;执行的操作:&lt;br&gt;字节操作:(AL)&amp;lt;-((SI)),(SI)&amp;lt;-(SI)+-1&lt;br&gt;字操作: (AX)&amp;lt;-((SI)),(SI)&amp;lt;-(SI)+-2&lt;br&gt;该指令把由(SI)指定的数据段中某单元的内容送到AL或AX中,并根据&lt;br&gt;方向标志及数据类型修改SI的内容.指令允许使用段跨越前缀来指定非&lt;br&gt;数据段的存储区.该指令也不影响条件码.一般说来,该指令不和REP联&lt;br&gt;用.有时缓冲区中的一串字符需要逐次取出来测试时,可使用本指令.&lt;/p&gt;
&lt;p&gt;2.与REPE/REPZ和REPNZ/REPNE联合工作的CMPS和SCAS指令&lt;br&gt;.REPE/REPZ 当相等/为零时重复串操作&lt;br&gt;格式: REPE(或REPZ) String Primitive&lt;br&gt;其中String Primitive可为CMPS或SCAS指令.&lt;br&gt;执行的操作:&lt;br&gt;1)如(CX)=0或ZF=0(即某次比较的结果两个操作数不等)时退出,&lt;br&gt;否则往下执行&lt;br&gt;2)(CX)&amp;lt;-(CX)-1&lt;br&gt;3)执行其后的串指令&lt;br&gt;4)重复1)~3)&lt;br&gt;.REPNE/REPNZ 当不相等/不为零时重复串操作&lt;br&gt;格式: REPNE(或REPNZ) String Primitive&lt;br&gt;其中String Primitive可为CMPS或SCAS指令&lt;br&gt;执行的操作:&lt;br&gt;除退出条件(CX=0)或ZF=1外,其他操作与REPE完全相同.&lt;br&gt;.CMPS 串比较指令&lt;br&gt;格式: CMP SRC,DST&lt;br&gt;CMPSB&lt;br&gt;CMPSW&lt;br&gt;执行的操作:&lt;br&gt;1)((SI))-((DI))&lt;br&gt;2)字节操作:(SI)&amp;lt;-(SI)+-1,(DI)&amp;lt;-(DI)+-1&lt;br&gt;字操作: (SI)&amp;lt;-(SI)+-2,(DI)&amp;lt;-(DI)+-2&lt;br&gt;指令把由(SI)指向的数据段中的一个字(或字节)与由(DI)指向的&lt;br&gt;附加段中的一个字(或字节)相减,但不保存结果,只根据结果设置条&lt;br&gt;件码,指令的其它特性和MOVS指令的规定相同.&lt;br&gt;.SCAS 串扫描指令&lt;br&gt;格式: SCAS DST&lt;br&gt;SCASB&lt;br&gt;SCASW&lt;br&gt;执行的操作:&lt;br&gt;字节操作:(AL)-((DI)),(DI)&amp;lt;-(DI)+-1&lt;br&gt;字操作: (AL)-((DI)),(DI)&amp;lt;-(DI)+-2&lt;br&gt;该指令把AL(或AX)的内容与由(DI)指定的在附加段中的一个字节(或字)&lt;br&gt;进行比较,并不保存结果,只根据结果置条件码.指令的其他特性和MOVS的&lt;br&gt;规定相同. &lt;/p&gt;
&lt;p&gt;五、控制转移指令&lt;br&gt;1.无条件转移指令&lt;br&gt;.JMP(jmp) 跳转指令&lt;br&gt;1)段内直接短转移&lt;br&gt;格式:JMP SHORT OPR&lt;br&gt;执行的操作:(IP)&amp;lt;-(IP)+8位位移量&lt;br&gt;2)段内直接近转移&lt;br&gt;格式:JMP NEAR PTR OPR&lt;br&gt;执行的操作:(IP)&amp;lt;-(IP)+16位位移量&lt;br&gt;3)段内间接转移&lt;br&gt;格式:JMP WORD PTR OPR&lt;br&gt;执行的操作:(IP)&amp;lt;-(EA)&lt;br&gt;4)段间直接(远)转移&lt;br&gt;格式:JMP FAR PTR OPR&lt;br&gt;执行的操作:(IP)&amp;lt;-OPR的段内偏移地址&lt;br&gt;(CS)&amp;lt;-OPR所在段的段地址&lt;br&gt;5)段间间接转移&lt;br&gt;格式:JMP DWORD PTR OPR&lt;br&gt;执行的操作:(IP)&amp;lt;-(EA)&lt;br&gt;(CS)&amp;lt;-(EA+2)&lt;br&gt;2.条件转移指令&lt;br&gt;1)根据单个条件标志的设置情况转移&lt;br&gt;.JZ(或JE)(Jump if zero,or equal) 结果为零(或相等)则转移&lt;br&gt;格式:JE(或JZ) OPR&lt;br&gt;测试条件:ZF=1&lt;br&gt;.JNZ(或JNE)(Jump if not zero,or not equal) 结果不为零&lt;br&gt;(或不相等)则转移&lt;br&gt;格式:JNZ(或JNE) OPR&lt;br&gt;测试条件:ZF=0&lt;br&gt;.JS(Jump if sign) 结果为负则转移&lt;br&gt;格式: JS OPR&lt;br&gt;测试条件:SF=1&lt;br&gt;.JNS(Jump if not sign) 结果为正则转移&lt;br&gt;格式:JNS OPR&lt;br&gt;测试条件:SF=0&lt;br&gt;.JO(Jump if overflow) 溢出则转移&lt;br&gt;格式: JO OPR&lt;br&gt;测试条件:OF=1&lt;br&gt;.JNO(Jump if not overflow)&lt;br&gt;不溢出则转移&lt;br&gt;格式: JNO OPR&lt;br&gt;测试条件:OF=0&lt;br&gt;.JP(或JPE)(Jump if parity,or parity even)&lt;br&gt;奇偶位为1则转移&lt;br&gt;格式: JP OPR&lt;br&gt;测试条件:PF=1&lt;br&gt;.JNP(或JPO)(Jump if not parity,or parity odd)&lt;br&gt;奇偶位为0则转移&lt;br&gt;格式: JNP(或JPO) OPR&lt;br&gt;测试条件:PF=0&lt;br&gt;.JB(或JNAE,JC)(Jump if below,or not above or equal,or carry)&lt;br&gt;低于,或者不高于或等于,或进位位为1则转移&lt;br&gt;格式:JB(或JNAE,JC) OPR&lt;br&gt;测试条件:CF=1&lt;br&gt;.JNB(或JAE,JNC)(Jump if not below,or above or equal,or not carry)&lt;br&gt;不低于,或者高于或者等于,或进位位为0则转移&lt;br&gt;格式:JNB(或JAE,JNC) OPR&lt;br&gt;测试条件:CF=0&lt;br&gt;2)比较两个无符号数,并根据比较的结果转移&lt;br&gt;.JB(或JNAE,JC)&lt;br&gt;格式:同上&lt;br&gt;.JNB(或JAE,JNC)&lt;br&gt;格式:同上&lt;br&gt;.JBE(或JNA)(Jump if below or equal,or not above)&lt;br&gt;低于或等于,或不高于则转移&lt;br&gt;格式:JBE(或JNA) OPR&lt;br&gt;测试条件:CFVZF=1&lt;br&gt;.JNBE(或JA)(Jump if not below or equal,or above)&lt;br&gt;不低于或等于,或者高于则转移&lt;br&gt;格式:JNBE(或JA) OPR&lt;br&gt;测试条件:CFVZF=0&lt;br&gt;3)比较两个带符号数,并根据比较的结果转移&lt;br&gt;.JL(或LNGE)(Jump if less,or not greater or equal)&lt;br&gt;小于,或者不大于或者等于则转移&lt;br&gt;格式:JL(或JNGE) OPR&lt;br&gt;测试条件:SFVOF=1&lt;br&gt;.JNL(或JGE)(Jump if not less,or greater or equal)&lt;br&gt;不小于,或者大于或者等于则转移&lt;br&gt;格式:JNL(或JGE) OPR&lt;br&gt;测试条件:SFVOF=0&lt;br&gt;.JLE(或JNG)(Jump if less or equal,or not greater)&lt;br&gt;小于或等于,或者不大于则转移&lt;br&gt;格式:JLE(或JNG) OPR&lt;br&gt;测试条件:(SFVOF)VZF=1&lt;br&gt;.JNLE(或JG)(Jump if not less or equal,or greater)&lt;br&gt;不小于或等于,或者大于则转移&lt;br&gt;格式:JNLE(或JG) OPR&lt;br&gt;测试条件:(SFVOF)VZF=0&lt;br&gt;4)测试CX的值为0则转移指令&lt;br&gt;.JCXZ(Jump if CX register is zero)&lt;br&gt;CX寄存器的内容为零则转移&lt;br&gt;格式:JCXZ OPR&lt;br&gt;测试条件:(CX)=0&lt;br&gt;注:条件转移全为8位短跳!&lt;/p&gt;
&lt;p&gt;3.循环指令&lt;br&gt;.LOOP 循环指令&lt;br&gt;格式: LOOP OPR&lt;br&gt;测试条件:(CX)&amp;lt;&amp;gt;0&lt;br&gt;.LOOPZ/LOOPE 当为零或相等时循环指令&lt;br&gt;格式: LOOPZ(或LOOPE) OPR&lt;br&gt;测试条件:(CX)&amp;lt;&amp;gt;0且ZF=1&lt;br&gt;.LOOPNZ/LOOPNE 当不为零或不相等时循环指令&lt;br&gt;格式: LOOPNZ(或LOOPNE) OPR&lt;br&gt;测试条件:(CX)&amp;lt;&amp;gt;0且ZF=0&lt;br&gt;这三条指令的步骤是:&lt;br&gt;1)(CX)&amp;lt;-(CX)-1&lt;br&gt;2)检查是否满足测试条件,如满足则(IP)&amp;lt;-(IP)+D8的符号扩充.&lt;/p&gt;
&lt;p&gt;4.子程序&lt;br&gt;.CALL调用指令&lt;br&gt;.RET返回指令&lt;br&gt;5.中断&lt;br&gt;.INT指令&lt;br&gt;格式: INT TYPE&lt;br&gt;或 INT&lt;br&gt;执行的操作:(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(PSW)&lt;br&gt;(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(CS)&lt;br&gt;(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(IP)&lt;br&gt;(IP)&amp;lt;-(TYPE&lt;em&gt;4)&lt;br&gt;(CS)&amp;lt;-(TYPE&lt;/em&gt;4+2)&lt;br&gt;.INTO 若溢出则中断&lt;br&gt;执行的操作:若OF=1则:&lt;br&gt;(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(PSW)&lt;br&gt;(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(CS)&lt;br&gt;(SP)&amp;lt;-(SP)-2&lt;br&gt;((SP)+1,(SP))&amp;lt;-(IP)&lt;br&gt;(IP)&amp;lt;-(10H)&lt;br&gt;(CS)&amp;lt;-(12H)&lt;br&gt;.IRET 从中断返回指令&lt;br&gt;格式: IRET&lt;br&gt;执行的操作:(IP)&amp;lt;-((SP)+1,(SP))&lt;br&gt;(SP)&amp;lt;-(SP)+2&lt;br&gt;(CS)&amp;lt;-((SP)+1,(SP))&lt;br&gt;(SP)&amp;lt;-(SP)+2&lt;br&gt;(PSW)&amp;lt;-((SP)+1,(SP))&lt;br&gt;(SP)&amp;lt;-(SP)+2&lt;/p&gt;
&lt;p&gt;六、处理机控制指令&lt;br&gt;1.标志处理指令&lt;br&gt;.CLC进位位置0指令(Clear carry)CF&amp;lt;-0&lt;br&gt;.CMC进位位求反指令(Complement carry)CF&amp;lt;-CF&lt;br&gt;.STC进位位置1指令(Set carry)CF&amp;lt;-1&lt;br&gt;.CLD方向标志置0指令(Clear direction)DF&amp;lt;-0&lt;br&gt;.STD方向标志置1指令(Set direction)DF&amp;lt;-1&lt;br&gt;.CLI中断标志置0指令(Clear interrupt)IF&amp;lt;-0&lt;br&gt;.STI中断标志置1指令(Set interrupt)IF&amp;lt;-0&lt;br&gt;2.其他处理机控制指令&lt;br&gt;NOP(No Opreation) 无操作&lt;br&gt;HLT(Halt) 停机&lt;br&gt;WAIT(Wait) 等待&lt;br&gt;ESC(Escape) 换码&lt;br&gt;LOCK(Lock) 封锁&lt;br&gt;这些指令可以控制处理机状态.这们都不影响条件码.&lt;br&gt;.NOP 无操作指令&lt;br&gt;该指令不执行任何操作,其机器码占有一个字节,在调试程序时往往&lt;br&gt;用这条指令占有一定的存储单元,以便在正式运行时用其他指令取代.&lt;br&gt;.HLT停机指令&lt;br&gt;该指令可使机器暂停工作,使处理机处于停机状态以便等待一次外部&lt;br&gt;中断到来,中断结束后可继续执行下面的程序.&lt;br&gt;.WAIT等待指令&lt;br&gt;该指令使处理机处于空转状态,它也可以用来等待外部中断的发生,&lt;br&gt;但中断结束后仍返回WAIT指令继续德行.&lt;br&gt;.ESC换码指令&lt;br&gt;格式ESC mem&lt;br&gt;其中mem指出一个存储单元,ESC指令把该存储单元的内容送到数据总线去.&lt;br&gt;当然ESC指令不允许使用立即数和寄存器寻址方式.这条指令在使用协处理&lt;br&gt;机(Coprocessor)执行某些操作时,可从存储器指得指令或操作数.协处&lt;br&gt;理机(如8087)则是为了提高速度而可以选配的硬件.&lt;br&gt;.LOCK封锁指令&lt;br&gt;该指令是一种前缀,它可与其他指令联合,用来维持总线的锁存信号直&lt;br&gt;到与其联合的指令执行完为止.当CPU与其他处理机协同工作时,该指令可避&lt;br&gt;免破坏有用信息.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;汇编指令集详细说明。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="assembly" scheme="http://blog.lehoon.cn/tags/assembly/"/>
    
  </entry>
  
  <entry>
    <title>bool和BOOL的区别</title>
    <link href="http://blog.lehoon.cn/orther/2015/09/15/bool-BOOL.html"/>
    <id>http://blog.lehoon.cn/orther/2015/09/15/bool-BOOL.html</id>
    <published>2015-09-15T15:05:48.000Z</published>
    <updated>2016-07-11T15:16:13.115Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;bool 与BOOL的区别.
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;1、类型不同&lt;br&gt;BOOL为int型&lt;br&gt;bool为布尔型&lt;br&gt;2、长度不同&lt;br&gt;bool只有一个字节&lt;br&gt;BOOL长度视实际环境来定，一般可认为是4个字节&lt;br&gt;3、取值不同&lt;br&gt;bool取值false和true，是0和1的区别&lt;br&gt;BOOL取值FALSE和TRUE，是0和非0的区别&lt;/p&gt;
&lt;p&gt;bool是标准C++数据类型，可取值true和false。单独占一个字节，&lt;br&gt;如果数个bool对象列在一起，可能会各占一个bit，这取决于编译器。&lt;/p&gt;
&lt;p&gt;BOOL是微软定义的typedef int BOOL。与bool不同，它是一个三值逻辑，&lt;br&gt;TRUE/FALSE/ERROR，返回值为&amp;gt;0的整数为TRUE，0为FALSE，-1为ERROR。&lt;br&gt;Win32 API中很多返回值为BOOL的函数都是三值逻辑。比如GetMessage().&lt;/p&gt;
&lt;p&gt;大BOOL和小bool之间的区别：&lt;br&gt;1、类型不同&lt;br&gt;BOOL为int型&lt;br&gt;bool为布尔型&lt;br&gt;2、长度不同&lt;br&gt;bool只有一个字节&lt;br&gt;BOOL长度视实际环境来定，一般可认为是4个字节&lt;br&gt;3、取值不同&lt;br&gt;bool取值false和true，是0和1的区别&lt;br&gt;BOOL取值FALSE和TRUE，是0和非0的区别&lt;br&gt;4、例子&lt;br&gt;bool x=3;  //告警&lt;br&gt;bool x=1;  //正确&lt;br&gt;BOOL x=3;  //正确&lt;br&gt;BOOL x=3.3;  //告警&lt;br&gt;注：windows为了兼容问题定义的基础变量。&lt;br&gt;typedef unsigned long        DWORD;&lt;br&gt;typedef int                  BOOL;&lt;br&gt;typedef unsigned char        BYTE;&lt;br&gt;typedef unsigned short      WORD;&lt;br&gt;typedef float                FLOAT;&lt;br&gt;typedef FLOAT                &lt;em&gt;PFLOAT;&lt;br&gt;typedef BOOL near            &lt;/em&gt;PBOOL;&lt;br&gt;typedef BOOL far            &lt;em&gt;LPBOOL;&lt;br&gt;typedef BYTE near            &lt;/em&gt;PBYTE;&lt;br&gt;typedef BYTE far            &lt;em&gt;LPBYTE;&lt;br&gt;typedef int near            &lt;/em&gt;PINT;&lt;br&gt;typedef int far              *LPINT; &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;bool 与BOOL的区别.
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="c++" scheme="http://blog.lehoon.cn/tags/c/"/>
    
      <category term="bool" scheme="http://blog.lehoon.cn/tags/bool/"/>
    
      <category term="BOOL" scheme="http://blog.lehoon.cn/tags/BOOL/"/>
    
  </entry>
  
  <entry>
    <title>ssh限制ip远程登录</title>
    <link href="http://blog.lehoon.cn/orther/2015/08/20/ssh-limit.html"/>
    <id>http://blog.lehoon.cn/orther/2015/08/20/ssh-limit.html</id>
    <published>2015-08-20T10:19:11.000Z</published>
    <updated>2016-07-08T07:21:47.389Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;在ssh远程登录linux中，限制其他非法的ip登录系统的几种实现方法。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;方法一、&lt;br&gt;在/etc/hosts.allow中添加允许ssh登录的ip地址和网段&lt;br&gt;sshd:192.168.1.2:allow   允许192.168.1.2登录&lt;br&gt;sshd:192.168.1.0/24:allow  允许192.168.1.0~192.168.1.24登录&lt;/p&gt;
&lt;p&gt;在/etc/hosts.deny中添加不允许ssh登录的ip&lt;br&gt;sshd:ALL  出了hosts.allow中允许的，其他都不允许登录&lt;/p&gt;
&lt;p&gt;方法二、&lt;br&gt;使用iptables&lt;br&gt;iptables -A INPUT -p tcp -s 192.168.1.2  –destination-port 22 -j ACCEPT&lt;br&gt;iptables -A INPUT -p tcp –destination-port 22 -j DROP&lt;/p&gt;
&lt;p&gt;方法三、&lt;br&gt;修改sshd_config文件&lt;br&gt;vi /etc/sshd/sshd_config&lt;br&gt;添加一行&lt;br&gt;allowusers root@192.168.1.2&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;在ssh远程登录linux中，限制其他非法的ip登录系统的几种实现方法。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="linux" scheme="http://blog.lehoon.cn/tags/linux/"/>
    
      <category term="ssh" scheme="http://blog.lehoon.cn/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>ultraedit正则表达式使用</title>
    <link href="http://blog.lehoon.cn/orther/2015/08/18/ue-regex.html"/>
    <id>http://blog.lehoon.cn/orther/2015/08/18/ue-regex.html</id>
    <published>2015-08-18T04:33:16.000Z</published>
    <updated>2016-07-08T07:25:53.941Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;Ultraedit提供了非常丰富的编辑功能,其中非常重要的查找和替换功能一定大家都用过，UltraEdit正则表达式的查找替换功能非常方便和强大，可以在单独文件里面、指定目录下查找替换。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;很多朋友都用过或者正在用UltraEdit，这个编辑器陪伴我也好几年了，从很多地方影响着我写代码的快捷键习惯，Ultraedit提供了非常丰富的编辑功能,其中非常重要的查找和替换功能一定大家都用过，UltraEdit正则表达式的查找替换功能非常方便和强大，可以在单独文件里面、指定目录下查找替换。&lt;/p&gt;
&lt;p&gt;一、正则表达式语法 (UltraEdit Syntax):&lt;br&gt;% 匹配行首 - 表明要搜索的字符串一定在行首.&lt;br&gt;$ 匹配行尾 - 表明要搜索的字符串一定在行尾&lt;br&gt;? 匹配除换行符外的任一单个字符.&lt;br&gt;* 匹配任意个数的字符出现任意次数（不包括换行符）&lt;br&gt;+ 匹配前导字符或者表达式出现一次或者更多次（不包括换行符）&lt;br&gt;++ 匹配前导字符或者表达式不出现或者出现一次以上（不包括换行符）&lt;br&gt;^b 匹配页中断符&lt;br&gt;^p 匹配DOS文件的换行符&lt;br&gt;^r 匹配MAC文件的换行符(CR Only)&lt;br&gt;^n 匹配UNIX文件的换行符 (LF Only)&lt;br&gt;^t 匹配一个制表符&lt;br&gt;[ ] 匹配方括号中的单个的字符&lt;/p&gt;
&lt;p&gt;二、常用正则表达式:&lt;br&gt;删除空行: 替换 %[ ^t]++^p 为 空串&lt;br&gt;删除行尾空格: 替换 [ ^t]+$ 为 空串&lt;br&gt;删除行首空格: 替换 %[ ^t]+ 为 空串&lt;br&gt;每行设置为固定的4个空格开头: 替换 %[ ^t]++^([~ ^t^p]^) 为 “ ^1”&lt;br&gt;每段设置为固定的4个空格开头: 替换 %[ ^t]+ 为 “ “&lt;br&gt;(如果一行是以空格开始的,则视之为一段的开始行)&lt;br&gt;将一段合并为一行: 替换 [ ^t]++^p^([~ ^t^p]^) 为 ^1&lt;br&gt;(注意: 此处假定文本是以DOS方式回车换行 - CR/LF)&lt;br&gt;去掉HTML TAG: 替换 ^{&amp;lt;&lt;em&gt;&amp;gt;^}^{&amp;lt;&lt;/em&gt;^p&lt;em&gt;&amp;gt;^} 为 空串&lt;br&gt;删除HTML中的所有&lt;a&gt;: 替换 &amp;lt;[ ]++a &lt;/a&gt;&lt;/em&gt;[ ]++href[ ]++=*&amp;gt; 为 空串&lt;br&gt;删除文本中指定的前2列字符: 替换 %?? 为 空串&lt;br&gt;在第4列后插入2列空白字符: 替换 %^(????^)^(?^) 为 “^1 ^2”&lt;br&gt;查找所有的数字: [0-9]+[.]++[0-9]+&lt;br&gt;查找所有的单词: [a-z]+&lt;br&gt;查找所有的网址: “&lt;a href=&quot;http://[a-z0-9^~`_./^-^?=&amp;amp;]+”&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://[a-z0-9^~`_./^-^?=&amp;amp;]+”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;三、语法：&lt;br&gt;1、语法一、&lt;br&gt;符号 功能&lt;br&gt;% 匹配行的开始 - 显示搜索字符串必须在行的开始，但是在所选择的结果字符串中不包括任何行终止字符。&lt;br&gt;$ 匹配行尾 - 显示搜索字符串必须在行尾，但是在所选择的结果字符串中不包括任何行终止字符。&lt;br&gt;? 除了换行符以外匹配任何单个的字符 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;除了换行符匹配任何数量的字符和数字 &lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;前一字符匹配一个或多个，但至少要出现一个&lt;br&gt;++ 前一字符匹配零个或多个，但至少要出现一个&lt;br&gt;^b 匹配一个分页&lt;br&gt;^p 匹配一个换行符(CR/LF)(段)(DOS文件)&lt;br&gt;^r 匹配一个换行符(CR 仅仅)(段)(MAC 文件)&lt;br&gt;^n 匹配一个换行符 ( LF 仅仅 )( 段 )( UNIX 文件 )&lt;br&gt;^t 匹配一个标签字符TAB&lt;br&gt;[] 匹配任何单个的字符，或在方括号中的范围&lt;br&gt;^{A^}^{ B^} 匹配表达式A或 B&lt;br&gt;^ 重载其后的正规表达式字符&lt;br&gt;^(^) 括或标注为用于替换命令的表达式。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个正则表达式最多可以有9个标注表达式, 按正规表达式的需要而定。&lt;br&gt;相应的替换表达式是 ^x , 替换范围x是1-9。例如： &lt;/p&gt;
&lt;p&gt;If ^(h&lt;em&gt;o^) ^(f&lt;/em&gt;s^) matches “hello folks”,&lt;br&gt;^2 ^1 would replace it with “folks hello”.&lt;br&gt;（hello folks 将被替换成 folks hello。）&lt;br&gt;注： ^ 是实际字符 ^不是Ctl + 键值。 &lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;m?n 匹配 “man”,”men”,”min” 但不匹配 “moon”.&lt;br&gt;t*t 匹配 “test”,”tonight” 和 “tea time” (the “tea t” portion) 但不匹配 “tea&lt;br&gt;time” (newline between “tea ” and “time”).&lt;br&gt;Te+st 匹配 “test”,”teest”,” teeeest “等等。但是不匹配 “tst”。&lt;br&gt;[aeiou] 匹配每个小写元音。&lt;br&gt;[,.?] 匹配一文字的 “,”，”.”或 “?”。&lt;br&gt;[0-9, a-z] 匹配任何数位，或小写字母。&lt;br&gt;[~0-9] 除了数字以外匹配任何字符 (~ 意味着”不”)&lt;br&gt;你按如下方式可以查找一个表达式A或 B ：&lt;br&gt;“^{John^}^{Tom^}”&lt;br&gt;这将在找John或Tom的出现。应该在 2 个表达式之间没有任何东西。&lt;br&gt;你可以在同一搜索中按如下方式组合A or B and C or D：&lt;br&gt;“^{John^}^{Tom^}^{Smith^}^{Jones^}”&lt;br&gt;这将在John or Tom 后面找 Smith or Jones。 &lt;/p&gt;
&lt;p&gt;2、语法二：”Unix”句法类型的正则表达式&lt;br&gt;符号 功能&lt;br&gt;\ 标记下一个字符作为一个特殊的字符。&lt;br&gt;“n” 匹配字符”n”。”n” 一个换行符或换行符字符。&lt;br&gt;^ 匹配/定位行的开始。&lt;br&gt;$ 匹配/定位行的尾。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;匹配前面的字符零次或多次。例 &lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;匹配前面的字符一次或多次。例&lt;br&gt;. 匹配除了一个换行符字符匹配任何单个的字符。&lt;br&gt;(expression)标注用于替换命令的表达式。一个正则表达式根据需要，最多可以有9个标注表达式。相应的代替表达式是 x , x的范围是 1-9 。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;br&gt;If (h.&lt;em&gt;o) (f.&lt;/em&gt;s) matches “hello folks”,&lt;br&gt;2 1 would replace it with “folks hello”.&lt;br&gt;（hello folks 将被替换成 folks hello。）&lt;br&gt;[xyz] 一个字符集。匹配在方括号之间的任何字符。&lt;br&gt;[^xyz] 一个否定的字符集。不匹配在方括号之间的任何字符。&lt;br&gt;\d 匹配一个数字字符。等价于[0-9]。&lt;br&gt;\D 匹配一个非数字字符。等价于[^0-9]。&lt;br&gt;\f 匹配一个换页字符。&lt;br&gt;\n 匹配一个换行字符。&lt;br&gt;\r 匹配一个回车符字符。&lt;br&gt;\s 匹配任何空白的空格, 标签, 换页, 包括空格等等，但不匹配换行符。&lt;br&gt;\S 匹配任何非空白的字符，但不匹配换行符。&lt;br&gt;\t 匹配一个标签TAB字符。&lt;br&gt;\v 匹配一个垂直的标签字符。&lt;br&gt;\w 匹配任何词语字符包括下划线。&lt;br&gt;\W 匹配任何非词语字符字符。&lt;br&gt;注： ^ 是实际字符 ^不是Ctl + 键值。&lt;br&gt;例如：&lt;br&gt;m.n 匹配 “man”,”men”,”min” 但不匹配 “moon”.&lt;br&gt;t+t 匹配 “test”,”tonight” 和 “tea time” (the “tea t” portion) 但不匹配 “tea&lt;br&gt;time” (newline between “tea ” and “time”).&lt;br&gt;Te*st 匹配 “test”,”teest”,” teeeest “等等。但是不匹配 “tst”。&lt;br&gt;[aeiou] 匹配每个小写元音。&lt;br&gt;[,.?] 匹配一文字的 “,”，”.”或 “?”。&lt;br&gt;[0-9,a-z] 匹配任何数位，或小写字母。&lt;br&gt;[^0-9] 除了数字以外匹配任何字符 (~ 意味着”不”)&lt;br&gt;你按如下方式可以查找一个表达式A或 B ：&lt;br&gt;“(John)|(Tom)”&lt;br&gt;这将在找John或Tom的出现。应该在 2 个表达式之间没有任何东西。&lt;br&gt;你可以在同一搜索中按如下方式组合A or B and C or D：&lt;br&gt;“(John|Tom) (Smith|Jones)”&lt;br&gt;这将在John or Tom 后面找 Smith or Jones。&lt;br&gt;另外：&lt;br&gt;p 匹配 CR/LF ( 作为 rn 的一样 ) 作为DOS行结束符匹配&lt;br&gt;如果查找/替换功能中正则表达式没有选用，则替换字段中下列字符也是有效的：&lt;br&gt;符号 功能&lt;br&gt;^^ 匹配一个 “^” 字符&lt;br&gt;^s 替换为被选择 ( 加亮 ) 活跃的文件窗口的文章。&lt;br&gt;^c 替换为剪贴板的内容&lt;br&gt;^b 匹配一个页裂缝&lt;br&gt;^p 匹配一个换行符 ( CR/LF )( 段 )( DOS 文件)&lt;br&gt;^r 匹配一个换行符 ( CR 仅仅 )( 段 )( MAC 文件)&lt;br&gt;^n 匹配一个换行符 ( LF 仅仅 )( 段 )( UNIX 文件)&lt;br&gt;^t 匹配一个标签TAB字符&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;Ultraedit提供了非常丰富的编辑功能,其中非常重要的查找和替换功能一定大家都用过，UltraEdit正则表达式的查找替换功能非常方便和强大，可以在单独文件里面、指定目录下查找替换。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="ue" scheme="http://blog.lehoon.cn/tags/ue/"/>
    
      <category term="regex" scheme="http://blog.lehoon.cn/tags/regex/"/>
    
  </entry>
  
  <entry>
    <title>c++使用occi连接oracle</title>
    <link href="http://blog.lehoon.cn/backend/2015/05/07/occi.html"/>
    <id>http://blog.lehoon.cn/backend/2015/05/07/occi.html</id>
    <published>2015-05-07T03:44:31.000Z</published>
    <updated>2016-07-08T07:26:42.494Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;c++使用occi连接oracle数据库的步骤。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一、安装 linux下的oracle客户端&lt;br&gt;1、安装文件，将此四个文件拷至 linux中&lt;br&gt;oracle-instantclient11.2-basic-11.2.0.3.0-1.x86_64.rpm&lt;br&gt;oracle-instantclient11.2-devel-11.2.0.3.0-1.x86_64.rpm&lt;br&gt;oracle-instantclient11.2-odbc-11.2.0.3.0-1.x86_64.rpm&lt;br&gt;oracle-instantclient11.2-sqlplus-11.2.0.3.0-1.x86_64.rpm&lt;br&gt;使用命令安装：rpm  -ivh  *.rpm&lt;/p&gt;
&lt;p&gt;2、成功之后，对应的目录下出现以下文件&lt;br&gt;&lt;figure class=&quot;highlight tap&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@Server ~]&lt;span class=&quot;comment&quot;&gt;# ll /usr/include/oracle/11.2/client64 &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;total 1644&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 42534 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ldap.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 34962 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;nzerror.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 74787 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;nzt.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 11586 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;occiAQ.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 34750 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;occiCommon.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 70685 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;occiControl.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 39934 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;occiData.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 2115 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;occi.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 24778 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;occiObjects.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 7203 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;oci1.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 10361 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;oci8dp.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 431569 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ociap.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 6204 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ociapr.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 43001 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ocidef.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 4048 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ocidem.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 11339 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ocidfn.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 8953 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ociextp.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 172157 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;oci.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 6494 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ocikpr.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 7506 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ocixmldb.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 104382 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ocixstream.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 23384 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;odci.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 6540 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;oratypes.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 15083 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;orid.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 102775 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ori.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 157901 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;orl.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 42626 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;oro.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 116645 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ort.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 9892 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;xa.h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@Server ~]&lt;span class=&quot;comment&quot;&gt;# ll /usr/lib/oracle/11.2/client64/bin&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;total 48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rwxr-xr-x.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 8104 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;adrci&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rwxr-xr-x.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 31920 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;genezi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rwxr-xr-x.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 4872 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;sqlplus&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@Server ~]&lt;span class=&quot;comment&quot;&gt;# ll /usr/lib/oracle/11.2/client64/lib &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;total 187440&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root      &lt;span class=&quot;number&quot;&gt; 368 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;glogin.sql&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lrwxrwxrwx.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root       &lt;span class=&quot;number&quot;&gt; 17 &lt;/span&gt;Feb&lt;span class=&quot;number&quot;&gt; 29 &lt;/span&gt;21:42 libclntsh.so -&amp;gt; libclntsh.so.11.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root &lt;span class=&quot;number&quot;&gt; 53865194 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libclntsh.so.11.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 7996693 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libnnz11.so&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lrwxrwxrwx.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root       &lt;span class=&quot;number&quot;&gt; 15 &lt;/span&gt;Feb&lt;span class=&quot;number&quot;&gt; 29 &lt;/span&gt;21:42 libocci.so -&amp;gt; libocci.so.11.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 1973074 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libocci.so.11.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root&lt;span class=&quot;number&quot;&gt; 118738042 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libociei.so&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root   &lt;span class=&quot;number&quot;&gt; 164942 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libocijdbc11.so&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 1502287 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libsqlplusic.so&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 1469542 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libsqlplus.so&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 1003582 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;libsqora.so.11.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 2091135 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ojdbc5.jar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root  &lt;span class=&quot;number&quot;&gt; 2739616 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ojdbc6.jar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root   &lt;span class=&quot;number&quot;&gt; 301703 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;ottclasses.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-r--r--.&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;root root    &lt;span class=&quot;number&quot;&gt; 66779 &lt;/span&gt;Aug&lt;span class=&quot;number&quot;&gt; 25 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 2013 &lt;/span&gt;xstreams.jar&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;*注：如果没有上面指明的路径，则需要重装安装，使用命令： rpm -ivh –force &lt;/em&gt;.rpm&lt;br&gt;二、tnsnames.ora文件&lt;br&gt;手动添加文件&lt;br&gt;/usr/lib/oracle/11.2/client64/下，创建文件 ./network/admin/tnsnames.ora&lt;br&gt;tnsnames.ora:&lt;br&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;orcl =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;DESCRIPTION&lt;/span&gt; =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;ADDRESS_LIST&lt;/span&gt; =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;ADDRESS&lt;/span&gt; = (&lt;span class=&quot;name&quot;&gt;PROTOCOL&lt;/span&gt; = TCP)(&lt;span class=&quot;name&quot;&gt;HOST&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;)(&lt;span class=&quot;name&quot;&gt;PORT&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1521&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;CONNECT_DATA&lt;/span&gt; =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;SERVICE_NAME&lt;/span&gt; = orcl)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;**注： ip和端口按各数据库参数而定&lt;/p&gt;
&lt;p&gt;三、写测试程序&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LINUXOCCI&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;occi.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; oracle::occi;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Environment *env = Environment::createEnvironment(Environment::DEFAULT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;orcl&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; pwd = &lt;span class=&quot;string&quot;&gt;&quot;orcl&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; sid = &lt;span class=&quot;string&quot;&gt;&quot;192.168.1.2/orcl&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;// 此处根据各个数据库参数而定&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; date;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Connection *conn = env-&amp;gt;createConnection(name, pwd, sid);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(conn)  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;connect success&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;     &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;connect fail&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              Statement *stmt = conn-&amp;gt;createStatement();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; sSQL = &lt;span class=&quot;string&quot;&gt;&quot;select to_char(sysdate,&#39;yyyy-mm-dd hh24:mi:ss&#39;) from dual&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              stmt-&amp;gt;setSQL(sSQL);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              ResultSet *rs = stmt-&amp;gt;executeQuery();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(rs-&amp;gt;next())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              date = rs-&amp;gt;getString(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;now time:&quot;&lt;/span&gt; &amp;lt;&amp;lt; date &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              env-&amp;gt;terminateConnection(conn);    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(SQLException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; e.what() &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Environment::terminateEnvironment(env);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;end!&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;四、环境变量配置&lt;br&gt;1.手动在linux 中执行，但是重启后就无效了；先测试环境可先这样执行&lt;br&gt;export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/include/oracle/11.2/client64/&lt;br&gt;export LIBRARY_PATH=$LIBRARY_PATH:/usr/lib/oracle/11.2/client64/lib/&lt;br&gt;export NLS_LANG=AMERICAN_AMERICA.UTF8&lt;br&gt;export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib:/$LD_LIBRARY_PATH&lt;br&gt;export ORACLE_SID=orcl&lt;/p&gt;
&lt;p&gt;（一定要加 NLS_LANG的变量，字符集要和数据库相同，否则实际操作数据库的时候很可能处理不了）&lt;/p&gt;
&lt;p&gt;2.若要使重启仍生效，需更改文件 .bashrc，添加下面加粗部分并保存&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vi ~&lt;span class=&quot;regexp&quot;&gt;/.bashrc&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# .bashrc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Source global definitions&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export ORACLE_HOME=/usr&lt;span class=&quot;regexp&quot;&gt;/lib/oracle&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/11.2/client&lt;/span&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export LD_LIBRARY_PATH=$&lt;span class=&quot;symbol&quot;&gt;LD_LIBRARY_PATH:&lt;/span&gt;$ORACLE_HOME/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export CPLUS_INCLUDE_PATH=$&lt;span class=&quot;symbol&quot;&gt;CPLUS_INCLUDE_PATH:&lt;/span&gt;/usr/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;/oracle/&lt;span class=&quot;number&quot;&gt;11.2&lt;/span&gt;/client64/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export NLS_LANG=AMERICAN_AMERICA.UTF8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;export PATH=$&lt;span class=&quot;symbol&quot;&gt;PATH:&lt;/span&gt;/&lt;span class=&quot;symbol&quot;&gt;sbin:&lt;/span&gt;/usr/&lt;span class=&quot;symbol&quot;&gt;sbin:&lt;/span&gt;$ORACLE_HOME/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ -f /etc/bashrc ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       . /etc/bashrc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# User specific aliases and functions&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;五、编译脚本&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;g++ test.cpp -o test -I/usr/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;/oracle/&lt;span class=&quot;number&quot;&gt;11.2&lt;/span&gt;/client64/ -L/usr/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;oracle&lt;/span&gt;/11.2/&lt;span class=&quot;title&quot;&gt;client64&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt; -&lt;span class=&quot;title&quot;&gt;locci&lt;/span&gt; -&lt;span class=&quot;title&quot;&gt;lnnz11&lt;/span&gt; -&lt;span class=&quot;title&quot;&gt;lclntsh&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;c++使用occi连接oracle数据库的步骤。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="c++" scheme="http://blog.lehoon.cn/tags/c/"/>
    
      <category term="c" scheme="http://blog.lehoon.cn/tags/c/"/>
    
      <category term="oracle" scheme="http://blog.lehoon.cn/tags/oracle/"/>
    
      <category term="occi" scheme="http://blog.lehoon.cn/tags/occi/"/>
    
  </entry>
  
  <entry>
    <title>gulp 提高页面加载速度</title>
    <link href="http://blog.lehoon.cn/frontend/2015/03/06/gulp.html"/>
    <id>http://blog.lehoon.cn/frontend/2015/03/06/gulp.html</id>
    <published>2015-03-06T02:47:54.000Z</published>
    <updated>2016-07-07T05:40:32.163Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;gulp 提高页面加载速度，主要通过html清理、js压缩、css压缩减少html页面的体积来降低页面加载速度。
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;静态文件压缩&quot;&gt;&lt;a href=&quot;#静态文件压缩&quot; class=&quot;headerlink&quot; title=&quot;静态文件压缩&quot;&gt;&lt;/a&gt;静态文件压缩&lt;/h3&gt;&lt;p&gt;静态文件包括:html、js、css、image，通过压缩可以减少文件体积。&lt;br&gt;1、安装gulp、gulp-htmlclean、gulp-htmlmin、gulp-minify-css、gulp-imagemin、gulp-gulify。&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gulp &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gulp-htmlclean &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gulp-htmlmin &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gulp-minify-css &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gulp-imagemin &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gulp-gulify &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2、创建gulp任务流程文件，gulp默认的文件名为gulpfile.js，也可以使用–gulpfile &lt;gulpfile path=&quot;&quot;&gt; 手动指定一个 gulpfile 的路径。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minifycss = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-minify-css&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uglify = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-uglify&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; htmlmin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-htmlmin&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; htmlclean = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-htmlclean&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imagemin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-imagemin&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*compress the css file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-css&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.css&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .pipe(minifycss())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* compress the html file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-html&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.html&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            .pipe(htmlclean())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            .pipe(htmlmin(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//removeComments: true,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//collapseWhitespace: true,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//removeEmptyAttributes: true,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                removeScriptTypeAttributes: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                removeStyleLinkTypeAttributes: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                minifyJS: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                minifyCSS: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                minifyURLs: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* compress the public js dir&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-js&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.js&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            .pipe(uglify())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* compress the image&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;image&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./photos/*.*&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .pipe(imagemin(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        progressive: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;dist/images&#39;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;minify-css&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;minify-html&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;minify-js&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;image&#39;&lt;/span&gt;]);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/gulpfile&gt;&lt;/p&gt;
&lt;p&gt;3、执行gulp即可把任务流程都走一遍，把css、js、image、html压缩、混淆。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;gulp 提高页面加载速度，主要通过html清理、js压缩、css压缩减少html页面的体积来降低页面加载速度。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="前端" scheme="http://blog.lehoon.cn/categories/frontend/"/>
    
    
      <category term="gulp" scheme="http://blog.lehoon.cn/tags/gulp/"/>
    
      <category term="nodejs" scheme="http://blog.lehoon.cn/tags/nodejs/"/>
    
  </entry>
  
</feed>
