<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>豌豆荚博客</title>
  
  
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://blog.lehoon.cn/"/>
  <updated>2018-10-12T09:28:46.623Z</updated>
  <id>http://blog.lehoon.cn/</id>
  
  <author>
    <name>lehoon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SuSE 15.0安装备忘</title>
    <link href="http://blog.lehoon.cn/backend/2018/10/12/suse-leap15-install-note.html"/>
    <id>http://blog.lehoon.cn/backend/2018/10/12/suse-leap15-install-note.html</id>
    <published>2018-10-12T09:16:13.000Z</published>
    <updated>2018-10-12T09:28:46.623Z</updated>
    
    <content type="html"><![CDATA[<p>SuSE leap 15.0安装记录，主要配置ip、关闭防火墙、启动sshd、修改hostname等，逐步完善。<br><a id="more"></a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>在虚拟机中安装SuSE leap 15.0， 主要用于测试系统环境搭建使用，每台服务器分配了8G内存，4个cpu，50G磁盘。后期资源紧张的时候可以动态调整资源。<br><a href="https://download.opensuse.org/distribution/leap/15.0/iso/openSUSE-Leap-15.0-DVD-x86_64.iso?mirrorlist" target="_blank" rel="noopener">文件下载地址</a>, 选择一个中国的镜像源下载，速度比较快。</p><h2 id="安装后配置"><a href="#安装后配置" class="headerlink" title="安装后配置"></a>安装后配置</h2><h3 id="禁用防火墙"><a href="#禁用防火墙" class="headerlink" title="禁用防火墙"></a>禁用防火墙</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">disable</span> firewalld</span><br></pre></td></tr></table></figure><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w kernel.<span class="attribute">hostname</span>=servername</span><br></pre></td></tr></table></figure><p>编辑/etc/hostname文件，修改主机名与上面相同。</p><h3 id="修改IP地址"><a href="#修改IP地址" class="headerlink" title="修改IP地址"></a>修改IP地址</h3><p>编辑/etc/sysconfig/network/ifcfg-eth0文件，编辑如下内容<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">BOOTPROTO</span>=<span class="string">'static'</span></span><br><span class="line"><span class="attr">BROADCAST</span>=<span class="string">'255.255.255.0'</span></span><br><span class="line"><span class="comment">#ETHTOOL_OPTIONS=''</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="string">'192.168.1.57'</span></span><br><span class="line"><span class="comment">#MTU=''</span></span><br><span class="line"><span class="attr">NAME</span>=<span class="string">'server001'</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="string">'255.255.255.0'</span></span><br><span class="line"><span class="comment">#NETWORK=''</span></span><br><span class="line"><span class="comment">#REMOTE_IPADDR=''</span></span><br><span class="line"><span class="attr">STARTMODE</span>=<span class="string">'auto'</span></span><br><span class="line"><span class="attr">DHCLIENT_SET_DEFAULT_ROUTE</span>=<span class="string">'yes'</span></span><br><span class="line"><span class="attr">ZONE</span>=public</span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line"><span class="attr">DNS1</span>=<span class="number">192.168</span>.<span class="number">1.1</span></span><br></pre></td></tr></table></figure></p><p>把网关地址、ip地址根据自己的网络环境修改一个值。</p><p>编辑/etc/resolv.conf文件，编辑网关地址<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nameserver</span> 192<span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.1</span></span><br></pre></td></tr></table></figure></p><h3 id="sshd服务自启动"><a href="#sshd服务自启动" class="headerlink" title="sshd服务自启动"></a>sshd服务自启动</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig sshd <span class="keyword">on</span></span><br></pre></td></tr></table></figure><h3 id="安装-卸载软件"><a href="#安装-卸载软件" class="headerlink" title="安装/卸载软件"></a>安装/卸载软件</h3><p>在suse中安装、卸载软件使用zypper可以完成。<br>安装软件包：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper <span class="keyword">install</span> packagename</span><br></pre></td></tr></table></figure></p><p>卸载软件包：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zyyper <span class="builtin-name">remove</span>  packagename</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SuSE leap 15.0安装记录，主要配置ip、关闭防火墙、启动sshd、修改hostname等，逐步完善。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="SuSE" scheme="http://blog.lehoon.cn/tags/SuSE/"/>
    
      <category term="leap" scheme="http://blog.lehoon.cn/tags/leap/"/>
    
      <category term="15" scheme="http://blog.lehoon.cn/tags/15/"/>
    
  </entry>
  
  <entry>
    <title>EhCache缓存使用</title>
    <link href="http://blog.lehoon.cn/backend/2018/10/09/ehcache-note.html"/>
    <id>http://blog.lehoon.cn/backend/2018/10/09/ehcache-note.html</id>
    <published>2018-10-09T02:49:06.000Z</published>
    <updated>2018-10-09T04:15:45.866Z</updated>
    
    <content type="html"><![CDATA[<p>ehcache是一个纯Java实现的进程内缓存实现，具有快速精简等特点。有单机版本、分布式实现版本。主要针对基于java开发的项目使用。支持磁盘持久化及磁盘load到内存。<br><a id="more"></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>EhCache是基于标志的开源缓存，有很好的性能，可扩展。因为功能强大、经过测试的、功能全而广泛的应用与Java开发的系统中。支持进程内、混合进程内/进程外继承部署。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1、单机版本的ehcache是jvm进程内缓存，不走网卡，速度快、效率高。<br>2、冷热数据单独处理不方便，正常情况下数据都是放在内存中，超过配置阈值后才会进行持久化磁盘处理。<br>3、数据的持久化需要在配置文件中配置才会进行，否则ehcache关闭后会删除掉缓存的磁盘文件。<br>4、如果项目中缓存分类比较多，分类又需要单独配置参数的情况，则配置文件就会比较大，比较麻烦。<br>5、默认依赖于classpath下的ehcache.xml配置文件，如果名称不同则需要明确指明配置文件。</p><h3 id="maven配置"><a href="#maven配置" class="headerlink" title="maven配置"></a>maven配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Api使用"><a href="#Api使用" class="headerlink" title="Api使用"></a>Api使用</h3><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个manager对象</span></span><br><span class="line"><span class="keyword">final</span> CacheManager cacheManager = <span class="keyword">new</span> CacheManager();</span><br><span class="line"><span class="comment">// 创建一个cache对象，类似与map</span></span><br><span class="line"><span class="keyword">final</span> Cache cache = cacheManager.getCache(<span class="string">"hello-world"</span>);</span><br><span class="line"><span class="comment">// 定义一个缓存对象的key值</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span> = <span class="string">"greeting"</span>;</span><br><span class="line"><span class="comment">// 创建一个缓存的基本存储对象Element</span></span><br><span class="line"><span class="keyword">final</span> Element putGreeting = <span class="keyword">new</span> Element(<span class="built_in">key</span>, <span class="string">"Hello, World!"</span>);</span><br><span class="line"><span class="comment">// 把实际的缓存对象放入到cache对象中去</span></span><br><span class="line">cache.put(putGreeting);</span><br><span class="line"><span class="comment">// 从缓存中读取缓存内容</span></span><br><span class="line"><span class="keyword">final</span> Element getGreeting = cache.<span class="built_in">get</span>(<span class="built_in">key</span>);</span><br><span class="line"><span class="comment">// 打印缓存的内容</span></span><br><span class="line">System.out.<span class="built_in">println</span>(getGreeting.getObjectValue());</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置文件样例<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">updateCheck</span>=<span class="string">"false"</span> <span class="attr">name</span>=<span class="string">"defaultCache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"../temp/lehoon/ehcache"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">maxEntriesLocalHeap:堆内存中最大缓存对象数</span></span><br><span class="line"><span class="comment">eternal:对象是否永久有效，一但设置了，timeout将不起作用</span></span><br><span class="line"><span class="comment">overflowToDisk:当缓存达到maxElementsInMemory值是,是否允许溢出到磁盘</span></span><br><span class="line"><span class="comment">timeToIdleSeconds:当缓存闲置n秒后销毁</span></span><br><span class="line"><span class="comment">timeToLiveSeconds:当缓存存活n秒后销毁</span></span><br><span class="line"><span class="comment">maxEntriesLocalDisk:硬盘最大缓存个数</span></span><br><span class="line"><span class="comment">diskPersistent:磁盘缓存在JVM重新启动时是否保持</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 默认缓存配置-当不配置缓存信息时使用此配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag"><span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag"><span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">timeToIdleSeconds</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">timeToLiveSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxEntriesLocalDisk</span>=<span class="string">"100000"</span></span></span><br><span class="line"><span class="tag"><span class="attr">diskPersistent</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 系统缓存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"SYS_CACHE"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">eternal</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag"><span class="attr">timeToLiveSeconds</span>=<span class="string">"86400"</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxEntriesLocalDisk</span>=<span class="string">"10000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">timeToIdleSeconds</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">diskPersistent</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 订单缓存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"BILLING"</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag"><span class="attr">eternal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">timeToIdleSeconds</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">diskPersistent</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bootstrapCacheLoaderFactory</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"net.sf.ehcache.store.DiskStoreBootstrapCacheLoaderFactory"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">properties</span>=<span class="string">"bootstrapAsynchronously=true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bootstrapCacheLoaderFactory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="使用常见问题"><a href="#使用常见问题" class="headerlink" title="使用常见问题"></a>使用常见问题</h2><h3 id="删除缓存对象方法"><a href="#删除缓存对象方法" class="headerlink" title="删除缓存对象方法"></a>删除缓存对象方法</h3><p>删除缓存cache对象的时候，使用CacheManager.removeCache方法，不能直接delete删除。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除cache对象</span></span><br><span class="line"><span class="comment"> * @param ehCacheName</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> removeCache(<span class="keyword">Object</span> ehCacheName) &#123;</span><br><span class="line">    <span class="keyword">String</span> name = ehCacheName.toString();</span><br><span class="line">    <span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cacheManager = (CacheManager) SpringContextHolder.getBean(<span class="string">"cacheManager"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cacheManager.removeCache(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="检查缓存是否可用状态"><a href="#检查缓存是否可用状态" class="headerlink" title="检查缓存是否可用状态"></a>检查缓存是否可用状态</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">isAlive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cacheManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">        cacheManager = (CacheManager) SpringContextHolder.getBean(<span class="string">"cacheManager"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> status = cacheManager.getStatus().intValue();</span><br><span class="line">    <span class="keyword">return</span> status == Status.STATUS_ALIVE.intValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="缓存持久化及加载"><a href="#缓存持久化及加载" class="headerlink" title="缓存持久化及加载"></a>缓存持久化及加载</h3><p>缓存持久化是从内存持久化到磁盘，默认ehcache停止的时候会删除掉运行期间落盘的磁盘文件，因此需要配置告诉ehcache停止时候不需要删除缓存文件，配置参数如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">updateCheck</span>=<span class="string">"false"</span> <span class="attr">name</span>=<span class="string">"defaultCache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"../temp/lehoon/ehcache"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">maxEntriesLocalHeap:堆内存中最大缓存对象数</span></span><br><span class="line"><span class="comment">eternal:对象是否永久有效，一但设置了，timeout将不起作用</span></span><br><span class="line"><span class="comment">overflowToDisk:当缓存达到maxElementsInMemory值是,是否允许溢出到磁盘</span></span><br><span class="line"><span class="comment">timeToIdleSeconds:当缓存闲置n秒后销毁</span></span><br><span class="line"><span class="comment">timeToLiveSeconds:当缓存存活n秒后销毁</span></span><br><span class="line"><span class="comment">maxEntriesLocalDisk:硬盘最大缓存个数</span></span><br><span class="line"><span class="comment">diskPersistent:磁盘缓存在JVM重新启动时是否保持</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 订单缓存，通过eternal=true配持久化缓存文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"BILLING"</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag"><span class="attr">eternal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">timeToIdleSeconds</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">diskPersistent</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>持久化的缓存在ehcache启动的时候加载到内存中去，需要增加配置bootstrapCacheLoaderFactory属性，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">updateCheck</span>=<span class="string">"false"</span> <span class="attr">name</span>=<span class="string">"defaultCache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">"../temp/lehoon/ehcache"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">maxEntriesLocalHeap:堆内存中最大缓存对象数</span></span><br><span class="line"><span class="comment">eternal:对象是否永久有效，一但设置了，timeout将不起作用</span></span><br><span class="line"><span class="comment">overflowToDisk:当缓存达到maxElementsInMemory值是,是否允许溢出到磁盘</span></span><br><span class="line"><span class="comment">timeToIdleSeconds:当缓存闲置n秒后销毁</span></span><br><span class="line"><span class="comment">timeToLiveSeconds:当缓存存活n秒后销毁</span></span><br><span class="line"><span class="comment">maxEntriesLocalDisk:硬盘最大缓存个数</span></span><br><span class="line"><span class="comment">diskPersistent:磁盘缓存在JVM重新启动时是否保持</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 订单缓存 通过bootstrapCacheLoaderFactory参数配置启动加载到内存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">"BILLING"</span></span></span><br><span class="line"><span class="tag"><span class="attr">maxEntriesLocalHeap</span>=<span class="string">"10000"</span></span></span><br><span class="line"><span class="tag"><span class="attr">eternal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">overflowToDisk</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">timeToIdleSeconds</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">diskPersistent</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bootstrapCacheLoaderFactory</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"net.sf.ehcache.store.DiskStoreBootstrapCacheLoaderFactory"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">properties</span>=<span class="string">"bootstrapAsynchronously=true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bootstrapCacheLoaderFactory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ehcache是一个纯Java实现的进程内缓存实现，具有快速精简等特点。有单机版本、分布式实现版本。主要针对基于java开发的项目使用。支持磁盘持久化及磁盘load到内存。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="cache" scheme="http://blog.lehoon.cn/tags/cache/"/>
    
      <category term="ehcache" scheme="http://blog.lehoon.cn/tags/ehcache/"/>
    
  </entry>
  
  <entry>
    <title>art-template使用笔记</title>
    <link href="http://blog.lehoon.cn/frontend/2018/09/27/art-template-note.html"/>
    <id>http://blog.lehoon.cn/frontend/2018/09/27/art-template-note.html</id>
    <published>2018-09-27T08:37:05.000Z</published>
    <updated>2018-09-27T09:21:38.795Z</updated>
    
    <content type="html"><![CDATA[<p>art-template是一款开源的js的模板引擎，渲染速度比较快，使用后可以介绍不少的代码量，本文记录下使用过程中遇到的问题及解决方法。<br><a id="more"></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="http://aui.github.io/art-template/zh-cn/" target="_blank" rel="noopener">官方网站</a><br><a href="https://github.com/aui/art-template" target="_blank" rel="noopener">下载地址</a></p><p>art-template可以应用于前端js、koa、nodejs、webpack、express中。定义模板后，组织数据对象，然后使用template渲染出结果html片段。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1、使用中html原样输出，没有被浏览器解析成dom。<br>解决方法：定义template.defaults.escape=false;关闭编码输出功能<br>2、使用template(id, data);返回一个function。<br>解决方法：使用template返回一个渲染render方法，然后使用该方法使用数据后渲染出最后的html片段。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cacheRender = template(tplSource); <span class="comment">//生成渲染函数对象</span></span><br><span class="line"><span class="keyword">var</span> destHtml = cacheRender(<span class="keyword">data</span>);  <span class="comment">//使用数据渲染html片段</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;art-template是一款开源的js的模板引擎，渲染速度比较快，使用后可以介绍不少的代码量，本文记录下使用过程中遇到的问题及解决方法。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://blog.lehoon.cn/categories/frontend/"/>
    
    
      <category term="template" scheme="http://blog.lehoon.cn/tags/template/"/>
    
      <category term="javascript" scheme="http://blog.lehoon.cn/tags/javascript/"/>
    
      <category term="cache" scheme="http://blog.lehoon.cn/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>apama笔记</title>
    <link href="http://blog.lehoon.cn/backend/2018/09/25/apama-note.html"/>
    <id>http://blog.lehoon.cn/backend/2018/09/25/apama-note.html</id>
    <published>2018-09-25T02:12:16.000Z</published>
    <updated>2018-09-25T03:11:43.958Z</updated>
    
    <content type="html"><![CDATA[<p>记录apama学习笔记，apama中任何对象都可以理解未一个事件，只要注册了每个对象事件监听，在apama进程接收消息队列中有该对象时，就会进行对象匹配，如果满足条件就会触发一个事件监听。<br><a id="more"></a></p><h2 id="RPC序列化"><a href="#RPC序列化" class="headerlink" title="RPC序列化"></a>RPC序列化</h2><p>apma的rpc通信过程中数据序列化是文本字符串序列化，不是二进制序列化。序列化格式为：packageName + eventName + properties属性。 例如：”QRY_apamax.atmfraud.DetectRepeatedMaxWithdrawals”, 1, “*”, [“600”]。</p><p>序列化顺序严格按照事件定义时候的顺序来组织，数据格式也要对应，否则会出现rpc通信过程中事件丢失问题。</p><h2 id="工程目录约定"><a href="#工程目录约定" class="headerlink" title="工程目录约定"></a>工程目录约定</h2><h3 id="event目录"><a href="#event目录" class="headerlink" title="event目录"></a>event目录</h3><p>该目录主要包含apama进程启动的时候预定义的一些事件，实现系统测试、初始化一些系统事件使用。<br>文件名：后缀名为evt<br>格式：事件定义全路径(属性定义)<br>例如：<br>//预生产的事件列表，按照顺序生产后放入当前correlator的消息队列<br>com.lehoon.apama.EventC(“C1”)<br>com.lehoon.apama.EventA(“A1”)<br>com.lehoon.apama.EventF(“F1”)</p><h3 id="dashboards目录"><a href="#dashboards目录" class="headerlink" title="dashboards目录"></a>dashboards目录</h3><p>apama本身支持cs应用，apama的client端就是dashboards面板，支持控件拖拽式开发，动态绑定运行时的dataview实例。 缺点就是不支持高分屏、用户体验度不好。</p><h3 id="monitor目录"><a href="#monitor目录" class="headerlink" title="monitor目录"></a>monitor目录</h3><p>apama的主要逻辑代码存放目录，文件后缀名为mon，类似与java的controller+service，在monitor中可以注册关心的事件处理逻辑代码。</p><h3 id="queries目录"><a href="#queries目录" class="headerlink" title="queries目录"></a>queries目录</h3><p>该目录存放自定义的queries文件，后缀名为qry。Query是epl程序执行的一个基本单元。 epl另外的执行单元是monitor，一个monitor不能能包括一个query。一个query不能包括一个monitor。<br>query适用于通过事件来提供大量真实世界信息的应用程序。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录apama学习笔记，apama中任何对象都可以理解未一个事件，只要注册了每个对象事件监听，在apama进程接收消息队列中有该对象时，就会进行对象匹配，如果满足条件就会触发一个事件监听。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="apama" scheme="http://blog.lehoon.cn/tags/apama/"/>
    
      <category term="epl" scheme="http://blog.lehoon.cn/tags/epl/"/>
    
  </entry>
  
  <entry>
    <title>svn查看日志显示时间为1970解决方法</title>
    <link href="http://blog.lehoon.cn/orther/2018/03/27/svn-showlog-date-1970.html"/>
    <id>http://blog.lehoon.cn/orther/2018/03/27/svn-showlog-date-1970.html</id>
    <published>2018-03-27T02:47:33.000Z</published>
    <updated>2018-09-22T13:31:16.492Z</updated>
    
    <content type="html"><![CDATA[<p>svn查看日志(show log)显示日期为1970年的解决方法，svn查看日志时候，不显示日志。<br><a id="more"></a></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>通过TortoiseSvn查看svn仓库日志的时候，日期一直在1969-1970，不能选择其他日期，导致svn的提交记录不能显示。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="修改svn配置文件"><a href="#修改svn配置文件" class="headerlink" title="修改svn配置文件"></a>修改svn配置文件</h3><p>编辑svnserve.conf文件<br>设置anon-access=none</p><h3 id="修改认证配置文件"><a href="#修改认证配置文件" class="headerlink" title="修改认证配置文件"></a>修改认证配置文件</h3><p>编辑authz文件<br>添加<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[/]</span></span><br><span class="line">* =</span><br></pre></td></tr></table></figure></p><h3 id="重启svn服务"><a href="#重启svn服务" class="headerlink" title="重启svn服务"></a>重启svn服务</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnserve -d -r /<span class="built_in">home</span>/svn/svnrepos</span><br></pre></td></tr></table></figure><p>清理TortoiseSvn的缓存信息，再次通过show log 查看，就可以发现日志已经出来了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;svn查看日志(show log)显示日期为1970年的解决方法，svn查看日志时候，不显示日志。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="svn" scheme="http://blog.lehoon.cn/tags/svn/"/>
    
      <category term="show log" scheme="http://blog.lehoon.cn/tags/show-log/"/>
    
      <category term="date error" scheme="http://blog.lehoon.cn/tags/date-error/"/>
    
      <category term="1970" scheme="http://blog.lehoon.cn/tags/1970/"/>
    
  </entry>
  
  <entry>
    <title>oracle12c手动创建cdb实例</title>
    <link href="http://blog.lehoon.cn/backend/2018/03/23/oracle12c-create-instance.html"/>
    <id>http://blog.lehoon.cn/backend/2018/03/23/oracle12c-create-instance.html</id>
    <published>2018-03-23T08:10:17.000Z</published>
    <updated>2018-09-22T13:31:09.484Z</updated>
    
    <content type="html"><![CDATA[<p>oracle12c通过手动创建cdb实例。<br><a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统： centos 7.3 64bit<br>oracle版本：Release 12.2.0.1.0 Production</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="指定sid"><a href="#指定sid" class="headerlink" title="指定sid"></a>指定sid</h3><p>修改~/.bash_profile文件，修改ORACLE_SID名称<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ORACLE_SID</span>=dpf</span><br></pre></td></tr></table></figure></p><h3 id="创建初始化文件"><a href="#创建初始化文件" class="headerlink" title="创建初始化文件"></a>创建初始化文件</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">oracle@db001:/home/oracle$ cat initdbdpf.ora </span></span><br><span class="line">db_name='dpf'</span><br><span class="line">memory_target=2G</span><br><span class="line">processes=150</span><br><span class="line">db_block_size=8192</span><br><span class="line">db_domain=''</span><br><span class="line">diagnostic_dest='/oracle'</span><br><span class="line">dispatchers='(PROTOCOL=TCP) (SERVICE=dpf)'</span><br><span class="line">open_cursors=300</span><br><span class="line">remote_login_passwordfile='EXCLUSIVE'</span><br><span class="line">undo_tablespace='undotbs1'</span><br><span class="line">control_files='/oracle/oradata/dpf/control01.ctl', '/oracle/oradata/dpf/control02.ctl'</span><br><span class="line">compatible='12.0.0'</span><br><span class="line">audit_file_dest='/oracle/admin/dpf/adump'</span><br><span class="line">audit_trail='db'</span><br><span class="line">enable_pluggable_database=true</span><br></pre></td></tr></table></figure><p>保存到/home/oracle/initdbdpf.ora。</p><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p>创建需要的文件目录<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="regexp">/oracle/</span>admin<span class="regexp">/dpf/</span>adump</span><br></pre></td></tr></table></figure></p><h3 id="连接到oracle"><a href="#连接到oracle" class="headerlink" title="连接到oracle"></a>连接到oracle</h3><p>通过sysdba连接到oracle<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">oracle<span class="variable">@db001</span><span class="symbol">:/home/oracle</span><span class="variable">$ </span>sqlplus /nolog</span><br><span class="line"></span><br><span class="line">SQL*<span class="symbol">Plus:</span> Release <span class="number">12.2</span>.<span class="number">0</span>.<span class="number">1.0</span> Production on Fri Mar <span class="number">23</span> <span class="number">16</span><span class="symbol">:</span><span class="number">20</span><span class="symbol">:</span><span class="number">00</span> <span class="number">2018</span></span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">1982</span>, <span class="number">2016</span>, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line">SQL&gt; conn / as sysdba</span><br></pre></td></tr></table></figure></p><h3 id="创建spfile文件"><a href="#创建spfile文件" class="headerlink" title="创建spfile文件"></a>创建spfile文件</h3><p>从initdborcl.ora创建spfile<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="built_in">create</span> spfile <span class="built_in">from</span> pfile=<span class="string">'/home/oracle/initdbdpf.ora'</span></span><br></pre></td></tr></table></figure></p><h3 id="启动实例"><a href="#启动实例" class="headerlink" title="启动实例"></a>启动实例</h3><p>使用nomount启动<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt;startup nomount;</span><br><span class="line">ORACLE<span class="built_in"> instance </span>started.</span><br><span class="line"></span><br><span class="line">Total<span class="built_in"> System </span>Global<span class="built_in"> Area </span>2147483648 bytes</span><br><span class="line">Fixed Size                  2926472 bytes</span><br><span class="line">Variable Size            1291847800 bytes</span><br><span class="line">Database Buffers          838860800 bytes</span><br><span class="line">Redo Buffers               13848576 bytes</span><br></pre></td></tr></table></figure></p><h3 id="创建数据库实例"><a href="#创建数据库实例" class="headerlink" title="创建数据库实例"></a>创建数据库实例</h3><p>准备语句<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt;<span class="built_in">create</span> database dpf</span><br><span class="line">  user sys identified <span class="keyword">by</span> oracle123</span><br><span class="line">  user <span class="keyword">system</span> identified <span class="keyword">by</span> oracle123</span><br><span class="line">  logfile group <span class="number">1</span> (<span class="string">'/oracle/oradata/dpf/redo01a.log'</span>,<span class="string">'/oracle/oradata/dpf/redo01b.log'</span>) size <span class="number">100</span>m,</span><br><span class="line">          group <span class="number">2</span> (<span class="string">'/oracle/oradata/dpf/redo02a.log'</span>,<span class="string">'/oracle/oradata/dpf/redo02b.log'</span>) size <span class="number">100</span>m, </span><br><span class="line">          group <span class="number">3</span> (<span class="string">'/oracle/oradata/dpf/redo03a.log'</span>,<span class="string">'/oracle/oradata/dpf/redo03b.log'</span>) size <span class="number">100</span>m</span><br><span class="line">  maxloghistory <span class="number">1</span></span><br><span class="line">  maxlogfiles <span class="number">16</span></span><br><span class="line">  maxlogmembers <span class="number">3</span></span><br><span class="line">  maxdatafiles <span class="number">1024</span></span><br><span class="line">  <span class="keyword">character</span> <span class="built_in">set</span> al32utf8</span><br><span class="line">  national <span class="keyword">character</span> <span class="built_in">set</span> al16utf16</span><br><span class="line">  extent management <span class="built_in">local</span></span><br><span class="line">  datafile <span class="string">'/oracle/oradata/dpf/system01.dbf'</span> size <span class="number">700</span>m reuse autoextend <span class="keyword">on</span> <span class="title">next</span> <span class="title">10240k</span> <span class="title">maxsize</span> <span class="title">unlimited</span></span><br><span class="line">  sysaux datafile <span class="string">'/oracle/oradata/dpf/sysaux01.dbf'</span> size <span class="number">550</span>m reuse autoextend <span class="keyword">on</span> <span class="title">next</span> <span class="title">10240k</span> <span class="title">maxsize</span> <span class="title">unlimited</span></span><br><span class="line">  default tablespace users</span><br><span class="line">    datafile <span class="string">'/oracle/oradata/dpf/users01.dbf'</span> size <span class="number">500</span>m reuse autoextend <span class="keyword">on</span> <span class="title">maxsize</span> <span class="title">unlimited</span></span><br><span class="line">  default temporary tablespace tempts1</span><br><span class="line">    tempfile <span class="string">'/oracle/oradata/dpf/temp01.dbf'</span> size <span class="number">20</span>m reuse autoextend <span class="keyword">on</span> <span class="title">next</span> <span class="title">640k</span> <span class="title">maxsize</span> <span class="title">unlimited</span></span><br><span class="line">  undo tablespace undotbs1</span><br><span class="line">    datafile <span class="string">'/oracle/oradata/dpf/undotbs01.dbf'</span> size <span class="number">200</span>m reuse autoextend <span class="keyword">on</span> <span class="title">next</span> <span class="title">5120k</span> <span class="title">maxsize</span> <span class="title">unlimited</span></span><br><span class="line">  enable pluggable database</span><br><span class="line">    seed</span><br><span class="line">    file_name_convert = (<span class="string">'/oracle/oradata/dpf'</span>,</span><br><span class="line">                         <span class="string">'/oracle/oradata/dpf/pdb1'</span>)</span><br><span class="line">    <span class="keyword">system</span> datafiles size <span class="number">125</span>m autoextend <span class="keyword">on</span> <span class="title">next</span> <span class="title">10m</span> <span class="title">maxsize</span> <span class="title">unlimited</span></span><br><span class="line">    sysaux datafiles size <span class="number">100</span>m</span><br><span class="line">    user_data tablespace usertbs</span><br><span class="line">    datafile <span class="string">'/oracle/oradata/dpf/pdb1/usertbs01.dbf'</span> size <span class="number">200</span>m reuse autoextend <span class="keyword">on</span> <span class="title">maxsize</span> <span class="title">unlimited</span>;</span><br></pre></td></tr></table></figure></p><p>执行完后，通过运行sql脚本创建数据字典视图<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@?/<span class="keyword">rdbms</span>/<span class="keyword">admin</span>/<span class="keyword">catcdb</span>.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure></p><p>执行命令会提示输入1、2参数<br>Enter value for 1: /oracle/product/12.2.0.1/rdbms/admin<br>Enter value for 2: /oracle/product/12.2.0.1/rdbms/admin/catcdb.pl</p><p>此处会报错，报错内容如下<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Can't locate Term/ReadKey.pm <span class="keyword">in</span> @INC (@INC contains: /U01/<span class="keyword">app</span>/oracle/product/12.2/rdbms/admin /usr/<span class="keyword">local</span>/lib64/perl5 /usr/<span class="keyword">local</span>/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at /U01/<span class="keyword">app</span>/oracle/product/12.2/rdbms/admin/catcdb.<span class="keyword">pl</span> <span class="keyword">line</span> 30.</span><br><span class="line"></span><br><span class="line">BEGIN failed--compilation aborted at /U01/<span class="keyword">app</span>/oracle/product/12.2/rdbms/admin/catcdb.<span class="keyword">pl</span> <span class="keyword">line</span> 30.</span><br></pre></td></tr></table></figure></p><p>解决办法；<br>1、设定环境变量PATH值，增加ORACLE下perl环境变量<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="variable">$ORACLE_HOME</span><span class="regexp">/perl/</span>bin:<span class="variable">$ORACLE_HOME</span><span class="regexp">/jdk/</span>bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><p>2、修改/oracle/product/12.2.0.1/rdbms/admin/catcdb.pl文件<br>修改35行，把util修改成Util。</p><p>3、先退出sqlplus环境， 进入$ORACLE_HOME/perl/lib/5.22.0/x86_64-linux-thread-multi/Hash目录<br>然后在执行该sql即可。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、修改catcdb.pl文件<span class="number">35</span>行把unil修改成Util</span><br><span class="line"><span class="number">2</span>、进入hash目录后，进入sqlplus环境</span><br><span class="line">oracle<span class="meta">@txbds</span>-dpf-<span class="string">db001:</span><span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>perl<span class="regexp">/lib/</span><span class="number">5.22</span><span class="number">.0</span><span class="regexp">/x86_64-linux-thread-multi$ cd /</span>oracle<span class="regexp">/product/</span><span class="number">12.2</span><span class="number">.0</span><span class="number">.1</span><span class="regexp">/perl/</span>lib<span class="regexp">/5.22.0/</span>x86_64-linux-thread-multi<span class="regexp">/Hash/</span></span><br><span class="line">oracle<span class="meta">@txbds</span>-dpf-<span class="string">db001:</span><span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>perl<span class="regexp">/lib/</span><span class="number">5.22</span><span class="number">.0</span><span class="regexp">/x86_64-linux-thread-multi/</span>Hash$ ll</span><br><span class="line">total <span class="number">28</span></span><br><span class="line">drwxr-xr-x <span class="number">2</span> oracle oinstall  <span class="number">4096</span> Apr <span class="number">20</span>  <span class="number">2017</span> Util</span><br><span class="line">-rwxr-x--- <span class="number">1</span> oracle oinstall <span class="number">23392</span> May <span class="number">12</span>  <span class="number">2016</span> Util.pm</span><br><span class="line">oracle<span class="meta">@txbds</span>-dpf-<span class="string">db001:</span><span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>perl<span class="regexp">/lib/</span><span class="number">5.22</span><span class="number">.0</span><span class="regexp">/x86_64-linux-thread-multi/</span>Hash$ sqlplus /nolog</span><br><span class="line"></span><br><span class="line">SQL*<span class="string">Plus:</span> Release <span class="number">12.2</span><span class="number">.0</span><span class="number">.1</span><span class="number">.0</span> Production on Fri Mar <span class="number">23</span> <span class="number">14</span>:<span class="number">03</span>:<span class="number">51</span> <span class="number">2018</span></span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">1982</span>, <span class="number">2016</span>, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line">SQL&gt; conn / <span class="keyword">as</span> sysdba</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; @?/rdbms/admin/catcdb.sql</span><br><span class="line"></span><br><span class="line">SQL&gt; host perl -I &amp;&amp;rdbms_admin &amp;&amp;rdbms_admin_catcdb --logDirectory &amp;&amp;1 --logFilename &amp;&amp;2</span><br><span class="line">Enter value for 1: <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms/admin</span><br><span class="line">Enter value <span class="keyword">for</span> <span class="number">2</span>: <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catcdb.pl</span><br><span class="line">Enter <span class="keyword">new</span> password <span class="keyword">for</span> <span class="string">SYS:</span> oracle123</span><br><span class="line">Enter <span class="keyword">new</span> password <span class="keyword">for</span> <span class="string">SYSTEM:</span> oracle123</span><br><span class="line">Enter temporary tablespace <span class="string">name:</span> dpf-temp</span><br><span class="line">No options to container mapping specified, no options will be installed <span class="keyword">in</span> any containers</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catalog_catcon_14267.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catalog*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catalog_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catproc_catcon_14355.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catproc*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catproc_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catoctk_catcon_15507.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catoctk*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catoctk_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>owminst_catcon_15593.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>owminst*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>owminst_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16013.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16097.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line"><span class="string">validate_script_path:</span> sqlplus script <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>sqlplus<span class="regexp">/admin/</span>help/hlpbld does not exist or is unreadable</span><br><span class="line"><span class="string">catconExec:</span> empty Path returned by validate_script_path <span class="keyword">for</span> </span><br><span class="line">    SrcDir = <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>sqlplus<span class="regexp">/admin/</span>help, FileName = hlpbld</span><br><span class="line">catcon.<span class="string">pl:</span> Unexpected error encountered <span class="keyword">in</span> catconExec; exiting</span><br><span class="line"><span class="string">exec_DB_script:</span> <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16097_exec_DB_script.done did not need to be deleted before running a script</span><br><span class="line"><span class="string">exec_DB_script:</span> opened Reader and Writer</span><br><span class="line"><span class="string">exec_DB_script:</span> connected</span><br><span class="line"><span class="string">exec_DB_script:</span> executed set echo on</span><br><span class="line"></span><br><span class="line"><span class="string">exec_DB_script:</span> executed @@<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_kill_sess_16097_ALL.sql</span><br><span class="line"></span><br><span class="line"><span class="string">exec_DB_script:</span> sent </span><br><span class="line">host sqlplus -v &gt; <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16097_exec_DB_script.done to Writer</span><br><span class="line"><span class="string">exec_DB_script:</span> sent -exit- to Writer</span><br><span class="line"><span class="string">exec_DB_script:</span> closed Writer</span><br><span class="line"><span class="string">exec_DB_script:</span> marker was undefined; read and ignore output, <span class="keyword">if</span> any</span><br><span class="line"><span class="string">exec_DB_script:</span> finished reading and ignoring output</span><br><span class="line"><span class="string">exec_DB_script:</span> waiting <span class="keyword">for</span> child process to exit</span><br><span class="line"><span class="string">exec_DB_script:</span> child process exited</span><br><span class="line"><span class="string">sureunlink:</span> unlink(<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16097_exec_DB_script.done) succeeded after <span class="number">1</span> attempt(s)</span><br><span class="line"><span class="string">sureunlink:</span> verify that the file really no longer exists</span><br><span class="line"><span class="string">sureunlink:</span> confirmed that <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16097_exec_DB_script.done no longer exists after <span class="number">1</span> attempts</span><br><span class="line"><span class="string">exec_DB_script:</span> deleted <span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>pupbld_catcon_16097_exec_DB_script.done after running a script</span><br><span class="line"><span class="string">exec_DB_script:</span> closed Reader</span><br><span class="line"><span class="string">exec_DB_script:</span> waitpid returned</span><br><span class="line"><span class="string">kill_sqlplus_sessions:</span> output produced <span class="keyword">in</span> exec_DB_script [</span><br><span class="line">    </span><br><span class="line">    SQL*<span class="string">Plus:</span> Release <span class="number">12.2</span><span class="number">.0</span><span class="number">.1</span><span class="number">.0</span> Production on Fri Mar <span class="number">23</span> <span class="number">14</span>:<span class="number">27</span>:<span class="number">09</span> <span class="number">2018</span></span><br><span class="line">    </span><br><span class="line">    Copyright (c) <span class="number">1982</span>, <span class="number">2016</span>, Oracle.  All rights reserved.</span><br><span class="line">    </span><br><span class="line">    SQL&gt; Connected.</span><br><span class="line">    SQL&gt; SQL&gt; SQL&gt; </span><br><span class="line">    SQL&gt; ALTER SYSTEM KILL SESSION <span class="string">'99,16498'</span> force timeout <span class="number">0</span> -- process <span class="number">16133</span></span><br><span class="line">      <span class="number">2</span>  /</span><br><span class="line">    </span><br><span class="line">    System altered.</span><br><span class="line">    </span><br><span class="line">    SQL&gt; </span><br><span class="line">    SQL&gt; SQL&gt; </span><br><span class="line">    SQL&gt; Disconnected from Oracle Database <span class="number">12</span>c Enterprise Edition Release <span class="number">12.2</span><span class="number">.0</span><span class="number">.1</span><span class="number">.0</span> - <span class="number">64</span>bit Production</span><br><span class="line">  ] end of output produced <span class="keyword">in</span> exec_DB_script</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catclust_catcon_16148.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catclust*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catclust_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catfinal_catcon_16566.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catfinal*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catfinal_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catbundleapply_catcon_16650.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catbundleapply*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>catbundleapply_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br><span class="line"><span class="string">catcon:</span> ALL catcon-related output will be written to [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>utlrp_catcon_16734.lst]</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>utlrp*.log] files <span class="keyword">for</span> output generated by scripts</span><br><span class="line"><span class="string">catcon:</span> See [<span class="regexp">/oracle/</span>product<span class="regexp">/12.2.0.1/</span>rdbms<span class="regexp">/admin/</span>utlrp_*.lst] files <span class="keyword">for</span> spool files, <span class="keyword">if</span> any</span><br><span class="line">catcon.<span class="string">pl:</span> completed successfully</span><br></pre></td></tr></table></figure></p><p>这样，数据库实例就创建好了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;oracle12c通过手动创建cdb实例。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="oracle12c" scheme="http://blog.lehoon.cn/tags/oracle12c/"/>
    
      <category term="cdb" scheme="http://blog.lehoon.cn/tags/cdb/"/>
    
      <category term="instance" scheme="http://blog.lehoon.cn/tags/instance/"/>
    
  </entry>
  
  <entry>
    <title>librdkafka配置参数详解</title>
    <link href="http://blog.lehoon.cn/backend/2018/03/14/librdkafka-config.html"/>
    <id>http://blog.lehoon.cn/backend/2018/03/14/librdkafka-config.html</id>
    <published>2018-03-14T03:09:24.000Z</published>
    <updated>2018-09-22T13:30:49.021Z</updated>
    
    <content type="html"><![CDATA[<p>librdkafka配置参数整理。<br><a id="more"></a></p><h2 id="全局配置参数"><a href="#全局配置参数" class="headerlink" title="全局配置参数"></a>全局配置参数</h2><p><a href="https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md" target="_blank" rel="noopener">原文地址</a></p><table><thead><tr><th>Property</th><th>C/P</th><th>Range</th><th>Default</th><th>Description              </th></tr></thead><tbody><tr><td>builtin.features</td><td>*</td><td></td><td>gzip, snappy, ssl, sasl, regex, lz4, sasl_gssapi, sasl_plain, sasl_scram, plugins</td><td>标示该librdkafka的支持的内建特性。应用程序可以查看或设置这些值来检查是否支持这些特性. <br><em>Type: CSV flags</em></td></tr><tr><td>client.id</td><td>*</td><td></td><td>rdkafka</td><td>客户端标识. <br><em>Type: string</em></td></tr><tr><td>metadata.broker.list</td><td>*</td><td></td><td></td><td>初始化的broker列表，host:port格式, 应用程序可以使用rd_kafka_brokers_add()动态添加broker. <br><em>Type: string</em></td></tr><tr><td>bootstrap.servers</td><td>*</td><td></td><td></td><td>参考 metadata.broker.list</td></tr><tr><td>message.max.bytes</td><td>*</td><td>1000 .. 1000000000</td><td>1000000</td><td>消息发送最大字节数. <br><em>Type: integer</em></td></tr><tr><td>message.copy.max.bytes</td><td>*</td><td>0 .. 1000000000</td><td>65535</td><td>消息缓冲区最大字节数，多出的消息将通过引用传递，但是会消耗更多的内存(struct iovec). <br><em>Type: integer</em></td></tr><tr><td>receive.message.max.bytes</td><td>*</td><td>1000 .. 1000000000</td><td>100000000</td><td>kafka消息接收最大字节数，这事一种安全机制，防止在最坏的情况耗尽内存问题。建议值：fetch.message.max.bytes <em> 分区数 + 消息的最大字节数.<br></em>Type: integer*</td></tr><tr><td>max.in.flight.requests.per.connection</td><td>*</td><td>1 .. 1000000</td><td>1000000</td><td>broker连接数最大值，针对每个broker配置。主要用于发送消息，但是其他机制将会限制每个broker未处理消息消费数量为1个. <br><em>Type: integer</em></td></tr><tr><td>max.in.flight</td><td>*</td><td></td><td></td><td>参考 max.in.flight.requests.per.connection</td></tr><tr><td>metadata.request.timeout.ms</td><td>*</td><td>10 .. 900000</td><td>60000</td><td>没有数据操作的超时时间，单位毫秒. <br><em>Type: integer</em></td></tr><tr><td>topic.metadata.refresh.interval.ms</td><td>*</td><td>-1 .. 3600000</td><td>300000</td><td>数据刷新时间间隔，单位毫秒，自动刷新错误和连接，设置为-1则关闭刷新时间间隔. <br><em>Type: integer</em></td></tr><tr><td>metadata.max.age.ms</td><td>*</td><td>1 .. 86400000</td><td>-1</td><td>元数据缓存最大生命周期. 默认值为数据刷新时间间隔 metadata.refresh.interval.ms <em> 3 <br></em>Type: integer*</td></tr><tr><td>topic.metadata.refresh.fast.interval.ms</td><td>*</td><td>1 .. 60000</td><td>250</td><td>topic主题失去leader领导者时，元数据请求发送间隔. 用户快速恢复broker leader. <br><em>Type: integer</em></td></tr><tr><td>topic.metadata.refresh.fast.cnt</td><td>*</td><td>0 .. 1000</td><td>10</td><td>保留，未启用. <em> <br></em>Type: integer*</td></tr><tr><td>topic.metadata.refresh.sparse</td><td>*</td><td>true, false</td><td>true</td><td>极少的元数据请求，消费者的网络带宽很小 <br><em>Type: boolean</em></td></tr><tr><td>topic.blacklist</td><td>*</td><td></td><td></td><td>topic内名单，逗号分割增则表达式列表. <br><em>Type: pattern list</em></td></tr><tr><td>debug</td><td>*</td><td>generic, broker, topic, metadata, feature, queue, msg, protocol, cgrp, security, fetch, interceptor, plugin, consumer, all</td><td></td><td>一个逗号分割的调试上下文列表，包括：生产者：broker、topic、message； 消费者：cgroup、topic、tetch等 <br><em>Type: CSV flags</em></td></tr><tr><td>socket.timeout.ms</td><td>*</td><td>10 .. 300000</td><td>60000</td><td>默认的网络请求超时时间, Producer：ProduceRequests将使用批处理中第一条消息的socket.timeout.ms和其余message.timeout.ms的较小值。 使用者：FetchRequests将使用fetch.wait.max.ms + socket.timeout.ms.  <br><em>Type: integer</em></td></tr><tr><td>socket.blocking.max.ms</td><td>*</td><td>1 .. 60000</td><td>1000</td><td>socket套接字可能阻塞的最大时间，比较小的值提高了响应速度，但是CPU负载比较大. 已废弃. <strong>Deprecated</strong> <br><em>Type: integer</em></td></tr><tr><td>socket.send.buffer.bytes</td><td>*</td><td>0 .. 100000000</td><td>0</td><td>broker端发送缓冲区大小，0则使用系统默认值. <br><em>Type: integer</em></td></tr><tr><td>socket.receive.buffer.bytes</td><td>*</td><td>0 .. 100000000</td><td>0</td><td>broker端接收缓冲区大小，0则使用系统默认值. <br><em>Type: integer</em></td></tr><tr><td>socket.keepalive.enable</td><td>*</td><td>true, false</td><td>false</td><td>启用TCP keep-alives (SO_KEEPALIVE) on broker sockets <br><em>Type: boolean</em></td></tr><tr><td>socket.nagle.disable</td><td>*</td><td>true, false</td><td>false</td><td>禁用nagle 算法TCP_NODELAY  <br><em>Type: boolean</em></td></tr><tr><td>socket.max.fails</td><td>*</td><td>0 .. 1000000</td><td>1</td><td>发送失败的最大次数，超过该次数后断开与broker的连接，0 禁用；注意：连接会自动重连. <br><em>Type: integer</em></td></tr><tr><td>broker.address.ttl</td><td>*</td><td>0 .. 86400000</td><td>1000</td><td>broker地址解析结果缓存值(毫秒). <br><em>Type: integer</em></td></tr><tr><td>broker.address.family</td><td>*</td><td>any, v4, v6</td><td>any</td><td>any  ipv4  ipv6 <br><em>Type: enum value</em></td></tr><tr><td>reconnect.backoff.jitter.ms</td><td>*</td><td>0 .. 3600000</td><td>500</td><td>通过该配置参数+-50%调整broker重连. <br><em>Type: integer</em></td></tr><tr><td>statistics.interval.ms</td><td>*</td><td>0 .. 86400000</td><td>0</td><td>librdkafka统计时间间隔，应用程序也应该通过注册回调函数来实现对统计指标的监控，0禁用，单位1000ms. <br><em>Type: integer</em></td></tr><tr><td>enabled_events</td><td>*</td><td>0 .. 2147483647</td><td>0</td><td>See rd_kafka_conf_set_events() <br><em>Type: integer</em></td></tr><tr><td>error_cb</td><td>*</td><td></td><td></td><td>发送错误的回调函数， (set with rd_kafka_conf_set_error_cb()) <br><em>Type: pointer</em></td></tr><tr><td>throttle_cb</td><td>*</td><td></td><td></td><td>调整回调函数 (set with rd_kafka_conf_set_throttle_cb()) <br><em>Type: pointer</em></td></tr><tr><td>stats_cb</td><td>*</td><td></td><td></td><td>统计回调函数 (set with rd_kafka_conf_set_stats_cb()) <br><em>Type: pointer</em></td></tr><tr><td>log_cb</td><td>*</td><td></td><td></td><td>日志回调函数 (set with rd_kafka_conf_set_log_cb()) <br><em>Type: pointer</em></td></tr><tr><td>log_level</td><td>*</td><td>0 .. 7</td><td>6</td><td>日志级别 (syslog(3) levels) <br><em>Type: integer</em></td></tr><tr><td>log.queue</td><td>*</td><td>true, false</td><td>false</td><td>禁用内部librdkafka线程中的自发log_cb，而是使用rd_kafka_set_log_queue（）将队列中的日志消息排入队列，并通过标准轮询API提供日志回调或事件。 <strong>注意</strong>：日志消息将一直存在于临时队列中，直到日志队列被设置. <br><em>Type: boolean</em></td></tr><tr><td>log.thread.name</td><td>*</td><td>true, false</td><td>true</td><td>在日志中记录线程名称，经常用于调试librdkafka内部问题 <br><em>Type: boolean</em></td></tr><tr><td>log.connection.close</td><td>*</td><td>true, false</td><td>true</td><td>记录broker关闭事件，受0.9版本的connection.max.idle.ms参数影响，一般建议关闭该参数. <br><em>Type: boolean</em></td></tr><tr><td>socket_cb</td><td>*</td><td></td><td></td><td>为socket套接字创建CLOEXEC提供回调函数 <br><em>Type: pointer</em></td></tr><tr><td>connect_cb</td><td>*</td><td></td><td></td><td>socket连接的回调函数 <br><em>Type: pointer</em></td></tr><tr><td>closesocket_cb</td><td>*</td><td></td><td></td><td>socket关闭的回调函数 <br><em>Type: pointer</em></td></tr><tr><td>open_cb</td><td>*</td><td></td><td></td><td>打开文件时CLOEXEC的回调函数 <br><em>Type: pointer</em></td></tr><tr><td>opaque</td><td>*</td><td></td><td></td><td>应用程序设置的上下文参数，一般用与消息发送后的回调、librdkafka注册函数回调的上下文，主要用于参数传递，由c++到c在转会c++指针寻址上 (set with rd_kafka_conf_set_opaque()) <br><em>Type: pointer</em></td></tr><tr><td>default_topic_conf</td><td>*</td><td></td><td></td><td>自动订阅主题的默认配置参数 <br><em>Type: pointer</em></td></tr><tr><td>internal.termination.signal</td><td>*</td><td>0 .. 128</td><td>0</td><td>370/5000librdkafka将用于快速终止rd_kafka_destroy（）的信号。 如果未设置此信号，则会在rd_kafka_wait_destroyed（）返回true之前发生延迟，因为内部线程正在超时执行其系统调用。 如果这个信号被设置，但延迟将是最小的。 应用程序应该在安装内部信号处理程序时屏蔽此信号。 <br><em>Type: integer</em></td></tr><tr><td>api.version.request</td><td>*</td><td>true, false</td><td>true</td><td>请求broker支持的API版本以调整可用协议功能的功能。 如果设置为false，或者ApiVersionRequest失败，则将使用备用版本broker.version.fallback。 <strong>注意</strong>：取决于broker版本&gt; = 0.10.0。 如果（较旧的）代理不支持请求，则使用broker.version.fallback回退. <br><em>Type: boolean</em></td></tr><tr><td>api.version.request.timeout.ms</td><td>*</td><td>1 .. 300000</td><td>10000</td><td>broker的api版本请求超时时间. <br><em>Type: integer</em></td></tr><tr><td>api.version.fallback.ms</td><td>*</td><td>0 .. 604800000</td><td>1200000</td><td>Dictates how long the broker.version.fallback fallback is used in the case the ApiVersionRequest fails. <strong>NOTE</strong>: The ApiVersionRequest is only issued when a new connection to the broker is made (such as after an upgrade). <br><em>Type: integer</em></td></tr><tr><td>broker.version.fallback</td><td>*</td><td></td><td>0.9.0</td><td>Older broker versions (&lt;0.10.0) provides no way for a client to query for supported protocol features (ApiVersionRequest, see api.version.request) making it impossible for the client to know what features it may use. As a workaround a user may set this property to the expected broker version and the client will automatically adjust its feature set accordingly if the ApiVersionRequest fails (or is disabled). The fallback broker version will be used for api.version.fallback.ms. Valid values are: 0.9.0, 0.8.2, 0.8.1, 0.8.0. Any other value, such as 0.10.2.1, enables ApiVersionRequests. <br><em>Type: string</em></td></tr><tr><td>security.protocol</td><td>*</td><td>plaintext, ssl, sasl_plaintext, sasl_ssl</td><td>plaintext</td><td>用于和broker通信的协议，默认plaintext. <br><em>Type: enum value</em></td></tr><tr><td>ssl.cipher.suites</td><td>*</td><td></td><td></td><td>根据SSL/TLS规范,客户端提交使用的加密算法. See manual page for ciphers(1) and SSL_CTX_set_cipher_list(3). <br><em>Type: string</em></td></tr><tr><td>ssl.key.location</td><td>*</td><td></td><td></td><td>客户端私钥的路径. <br><em>Type: string</em></td></tr><tr><td>ssl.key.password</td><td>*</td><td></td><td></td><td>私钥密码 <br><em>Type: string</em></td></tr><tr><td>ssl.certificate.location</td><td>*</td><td></td><td></td><td>公钥地址. <br><em>Type: string</em></td></tr><tr><td>ssl.ca.location</td><td>*</td><td></td><td></td><td>CA证书路径. <br><em>Type: string</em></td></tr><tr><td>ssl.crl.location</td><td>*</td><td></td><td></td><td>CRL 路径，用于 broker 的证书校验. <br><em>Type: string</em></td></tr><tr><td>ssl.keystore.location</td><td>*</td><td></td><td></td><td>keystore存储路径. <br><em>Type: string</em></td></tr><tr><td>ssl.keystore.password</td><td>*</td><td></td><td></td><td>keystore 密码. <br><em>Type: string</em></td></tr><tr><td>sasl.mechanisms</td><td>*</td><td></td><td>GSSAPI</td><td>使用 SASL 机制鉴权。 支持：GSSAPI, PLAIN. 提示: 只能配置一种机制名. <br><em>Type: string</em></td></tr><tr><td>sasl.mechanism</td><td>*</td><td></td><td></td><td>Alias for sasl.mechanisms</td></tr><tr><td>sasl.kerberos.service.name</td><td>*</td><td></td><td>kafka</td><td>Kafka 运行的 Kerberos 首要名, not including /hostname@REALM <br><em>Type: string</em></td></tr><tr><td>sasl.kerberos.principal</td><td>*</td><td></td><td>kafkaclient</td><td>客户端的 Kerberos 首要名. (Not supported on Windows, will use the logon user’s principal). <br><em>Type: string</em></td></tr><tr><td>sasl.kerberos.kinit.cmd</td><td>*</td><td></td><td></td><td>完整的 kerberos kinit 命令串，%{config.prop.name} 替换为与配置对象一直的值，%{broker.name} broker 的主机名. <br><em>Type: string</em></td></tr><tr><td>sasl.kerberos.keytab</td><td>*</td><td></td><td></td><td>Kerberos keytab 文件的路径。如果不设置，则使用系统默认的。提示：不会自动使用，必须在 sasl.kerberos.kinit.cmd 中添加到模板  … -t %{sasl.kerberos.keytab}. <br><em>Type: string</em></td></tr><tr><td>sasl.kerberos.min.time.before.relogin</td><td>*</td><td>1 .. 86400000</td><td>60000</td><td>Key 恢复尝试的最小时间，毫秒. <br><em>Type: integer</em></td></tr><tr><td>sasl.username</td><td>*</td><td></td><td></td><td>使用 PLAIN 机制时，SASL 用户名 <br><em>Type: string</em></td></tr><tr><td>sasl.password</td><td>*</td><td></td><td></td><td>使用 PLAIN 机制时，SASL 密码 <br><em>Type: string</em></td></tr><tr><td>plugin.library.paths</td><td>*</td><td></td><td></td><td>使用;分割的插件库列表，如果没有标明库文件后缀，则根据平台自动配置dll或者so后缀名. <br><em>Type: string</em></td></tr><tr><td>interceptors</td><td>*</td><td></td><td></td><td>通过rd_kafka_conf_interceptoes添加拦截器. <br><em>Type: </em></td></tr><tr><td>group.id</td><td>*</td><td></td><td></td><td>客户端分组编号id <br><em>Type: string</em></td></tr><tr><td>partition.assignment.strategy</td><td>*</td><td></td><td>range,roundrobin</td><td>分区策略名称（轮询、范围）. <br><em>Type: string</em></td></tr><tr><td>session.timeout.ms</td><td>*</td><td>1 .. 3600000</td><td>30000</td><td>客户端会话超时时间. <br><em>Type: integer</em></td></tr><tr><td>heartbeat.interval.ms</td><td>*</td><td>1 .. 3600000</td><td>1000</td><td>组会话超时时间. <br><em>Type: integer</em></td></tr><tr><td>group.protocol.type</td><td>*</td><td></td><td>consumer</td><td>组协议类型 <br><em>Type: string</em></td></tr><tr><td>coordinator.query.interval.ms</td><td>*</td><td>1 .. 3600000</td><td>600000</td><td>多久查询一次当前的客户端组协调器。 如果当前分配的协调器已关闭，则在协调器重新分配的情况下，配置的查询时间间隔将除以10以更快地恢复. <br><em>Type: integer</em></td></tr><tr><td>enable.auto.commit</td><td>C</td><td>true, false</td><td>true</td><td>在后台周期性的自动提交偏移量. Note: setting this to false does not prevent the consumer from fetching previously committed start offsets. To circumvent this behaviour set specific start offsets per partition in the call to assign(). <br><em>Type: boolean</em></td></tr><tr><td>auto.commit.interval.ms</td><td>C</td><td>0 .. 86400000</td><td>5000</td><td>消费者偏移量提交（写入）到存储的频率，毫秒。(0 = 不可用) . (0 = disable). This setting is used by the high-level consumer. <br><em>Type: integer</em></td></tr><tr><td>enable.auto.offset.store</td><td>C</td><td>true, false</td><td>true</td><td>Automatically store offset of last message provided to application. <br><em>Type: boolean</em></td></tr><tr><td>queued.min.messages</td><td>C</td><td>1 .. 10000000</td><td>100000</td><td>Minimum number of messages per topic+partition librdkafka tries to maintain in the local consumer queue. <br><em>Type: integer</em></td></tr><tr><td>queued.max.messages.kbytes</td><td>C</td><td>1 .. 2097151</td><td>1048576</td><td>Maximum number of kilobytes per topic+partition in the local consumer queue. This value may be overshot by fetch.message.max.bytes. This property has higher priority than queued.min.messages. <br><em>Type: integer</em></td></tr><tr><td>fetch.wait.max.ms</td><td>C</td><td>0 .. 300000</td><td>100</td><td>Maximum time the broker may wait to fill the response with fetch.min.bytes. <br><em>Type: integer</em></td></tr><tr><td>fetch.message.max.bytes</td><td>C</td><td>1 .. 1000000000</td><td>1048576</td><td>Initial maximum number of bytes per topic+partition to request when fetching messages from the broker. If the client encounters a message larger than this value it will gradually try to increase it until the entire message can be fetched. <br><em>Type: integer</em></td></tr><tr><td>max.partition.fetch.bytes</td><td>C</td><td></td><td></td><td>Alias for fetch.message.max.bytes</td></tr><tr><td>fetch.min.bytes</td><td>C</td><td>1 .. 100000000</td><td>1</td><td>Minimum number of bytes the broker responds with. If fetch.wait.max.ms expires the accumulated data will be sent to the client regardless of this setting. <br><em>Type: integer</em></td></tr><tr><td>fetch.error.backoff.ms</td><td>C</td><td>0 .. 300000</td><td>500</td><td>How long to postpone the next fetch request for a topic+partition in case of a fetch error. <br><em>Type: integer</em></td></tr><tr><td>offset.store.method</td><td>C</td><td>none, file, broker</td><td>broker</td><td>Offset commit store method: ‘file’ - local file store (offset.store.path, et.al), ‘broker’ - broker commit store (requires Apache Kafka 0.8.2 or later on the broker). <br><em>Type: enum value</em></td></tr><tr><td>consume_cb</td><td>C</td><td></td><td></td><td>Message consume callback (set with rd_kafka_conf_set_consume_cb()) <br><em>Type: pointer</em></td></tr><tr><td>rebalance_cb</td><td>C</td><td></td><td></td><td>Called after consumer group has been rebalanced (set with rd_kafka_conf_set_rebalance_cb()) <br><em>Type: pointer</em></td></tr><tr><td>offset_commit_cb</td><td>C</td><td></td><td></td><td>Offset commit result propagation callback. (set with rd_kafka_conf_set_offset_commit_cb()) <br><em>Type: pointer</em></td></tr><tr><td>enable.partition.eof</td><td>C</td><td>true, false</td><td>true</td><td>Emit RD_KAFKA_RESP_ERR__PARTITION_EOF event whenever the consumer reaches the end of a partition. <br><em>Type: boolean</em></td></tr><tr><td>check.crcs</td><td>C</td><td>true, false</td><td>false</td><td>Verify CRC32 of consumed messages, ensuring no on-the-wire or on-disk corruption to the messages occurred. This check comes at slightly increased CPU usage. <br><em>Type: boolean</em></td></tr><tr><td>queue.buffering.max.messages</td><td>P</td><td>1 .. 10000000</td><td>100000</td><td>Maximum number of messages allowed on the producer queue. <br><em>Type: integer</em></td></tr><tr><td>queue.buffering.max.kbytes</td><td>P</td><td>1 .. 2097151</td><td>1048576</td><td>Maximum total message size sum allowed on the producer queue. This property has higher priority than queue.buffering.max.messages. <br><em>Type: integer</em></td></tr><tr><td>queue.buffering.max.ms</td><td>P</td><td>0 .. 900000</td><td>0</td><td>Delay in milliseconds to wait for messages in the producer queue to accumulate before constructing message batches (MessageSets) to transmit to brokers. A higher value allows larger and more effective (less overhead, improved compression) batches of messages to accumulate at the expense of increased message delivery latency. <br><em>Type: integer</em></td></tr><tr><td>linger.ms</td><td>P</td><td></td><td></td><td>Alias for queue.buffering.max.ms</td></tr><tr><td>message.send.max.retries</td><td>P</td><td>0 .. 10000000</td><td>2</td><td>How many times to retry sending a failing MessageSet. <strong>Note:</strong> retrying may cause reordering. <br><em>Type: integer</em></td></tr><tr><td>retries</td><td>P</td><td></td><td></td><td>Alias for message.send.max.retries</td></tr><tr><td>retry.backoff.ms</td><td>P</td><td>1 .. 300000</td><td>100</td><td>The backoff time in milliseconds before retrying a protocol request. <br><em>Type: integer</em></td></tr><tr><td>queue.buffering.backpressure.threshold</td><td>P</td><td>0 .. 1000000</td><td>10</td><td>The threshold of outstanding not yet transmitted requests needed to backpressure the producer’s message accumulator. A lower number yields larger and more effective batches. <br><em>Type: integer</em></td></tr><tr><td>compression.codec</td><td>P</td><td>none, gzip, snappy, lz4</td><td>none</td><td>compression codec to use for compressing message sets. This is the default value for all topics, may be overriden by the topic configuration property compression.codec.  <br><em>Type: enum value</em></td></tr><tr><td>compression.type</td><td>P</td><td></td><td></td><td>Alias for compression.codec</td></tr><tr><td>batch.num.messages</td><td>P</td><td>1 .. 1000000</td><td>10000</td><td>Maximum number of messages batched in one MessageSet. The total MessageSet size is also limited by message.max.bytes. <br><em>Type: integer</em></td></tr><tr><td>delivery.report.only.error</td><td>P</td><td>true, false</td><td>false</td><td>Only provide delivery reports for failed messages. <br><em>Type: boolean</em></td></tr><tr><td>dr_cb</td><td>P</td><td></td><td></td><td>Delivery report callback (set with rd_kafka_conf_set_dr_cb()) <br><em>Type: pointer</em></td></tr><tr><td>dr_msg_cb</td><td>P</td><td></td><td></td><td>Delivery report callback (set with rd_kafka_conf_set_dr_msg_cb()) <br><em>Type: pointer</em></td></tr></tbody></table><h2 id="Topic-configuration-properties"><a href="#Topic-configuration-properties" class="headerlink" title="Topic configuration properties"></a>Topic configuration properties</h2><table><thead><tr><th>Property</th><th>C/P</th><th>Range</th><th>Default</th><th>Description              </th></tr></thead><tbody><tr><td>request.required.acks</td><td>P</td><td>-1 .. 1000</td><td>1</td><td>This field indicates how many acknowledgements the leader broker must receive from ISR brokers before responding to the request: <em>0</em>=Broker does not send any response/ack to client, <em>1</em>=Only the leader broker will need to ack the message, <em>-1</em> or <em>all</em>=broker will block until message is committed by all in sync replicas (ISRs) or broker’s min.insync.replicas setting before sending response.  <br><em>Type: integer</em></td></tr><tr><td>acks</td><td>P</td><td></td><td></td><td>Alias for request.required.acks</td></tr><tr><td>request.timeout.ms</td><td>P</td><td>1 .. 900000</td><td>5000</td><td>The ack timeout of the producer request in milliseconds. This value is only enforced by the broker and relies on request.required.acks being != 0. <br><em>Type: integer</em></td></tr><tr><td>message.timeout.ms</td><td>P</td><td>0 .. 900000</td><td>300000</td><td>Local message timeout. This value is only enforced locally and limits the time a produced message waits for successful delivery. A time of 0 is infinite. <br><em>Type: integer</em></td></tr><tr><td>queuing.strategy</td><td>P</td><td>fifo, lifo</td><td>fifo</td><td>Producer queuing strategy. FIFO preserves produce ordering, while LIFO prioritizes new messages. WARNING: lifo is experimental and subject to change or removal. <br><em>Type: enum value</em></td></tr><tr><td>produce.offset.report</td><td>P</td><td>true, false</td><td>false</td><td>Report offset of produced message back to application. The application must be use the dr_msg_cb to retrieve the offset from rd_kafka_message_t.offset. <br><em>Type: boolean</em></td></tr><tr><td>partitioner</td><td>P</td><td></td><td>consistent_random</td><td>Partitioner: random - random distribution, consistent - CRC32 hash of key (Empty and NULL keys are mapped to single partition), consistent_random - CRC32 hash of key (Empty and NULL keys are randomly partitioned), murmur2 - Java Producer compatible Murmur2 hash of key (NULL keys are mapped to single partition), murmur2_random - Java Producer compatible Murmur2 hash of key (NULL keys are randomly partitioned. This is functionally equivalent to the default partitioner in the Java Producer.). <br><em>Type: string</em></td></tr><tr><td>partitioner_cb</td><td>P</td><td></td><td></td><td>Custom partitioner callback (set with rd_kafka_topic_conf_set_partitioner_cb()) <br><em>Type: pointer</em></td></tr><tr><td>msg_order_cmp</td><td>P</td><td></td><td></td><td>Message queue ordering comparator (set with rd_kafka_topic_conf_set_msg_order_cmp()). Also see queuing.strategy. <br><em>Type: pointer</em></td></tr><tr><td>opaque</td><td>*</td><td></td><td></td><td>Application opaque (set with rd_kafka_topic_conf_set_opaque()) <br><em>Type: pointer</em></td></tr><tr><td>compression.codec</td><td>P</td><td>none, gzip, snappy, lz4, inherit</td><td>inherit</td><td>Compression codec to use for compressing message sets. inherit = inherit global compression.codec configuration. <br><em>Type: enum value</em></td></tr><tr><td>compression.type</td><td>P</td><td></td><td></td><td>Alias for compression.codec</td></tr><tr><td>auto.commit.enable</td><td>C</td><td>true, false</td><td>true</td><td>If true, periodically commit offset of the last message handed to the application. This committed offset will be used when the process restarts to pick up where it left off. If false, the application will have to call rd_kafka_offset_store() to store an offset (optional). <strong>NOTE:</strong> This property should only be used with the simple legacy consumer, when using the high-level KafkaConsumer the global enable.auto.commit property must be used instead. <strong>NOTE:</strong> There is currently no zookeeper integration, offsets will be written to broker or local file according to offset.store.method. <br><em>Type: boolean</em></td></tr><tr><td>enable.auto.commit</td><td>C</td><td></td><td></td><td>Alias for auto.commit.enable</td></tr><tr><td>auto.commit.interval.ms</td><td>C</td><td>10 .. 86400000</td><td>60000</td><td>The frequency in milliseconds that the consumer offsets are committed (written) to offset storage. This setting is used by the low-level legacy consumer. <br><em>Type: integer</em></td></tr><tr><td>auto.offset.reset</td><td>C</td><td>smallest, earliest, beginning, largest, latest, end, error</td><td>largest</td><td>Action to take when there is no initial offset in offset store or the desired offset is out of range: ‘smallest’,’earliest’ - automatically reset the offset to the smallest offset, ‘largest’,’latest’ - automatically reset the offset to the largest offset, ‘error’ - trigger an error which is retrieved by consuming messages and checking ‘message-&gt;err’. <br><em>Type: enum value</em></td></tr><tr><td>offset.store.path</td><td>C</td><td></td><td>.</td><td>Path to local file for storing offsets. If the path is a directory a filename will be automatically generated in that directory based on the topic and partition. <br><em>Type: string</em></td></tr><tr><td>offset.store.sync.interval.ms</td><td>C</td><td>-1 .. 86400000</td><td>-1</td><td>fsync() interval for the offset file, in milliseconds. Use -1 to disable syncing, and 0 for immediate sync after each write. <br><em>Type: integer</em></td></tr><tr><td>offset.store.method</td><td>C</td><td>file, broker</td><td>broker</td><td>Offset commit store method: ‘file’ - local file store (offset.store.path, et.al), ‘broker’ - broker commit store (requires “group.id” to be configured and Apache Kafka 0.8.2 or later on the broker.). <br><em>Type: enum value</em></td></tr><tr><td>consume.callback.max.messages</td><td>C</td><td>0 .. 1000000</td><td>0</td><td>Maximum number of messages to dispatch in one rd_kafka_consume_callback<em>() call (0 = unlimited) <br></em>Type: integer*</td></tr></tbody></table><h3 id="C-P-legend-C-Consumer-P-Producer-both"><a href="#C-P-legend-C-Consumer-P-Producer-both" class="headerlink" title="C/P legend: C = Consumer, P = Producer, * = both"></a>C/P legend: C = Consumer, P = Producer, * = both</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;librdkafka配置参数整理。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="kafka" scheme="http://blog.lehoon.cn/tags/kafka/"/>
    
      <category term="配置" scheme="http://blog.lehoon.cn/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>apk反编译工具</title>
    <link href="http://blog.lehoon.cn/orther/2017/12/25/apk-decompile-tools.html"/>
    <id>http://blog.lehoon.cn/orther/2017/12/25/apk-decompile-tools.html</id>
    <published>2017-12-25T03:30:49.000Z</published>
    <updated>2018-09-22T13:30:21.689Z</updated>
    
    <content type="html"><![CDATA[<p>Android APK反编译下载。<br><a id="more"></a></p><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><h3 id="资源文件获取工具"><a href="#资源文件获取工具" class="headerlink" title="资源文件获取工具"></a>资源文件获取工具</h3><p>apktool，主要是apk的资源文件提取，可以提取到图片文件和布局文件。<br>版本：2.3.0<br>下载地址：<a href="http://static.lehoon.cn//download/tools/apktool_2.3.0.jar" target="_blank" rel="noopener">apktool_2.3.0</a></p><h3 id="资源文件获取工具-1"><a href="#资源文件获取工具-1" class="headerlink" title="资源文件获取工具"></a>资源文件获取工具</h3><p>dex-tools，将apk反编译成java源码，apk的资源文件classses.dex转成jar为文件。<br>版本：2.1<br>下载地址：<a href="http://static.lehoon.cn//download/tools/dex-tools-2.1.zip" target="_blank" rel="noopener">dex-tools-2.1</a></p><h3 id="阅读class文件工具"><a href="#阅读class文件工具" class="headerlink" title="阅读class文件工具"></a>阅读class文件工具</h3><p>jd-gui，主要是读取class文件，及载入class相关的工程文件的工具，可以浏览相关的java源码及关联文件代码<br>版本：1.4.0<br>下载地址：<a href="http://static.lehoon.cn//download/tools/jd-gui-windows-1.4.0.zip" target="_blank" rel="noopener">jd-gui-1.4.0</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android APK反编译下载。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="apk decompile" scheme="http://blog.lehoon.cn/tags/apk-decompile/"/>
    
      <category term="反编译" scheme="http://blog.lehoon.cn/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>地图精度与电子地图比例尺的关系</title>
    <link href="http://blog.lehoon.cn/orther/2017/12/08/map-accuracy2scale.html"/>
    <id>http://blog.lehoon.cn/orther/2017/12/08/map-accuracy2scale.html</id>
    <published>2017-12-08T06:16:24.000Z</published>
    <updated>2018-09-22T13:30:58.127Z</updated>
    
    <content type="html"><![CDATA[<p>地图精度与比例尺的关系.<br><a id="more"></a></p><h2 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h2><p>1、地图最大精度<br>视力正常的人的肉眼能分辨图上最短距离是0.1毫米。所以地图上0.1毫秒所能表现的实地水平长度就是地图上所能表示的最高精度，成为比例尺的最大精度。</p><p>2、地图比例尺<br>图上距离和实地距离的比例。</p><p>3、电子地图比例尺<br>电子地图一般是矢量地图，它具有无极缩放的特性，而通常说它的比例尺只是一种借用，即指生成电子地图的传统地图图源的比例尺。</p><h2 id="基本的比例尺与地图精度的关系"><a href="#基本的比例尺与地图精度的关系" class="headerlink" title="基本的比例尺与地图精度的关系"></a>基本的比例尺与地图精度的关系</h2><table><thead><tr><th style="text-align:left">比例尺</th><th style="text-align:left">1:1万</th><th style="text-align:left">1:2.5万</th><th style="text-align:left">1:5万</th><th style="text-align:left">1:10万</th><th style="text-align:left">1:25万</th><th style="text-align:left">1:50万</th><th style="text-align:left">1:100万</th></tr></thead><tbody><tr><td style="text-align:left">最大精度(m)</td><td style="text-align:left">1</td><td style="text-align:left">2.5</td><td style="text-align:left">5</td><td style="text-align:left">10</td><td style="text-align:left">25</td><td style="text-align:left">50</td><td style="text-align:left">100</td></tr></tbody></table><p>计算方式：<br>计算1cm能表达的距离，然后除以100即可算出电子地图的最大精度。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;地图精度与比例尺的关系.&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="map" scheme="http://blog.lehoon.cn/tags/map/"/>
    
      <category term="accuracy" scheme="http://blog.lehoon.cn/tags/accuracy/"/>
    
      <category term="scale" scheme="http://blog.lehoon.cn/tags/scale/"/>
    
  </entry>
  
  <entry>
    <title>window系统大文件打开工具</title>
    <link href="http://blog.lehoon.cn/orther/2017/12/08/window-big-file-tools.html"/>
    <id>http://blog.lehoon.cn/orther/2017/12/08/window-big-file-tools.html</id>
    <published>2017-12-08T01:34:26.000Z</published>
    <updated>2018-09-22T13:31:23.465Z</updated>
    
    <content type="html"><![CDATA[<p>window系统上打开大文件的工具集。<br><a id="more"></a></p><h2 id="EmEditor"><a href="#EmEditor" class="headerlink" title="EmEditor"></a>EmEditor</h2><p>网址：<a href="https://zh-cn.emeditor.com/" target="_blank" rel="noopener">https://zh-cn.emeditor.com/</a></p><h2 id="LogView"><a href="#LogView" class="headerlink" title="LogView"></a>LogView</h2><p>网址：<a href="http://www.logview.info" target="_blank" rel="noopener">http://www.logview.info</a></p><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p>网址：<a href="http://www.vim.org/download.php#pc" target="_blank" rel="noopener">http://www.vim.org/download.php#pc</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;window系统上打开大文件的工具集。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="window" scheme="http://blog.lehoon.cn/tags/window/"/>
    
      <category term="big file" scheme="http://blog.lehoon.cn/tags/big-file/"/>
    
      <category term="tools" scheme="http://blog.lehoon.cn/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>GPRMC格式详解</title>
    <link href="http://blog.lehoon.cn/orther/2017/10/27/gnss-gprmc-format.html"/>
    <id>http://blog.lehoon.cn/orther/2017/10/27/gnss-gprmc-format.html</id>
    <published>2017-10-27T07:40:39.000Z</published>
    <updated>2018-09-22T13:30:34.775Z</updated>
    
    <content type="html"><![CDATA[<p>Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐定位信息<br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$GPRMC,&lt;<span class="number">1</span>&gt;,&lt;<span class="number">2</span>&gt;,&lt;<span class="number">3</span>&gt;,&lt;<span class="number">4</span>&gt;,&lt;<span class="number">5</span>&gt;,&lt;<span class="number">6</span>&gt;,&lt;<span class="number">7</span>&gt;,&lt;<span class="number">8</span>&gt;,&lt;<span class="number">9</span>&gt;,&lt;<span class="number">10</span>&gt;,&lt;<span class="number">11</span>&gt;,&lt;<span class="number">12</span>&gt;*hh&lt;CR&gt;&lt;LF&gt;</span><br><span class="line">&lt;<span class="number">1</span>&gt; UTC时间，hhmmss（时分秒）格式</span><br><span class="line">&lt;<span class="number">2</span>&gt; 定位状态，A=有效定位，V=无效定位</span><br><span class="line">&lt;<span class="number">3</span>&gt; 纬度ddmm.mmmm（度分）格式（前面的<span class="number">0</span>也将被传输）</span><br><span class="line">&lt;<span class="number">4</span>&gt; 纬度半球N（北半球）或S（南半球）</span><br><span class="line">&lt;<span class="number">5</span>&gt; 经度dddmm.mmmm（度分）格式（前面的<span class="number">0</span>也将被传输）</span><br><span class="line">&lt;<span class="number">6</span>&gt; 经度半球E（东经）或W（西经）</span><br><span class="line">&lt;<span class="number">7</span>&gt; 地面速率（<span class="number">000.0</span>~<span class="number">999.9</span>节，前面的<span class="number">0</span>也将被传输）    这里是按照节计算的，换成成千米/时为<span class="number">1.852</span>km/h</span><br><span class="line">&lt;<span class="number">8</span>&gt; 地面航向（<span class="number">000.0</span>~<span class="number">359.9</span>度，以真北为参考基准，前面的<span class="number">0</span>也将被传输）</span><br><span class="line">&lt;<span class="number">9</span>&gt; UTC日期，ddmmyy（日月年）格式</span><br><span class="line">&lt;<span class="number">10</span>&gt; 磁偏角（<span class="number">000.0</span>~<span class="number">180.0</span>度，前面的<span class="number">0</span>也将被传输）</span><br><span class="line">&lt;<span class="number">11</span>&gt; 磁偏角方向，E（东）或W（西）</span><br><span class="line">&lt;<span class="number">12</span>&gt; 模式指示（仅NMEA0183 <span class="number">3.00</span>版本输出，A=自主定位，D=差分，E=估算，N=数据无效）</span><br></pre></td></tr></table></figure><h2 id="数据样例"><a href="#数据样例" class="headerlink" title="数据样例"></a>数据样例</h2><p>源数据<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$GNRMC,<span class="number">034404.00</span>,A,<span class="number">3640.48056</span>,N,<span class="number">11707.96443</span>,E,<span class="number">0.04</span>,<span class="number">0.000</span>,<span class="number">271017</span>,<span class="number">0.0</span>,<span class="number">0</span>,D*<span class="number">68</span></span><br><span class="line">解析后的数据</span><br><span class="line">$GNRMC                 消息头标识（rmc是固定的）</span><br><span class="line"><span class="number">034404.00</span>              UTC时间</span><br><span class="line">A                      有效定位</span><br><span class="line"><span class="number">3640.48056</span>             纬度</span><br><span class="line">N                      纬度方向</span><br><span class="line"><span class="number">11707.96443</span>            经度</span><br><span class="line">E                      纬度方向</span><br><span class="line"><span class="number">0.04</span>                   地面速率  * <span class="number">1852</span>米/h</span><br><span class="line"><span class="number">0.000</span>                  地面航向</span><br><span class="line"><span class="number">271017</span>                 UTC日期(ddmmyy)</span><br><span class="line"><span class="number">0.0</span>                    磁偏角</span><br><span class="line"><span class="number">0</span>                      磁偏角方向</span><br><span class="line">D                      模式指示</span><br><span class="line">*<span class="number">46</span>                    CRC</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure></p><p>节/h = 1.852km/h</p><p>速度计算方式为：速度*1852为m/h</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐定位信息&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="gnss" scheme="http://blog.lehoon.cn/tags/gnss/"/>
    
      <category term="format" scheme="http://blog.lehoon.cn/tags/format/"/>
    
      <category term="gprmc" scheme="http://blog.lehoon.cn/tags/gprmc/"/>
    
  </entry>
  
  <entry>
    <title>通过gulp自动构建项目静态资源的版本号</title>
    <link href="http://blog.lehoon.cn/frontend/2017/09/21/autobuild-static-version.html"/>
    <id>http://blog.lehoon.cn/frontend/2017/09/21/autobuild-static-version.html</id>
    <published>2017-09-21T02:10:01.000Z</published>
    <updated>2018-09-22T13:30:21.861Z</updated>
    
    <content type="html"><![CDATA[<p>通过gulp自动构建项目前端静态资源的版本号，解决浏览器缓存导致更新不及时的问题。<br><a id="more"></a></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>项目上线后，正常的改动升级不可避免，后端的改动还好说。服务发布完成就行了，但是前端页面因为有浏览器缓存导致js、css、图片等资源不会立即更新，这就导致项目升级后，客户端看到的可能还是旧的资源。需要手动清理浏览器缓存后再刷新才能更新到最新版本。  这就需要通过资源文件版本号来实现客户端同步的问题。</p><p>例如：<br>html页面中的js引用如下:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/common/task.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>更改后的js引用如下:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/common/task.js?v=56365ee35d"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这样如果浏览器发现src引用的有更改，则会重新从服务器端请求该文件，这样可以实现同步了。</p><p>如果只有一个html页面的话还好修改，但是一般现在的项目中html会有多个，js、css、图片也会有很多，所以手动管理就会变的很耗时间，这时候就需要一个自动化维护的手段来实现，现在nodejs很火，基于nodejs实现的gulp就是一个流式自动化构建工具。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>1、生成静态资源的文件hash码，保存到指定的文件。<br>2、如果文件发生变化，则文件的hash码也会跟着变化。<br>3、检查html文件中的js文件，如果文件的hash不变，则不替换，如果不同则替换。</p><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><h3 id="创建自动化构建的项目"><a href="#创建自动化构建的项目" class="headerlink" title="创建自动化构建的项目"></a>创建自动化构建的项目</h3><p>1、新建项目名称buildpro<br>2、在buildpro文件夹下，创建node_modules文件及项目文件。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">D:\home\lehoon\develop\buildpro&gt;npm instll module_name</span><br><span class="line">npm WARN saveError ENOENT: <span class="keyword">no</span> such <span class="keyword">file</span> <span class="built_in">or</span> directory, <span class="keyword">open</span> <span class="string">'D:\home\lehoon\develop\buildpro\package.json'</span></span><br><span class="line">npm notice created <span class="keyword">a</span> lockfile <span class="keyword">as</span> package-lock.json. You should commit this <span class="keyword">file</span>.</span><br><span class="line"></span><br><span class="line">npm WARN enoent ENOENT: <span class="keyword">no</span> such <span class="keyword">file</span> <span class="built_in">or</span> directory, <span class="keyword">open</span> <span class="string">'D:\home\lehoon\develop\buildpro\package.json'</span></span><br><span class="line">npm WARN buildpro No description</span><br><span class="line">npm WARN buildpro No repository field.</span><br><span class="line">npm WARN buildpro No README data</span><br><span class="line">npm WARN buildpro No license field.</span><br><span class="line"></span><br><span class="line">+ module_name@<span class="number">1.0</span>.<span class="number">0</span></span><br><span class="line">added <span class="number">43</span> packages in <span class="number">5.119</span>s</span><br><span class="line"></span><br><span class="line">D:\home\lehoon\develop\buildpro&gt;npm init</span><br><span class="line">This utility will walk you through creating <span class="keyword">a</span> package.json <span class="keyword">file</span>.</span><br><span class="line">It <span class="keyword">only</span> covers the most common <span class="built_in">items</span>, <span class="built_in">and</span> tries <span class="keyword">to</span> guess sensible defaults.</span><br><span class="line"></span><br><span class="line">See `npm <span class="keyword">help</span> json` <span class="keyword">for</span> definitive documentation <span class="keyword">on</span> these fields</span><br><span class="line"><span class="built_in">and</span> exactly what they <span class="keyword">do</span>.</span><br><span class="line"></span><br><span class="line">Use `npm install <span class="symbol">&lt;pkg&gt;</span>` afterwards <span class="keyword">to</span> install <span class="keyword">a</span> package <span class="built_in">and</span></span><br><span class="line">save it <span class="keyword">as</span> <span class="keyword">a</span> dependency in the package.json <span class="keyword">file</span>.</span><br><span class="line"></span><br><span class="line">Press ^C at any time <span class="keyword">to</span> <span class="keyword">quit</span>.</span><br><span class="line">package name: (buildpro)</span><br><span class="line"><span class="keyword">version</span>: (<span class="number">1.0</span>.<span class="number">0</span>)</span><br><span class="line">description:</span><br><span class="line">entry poin<span class="variable">t:</span> (<span class="built_in">index</span>.js)</span><br><span class="line">test <span class="keyword">command</span>:</span><br><span class="line">git repository:</span><br><span class="line">keyword<span class="variable">s:</span></span><br><span class="line">author:</span><br><span class="line">license: (ISC)</span><br><span class="line">About <span class="keyword">to</span> <span class="keyword">write</span> <span class="keyword">to</span> D:\home\lehoon\develop\buildpro\package.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"buildpro"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"module_name"</span>: <span class="string">"^1.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Is this ok? (yes) yes</span><br></pre></td></tr></table></figure></p><h3 id="安装gulp、配置gulp"><a href="#安装gulp、配置gulp" class="headerlink" title="安装gulp、配置gulp"></a>安装gulp、配置gulp</h3><p>1、安装gulp及插件<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp@<span class="number">3.9</span><span class="number">.1</span></span><br><span class="line">npm install --save-dev gulp-rev@<span class="number">7.1</span><span class="number">.2</span></span><br><span class="line">npm install --save-dev gulp-rev-collector@<span class="number">1.1</span><span class="number">.1</span></span><br><span class="line">npm install --save-dev run-sequence@<span class="number">1.2</span><span class="number">.2</span></span><br></pre></td></tr></table></figure></p><p>2、配置规则<br>修改node_modules\gulp_rev\index.js文件<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">把 manifest[<span class="keyword">originalFile] </span>= revisionedFile 修改成</span><br><span class="line">manifest[<span class="keyword">originalFile] </span>=<span class="keyword">originalFile </span>+ <span class="string">'?v='</span> +file.revHash<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>修改node_modules\gulp_rev_collector\index.js文件<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">把<span class="keyword">if</span> ( !_.isString(json[<span class="built_in">key</span>]) ||path.basename(json[<span class="built_in">key</span>]).replace(newRegExp( opts.revSuffix ),<span class="string">''</span> ) !== path.basename(<span class="built_in">key</span>) ) &#123;  </span><br><span class="line">修改成</span><br><span class="line"><span class="keyword">if</span> (!_.isString(json[<span class="built_in">key</span>]) ||path.basename(json[<span class="built_in">key</span>]).<span class="built_in">split</span>(<span class="string">'?'</span>)[<span class="number">0</span>] !== path.basename(<span class="built_in">key</span>)) &#123;  </span><br><span class="line"></span><br><span class="line">通过修改regexp: newRegExp(<span class="string">'([\/\\\\\'"])'</span> +pattern, <span class="string">'g'</span>),  修改成 regexp: <span class="keyword">new</span> RegExp( <span class="string">'([\/\\\\\'"])'</span> + pattern + <span class="string">'(\\?v=\\w&#123;10&#125;)?'</span>, <span class="string">'g'</span> ),</span><br></pre></td></tr></table></figure></p><h3 id="编写gulp任务文件"><a href="#编写gulp任务文件" class="headerlink" title="编写gulp任务文件"></a>编写gulp任务文件</h3><p>1、gulp默认找gulpfile.js执行，所以gulp的任务规则都放在项目根目录下的gulpfile.js中<br>2、gulp的规则文件如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>);</span><br><span class="line"><span class="keyword">var</span> rev = <span class="built_in">require</span>(<span class="string">'gulp-rev'</span>);</span><br><span class="line"><span class="keyword">var</span> revCollector = <span class="built_in">require</span>(<span class="string">'gulp-rev-collector'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//要处理的项目工程目录</span></span><br><span class="line"><span class="keyword">var</span> programPath = <span class="string">'D:/workspace/lshop'</span>;</span><br><span class="line"><span class="keyword">var</span> cssSrc=programPath + <span class="string">'/css/**/*.css'</span>;</span><br><span class="line"><span class="keyword">var</span> jsSrc=programPath + <span class="string">'/js/**/*.js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//css文件生成hash编码，并保存到文件</span></span><br><span class="line">gulp.task(<span class="string">'revCss'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'========='</span> + cssSrc);</span><br><span class="line">    <span class="keyword">return</span> gulp.src(cssSrc)</span><br><span class="line">        .pipe(rev())</span><br><span class="line">        .pipe(rev.manifest())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'rev/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算js文件的hash码并保存到文件</span></span><br><span class="line">gulp.task(<span class="string">'revJs'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'========='</span> + jsSrc);</span><br><span class="line">    <span class="keyword">return</span> gulp.src(jsSrc)</span><br><span class="line">        .pipe(rev())</span><br><span class="line">        .pipe(rev.manifest())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'rev/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//替换html中的js版本号</span></span><br><span class="line">gulp.task(<span class="string">'revHtml'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'rev/**/*.json'</span>, programPath+<span class="string">'/*html'</span>])</span><br><span class="line">        .pipe(revCollector())</span><br><span class="line">        .pipe(gulp.dest(programPath));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'dev'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">done</span>) </span>&#123;</span><br><span class="line">    condition = <span class="literal">false</span>;</span><br><span class="line">    runSequence([<span class="string">'revCss'</span>],[<span class="string">'revJs'</span>], [<span class="string">'revHtml'</span>], done);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'dev'</span>]);</span><br></pre></td></tr></table></figure></p><p>3、然后切换到控制台下运行gulp命令即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过gulp自动构建项目前端静态资源的版本号，解决浏览器缓存导致更新不及时的问题。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://blog.lehoon.cn/categories/frontend/"/>
    
    
      <category term="gulp" scheme="http://blog.lehoon.cn/tags/gulp/"/>
    
      <category term="静态资源" scheme="http://blog.lehoon.cn/tags/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    
      <category term="版本" scheme="http://blog.lehoon.cn/tags/%E7%89%88%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Exception loading sessions from persistent storage</title>
    <link href="http://blog.lehoon.cn/backend/2017/08/28/load-session-persistent-exception.html"/>
    <id>http://blog.lehoon.cn/backend/2017/08/28/load-session-persistent-exception.html</id>
    <published>2017-08-28T02:34:36.000Z</published>
    <updated>2018-09-22T13:30:56.610Z</updated>
    
    <content type="html"><![CDATA[<p>启动项目时报以下异常,严重: Exception loading sessions from persistent storage.<br><a id="more"></a><br>遇到上述异常，删除Tomcat里面的work\Catalina\localhost下的项目文件内容即可解决.<br>原因是由于项目测试中class文件或者其它文件更新过频繁。</p><p>之前经常碰到页面修改后，重新发布的项目页面还是原样，不管删掉tomcat/webapps/发布的项目还是重新部署，都无法显示修改后的效果，<br>但是其他页面修改后又能显示。真是莫名其妙。<br>现在才知道是tomcat的问题，同样删除Tomcat里面的work\Catalina\localhost下的项目文件内容即可解决.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;启动项目时报以下异常,严重: Exception loading sessions from persistent storage.&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="java" scheme="http://blog.lehoon.cn/tags/java/"/>
    
      <category term="tomcat" scheme="http://blog.lehoon.cn/tags/tomcat/"/>
    
      <category term="session" scheme="http://blog.lehoon.cn/tags/session/"/>
    
      <category term="exception" scheme="http://blog.lehoon.cn/tags/exception/"/>
    
  </entry>
  
  <entry>
    <title>Mysql重设密码和远程访问</title>
    <link href="http://blog.lehoon.cn/orther/2017/06/20/mysql-reset-password.html"/>
    <id>http://blog.lehoon.cn/orther/2017/06/20/mysql-reset-password.html</id>
    <published>2017-06-20T07:05:52.000Z</published>
    <updated>2018-09-22T13:31:01.485Z</updated>
    
    <content type="html"><![CDATA[<p>mysql安装默认的root账户没有密码，所以登录mysql需要通过mysql -uroot -h 127.0.0.1 -P 3306登录后，设置密码。<br><a id="more"></a></p><h2 id="重设密码"><a href="#重设密码" class="headerlink" title="重设密码"></a>重设密码</h2><h3 id="登录mysql数据库"><a href="#登录mysql数据库" class="headerlink" title="登录mysql数据库"></a>登录mysql数据库</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -P <span class="number">3306</span></span><br></pre></td></tr></table></figure><h3 id="更新密码"><a href="#更新密码" class="headerlink" title="更新密码"></a>更新密码</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">PASSWORD</span>(<span class="string">'123456'</span>) <span class="keyword">where</span> <span class="keyword">user</span> = <span class="string">'root'</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br></pre></td></tr></table></figure><p>重新登录就需要输入密码了。</p><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>mysql远程连接是通过mysql数据库中user表中的host主机字段来限定的，如果是%则匹配所有主机，如果是localhost、127.0.0.1或者是主机名的话，则表示只允许本机登录。一般线上服务器都是限制本机登录。</p><h3 id="直接该表字段"><a href="#直接该表字段" class="headerlink" title="直接该表字段"></a>直接该表字段</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update <span class="keyword">user</span> <span class="title">set</span> host = '%' where <span class="keyword">user</span> <span class="title">= 'root</span>' <span class="keyword">and</span> host = 'localhost';</span><br></pre></td></tr></table></figure><h3 id="授权指令"><a href="#授权指令" class="headerlink" title="授权指令"></a>授权指令</h3><p>mysql提供了grant指令来实现一些常用的授权，比如限制指定用户访问指定的表，权限(只读、写等)。<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root用户允许任何机器连接到mysql服务器，密码<span class="number">123456</span>，使用以下指令</span><br><span class="line">mysql&gt; grant <span class="literal">all</span> privileges <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'%'</span> idenified <span class="keyword">by</span> <span class="string">'12345'</span> <span class="keyword">with</span> grant option;</span><br><span class="line"></span><br><span class="line">jack用户从ip地址为<span class="number">10.10</span><span class="number">.25</span><span class="number">.126</span>的主机连接到mysql服务器，密码<span class="number">123456</span>，使用以下指令</span><br><span class="line">mysql&gt; grant <span class="literal">all</span> privileges <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'jack'</span>@<span class="string">'10.10.25.126'</span> identified <span class="keyword">by</span> <span class="string">'123456'</span> <span class="keyword">with</span> grant option;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql安装默认的root账户没有密码，所以登录mysql需要通过mysql -uroot -h 127.0.0.1 -P 3306登录后，设置密码。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="mysql" scheme="http://blog.lehoon.cn/tags/mysql/"/>
    
      <category term="密码" scheme="http://blog.lehoon.cn/tags/%E5%AF%86%E7%A0%81/"/>
    
      <category term="远程访问" scheme="http://blog.lehoon.cn/tags/%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>Intellij-idea文件格式化</title>
    <link href="http://blog.lehoon.cn/orther/2017/06/19/idea-file-format.html"/>
    <id>http://blog.lehoon.cn/orther/2017/06/19/idea-file-format.html</id>
    <published>2017-06-19T02:13:07.000Z</published>
    <updated>2018-09-22T13:30:40.116Z</updated>
    
    <content type="html"><![CDATA[<p>在使用idea过程中，最大的问题就是在eclipse中有格式化代码的快捷方式，但是在idea中一直没有找到怎么能快捷格式文件。后来才发现idea中有插件可以是实现，插件名称是Eclipse Code Formatter，这个可以从Intellij的插件仓库中安装，安装之后就可以使用文件格式功能了。<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开idea的文件设置功能，选择插件面板。<br>路径：file—&gt;setting—&gt;plugins—&gt;Install JetBrains plugin<br>打开插件列表窗口后，在输入栏里面输入Eclipse Code Formatter后，查询出来后，选择安装即可。</p><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>file—&gt;Other Setting—&gt;Eclipse Code Formmatter</p><h3 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h3><p>打开eclipse Code Formatter设置窗口后，点击启用(use the eclipse code formatter),选中eclipse的格式化模板文件即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用idea过程中，最大的问题就是在eclipse中有格式化代码的快捷方式，但是在idea中一直没有找到怎么能快捷格式文件。后来才发现idea中有插件可以是实现，插件名称是Eclipse Code Formatter，这个可以从Intellij的插件仓库中安装，安装之后就可以使用文件格式功能了。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="intellij" scheme="http://blog.lehoon.cn/tags/intellij/"/>
    
      <category term="idea" scheme="http://blog.lehoon.cn/tags/idea/"/>
    
      <category term="格式化" scheme="http://blog.lehoon.cn/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>jstorm集成hbase、rocketmq</title>
    <link href="http://blog.lehoon.cn/backend/2017/06/13/jstorm-hbase-issue.html"/>
    <id>http://blog.lehoon.cn/backend/2017/06/13/jstorm-hbase-issue.html</id>
    <published>2017-06-13T02:14:04.000Z</published>
    <updated>2018-09-22T13:30:46.236Z</updated>
    
    <content type="html"><![CDATA[<p>jstorm集成hbase过程中问题记录。<br><a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h3 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境"></a>服务器环境</h3><p>jstorm服务器：centos 7.2 64位<br>hbase服务器：centos 7.2 64位</p><h3 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h3><p>hbase服务器：192.168.1.180<br>jstorm服务器：192.168.1.186</p><h3 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h3><p>jstorm： <a href="https://github.com/alibaba/jstorm/releases/download/2.2.1/jstorm-2.2.1.zip" target="_blank" rel="noopener">2.2.1</a> <a href="http://static.lehoon.cn//download/jstorm-hbase/jstorm-2.2.1.zip" target="_blank" rel="noopener">备用下载地址</a><br>jdk   ： <a href="http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz" target="_blank" rel="noopener">1.8.0</a> <a href="http://static.lehoon.cn//download/jstorm-hbase/jdk-8u101-linux-x64.tar.gz" target="_blank" rel="noopener">备用下载地址</a><br>hbase ： <a href="http://static.lehoon.cn//download/jstorm-hbase/hbase-1.2.2-bin.tar.gz" target="_blank" rel="noopener">1.2.2</a><br>rocketmq: <a href="https://github.com/alibaba/RocketMQ/archive/v3.5.8.zip" target="_blank" rel="noopener">3.5.8</a><br>zookeeper（jstorm使用）:<a href="http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz" target="_blank" rel="noopener">3.4.6</a><br>zookeeper（habse使用自带）</p><h3 id="hbase单机安装"><a href="#hbase单机安装" class="headerlink" title="hbase单机安装"></a>hbase单机安装</h3><p>由于服务器配置比较低，所以hbase采用单机安装。真正线上需要搭建hbase的集群。<br>1、下载hbase1.2.2gz的压缩包后，上传到服务器/opt目录后，使用tar zxvf hbase-1.2.2-bin.tar.gz 解压缩.<br>2、添加环境变量HBASE_HOME=/opt/hbase-1.2.2,<br>3、修改$HBASE_HOME/conf/hbase-site.xml，内容如下<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;configuration&gt;</span></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">            <span class="params">&lt;name&gt;</span>hbase.rootdir<span class="params">&lt;/name&gt;</span></span><br><span class="line">            <span class="params">&lt;value&gt;</span>file:<span class="comment">///opt/hbase-1.2.2/data/hbase&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="params">&lt;property&gt;</span></span><br><span class="line">            <span class="params">&lt;name&gt;</span>hbase.zookeeper.property.dataDir<span class="params">&lt;/name&gt;</span></span><br><span class="line">            <span class="params">&lt;value&gt;</span><span class="meta-keyword">/opt/</span>hbase<span class="number">-1.2</span><span class="number">.2</span><span class="meta-keyword">/data/</span>zookeeper<span class="params">&lt;/value&gt;</span></span><br><span class="line">    <span class="params">&lt;/property&gt;</span></span><br><span class="line"><span class="params">&lt;/configuration&gt;</span></span><br></pre></td></tr></table></figure></p><p>4、修改$HBASE_HOME/conf/hbase-env.sh，添加JDK_HOME参数<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/opt/jdk1.8.0_101</span><br></pre></td></tr></table></figure></p><p>5、启动hbase服务<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@server01</span> bin]<span class="meta"># $HBASE_HOME/bin/start-hbase.sh</span></span><br></pre></td></tr></table></figure></p><p>6、关闭防火墙,因为是局域网部署，所以关闭防火墙<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@txbdserver01 bin]#<span class="built_in"> service </span>iptables stop</span><br><span class="line">Redirecting <span class="keyword">to</span> /bin/systemctl stop  iptables.service</span><br><span class="line">Failed <span class="keyword">to</span> stop iptables.service: Unit iptables.service <span class="keyword">not</span> loaded.</span><br></pre></td></tr></table></figure></p><p>7、检查habse的zookeeper监听端口<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@server01 bin]</span># <span class="selector-tag">netstat</span> <span class="selector-tag">-an</span> | <span class="selector-tag">grep</span> <span class="selector-tag">2181</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> :<span class="selector-pseudo">::2181</span>                 :::*                    <span class="selector-tag">LISTEN</span>     </span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37474</span>               <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-tag">192</span><span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.180</span><span class="selector-pseudo">:2181</span>      <span class="selector-tag">192</span><span class="selector-class">.168</span><span class="selector-class">.1</span><span class="selector-class">.186</span><span class="selector-pseudo">:25465</span>     <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37466</span>               <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37476</span>               <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37474</span>               <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37468</span>               <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37470</span>               <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37472</span>               <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37470</span>               <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37472</span>               <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37466</span>               <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37476</span>               <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-tag">ESTABLISHED</span></span><br><span class="line"><span class="selector-tag">tcp6</span>       <span class="selector-tag">0</span>      <span class="selector-tag">0</span> <span class="selector-pseudo">::1</span><span class="selector-pseudo">:2181</span>                <span class="selector-pseudo">::1</span><span class="selector-pseudo">:37468</span>               <span class="selector-tag">ESTABLISHED</span></span><br></pre></td></tr></table></figure></p><p>至此，hbase的服务已经安装完成。通过habse的client api可以连接到zookeeper上，进行对hbase的操作。</p><h3 id="jstorm的zookeeper安装"><a href="#jstorm的zookeeper安装" class="headerlink" title="jstorm的zookeeper安装"></a>jstorm的zookeeper安装</h3><p>在jstorm服务器上部署zookeeper，供jstorm使用。<br>1、下载zookeeper-3.4.6.tar.gz的压缩包后，上传到服务器/opt目录后，使用tar zxvf zookeeper-3.4.6.tar.gz 解压缩.<br>2、添加环境变量ZOOKEEPER_HOME=/opt/zookeeper-3.4.6<br>3、拷贝一份配置文件，cp $ZOOKEEPER_HOME/conf/zoo_sample.cfg $ZOOKEEPER_HOME/conf/zoo.cfg ，修改$ZOOKEEPER_HOME/conf/zoo.cfg，内容如下<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="meta">#</span><span class="bash"> The number of ticks that the initial </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="meta">#</span><span class="bash"> The number of ticks that can pass between </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="meta">#</span><span class="bash"> the directory <span class="built_in">where</span> the snapshot is stored.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">do</span> not use /tmp <span class="keyword">for</span> storage, /tmp here is just </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> example sakes.</span></span><br><span class="line">dataDir=/tmp/zookeeper</span><br><span class="line"><span class="meta">#</span><span class="bash"> the port at <span class="built_in">which</span> the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="meta">#</span><span class="bash"> the maximum number of client connections.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> increase this <span class="keyword">if</span> you need to handle more clients</span></span><br><span class="line"><span class="meta">#</span><span class="bash">maxClientCnxns=60</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Be sure to <span class="built_in">read</span> the maintenance section of the </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://zookeeper.apache.org/doc/current/zookeeperAdmin.html<span class="comment">#sc_maintenance</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The number of snapshots to retain <span class="keyword">in</span> dataDir</span></span><br><span class="line"><span class="meta">#</span><span class="bash">autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Purge task interval <span class="keyword">in</span> hours</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set to <span class="string">"0"</span> to <span class="built_in">disable</span> auto purge feature</span></span><br><span class="line"><span class="meta">#</span><span class="bash">autopurge.purgeInterval=1</span></span><br></pre></td></tr></table></figure></p><p>4、启动zookeeper服务<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@server02</span> bin]<span class="meta"># $ZOOKEEPER_HOME/bin/zkServer.sh start</span></span><br></pre></td></tr></table></figure></p><p>至此，jstorm的zookeeper已经启动完成。</p><h3 id="jstorm安装"><a href="#jstorm安装" class="headerlink" title="jstorm安装"></a>jstorm安装</h3><p>这里我们在一台服务器上部署jstorm的zookeeper、nimbus、supervisor。<br>1、下载jstorm-2.2.1.zip的压缩包后，上传到服务器/opt目录后，使用unzip -d jstorm-2.2.1.zip /opt/jstorm-2.2.1 解压缩.<br>2、添加环境变量JSTORM_HOME=/opt/jstorm-2.2.1, PATH=$PATH:$JSTORM_HOME/bin<br>3、修改$JSTORM_HOME/conf/storm.yaml，内容如下<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########## These MUST be filled in for a storm configuration</span></span></span><br><span class="line"> storm.zookeeper.servers:</span><br><span class="line">     - "localhost"</span><br><span class="line"></span><br><span class="line"> storm.zookeeper.root: "/jstorm"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cluster.name: <span class="string">"default"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"> #</span><span class="bash">nimbus.host/nimbus.host.start.supervisor is being used by <span class="variable">$JSTORM_HOME</span>/bin/start.sh</span></span><br><span class="line"><span class="meta"> #</span><span class="bash">it only support IP, please don<span class="string">'t set hostname</span></span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> For example</span></span><br><span class="line"><span class="meta"> #</span><span class="bash"> nimbus.host: <span class="string">"10.132.168.10, 10.132.168.45"</span></span></span><br><span class="line"><span class="meta"> #</span><span class="bash">nimbus.host.start.supervisor: <span class="literal">false</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> %JSTORM_HOME% is the jstorm home directory</span></span><br><span class="line"> storm.local.dir: "/opt/jstorm-2.2.1/data"</span><br><span class="line"><span class="meta"> #</span><span class="bash"> please <span class="built_in">set</span> absolute path, default path is JSTORM_HOME/logs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> jstorm.log.dir: <span class="string">"absolute path"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> java.library.path: <span class="string">"/usr/local/lib:/opt/local/lib:/usr/lib"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> supervisor.slots.ports is null, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the port list will be generated by cpu cores and system memory size </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> example, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> there are cpu_num = system_physical_cpu_num/supervisor.slots.port.cpu.weight</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> there are mem_num = system_physical_memory_size/(worker.memory.size * supervisor.slots.port.mem.weight) </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The final port number is min(cpu_num, mem_num)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> supervisor.slots.ports.base: 6800</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> supervisor.slots.port.cpu.weight: 1.2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> supervisor.slots.port.mem.weight: 0.7</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> supervisor.slots.ports: null</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> supervisor.slots.ports:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    - 6800</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    - 6801</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    - 6802</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    - 6803</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default <span class="built_in">disable</span> user-define classloader</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If there are jar conflict between jstorm and application, </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> please <span class="built_in">enable</span> it </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> topology.enable.classloader: <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> supervisor use cgroup to make resource isolation</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Before <span class="built_in">enable</span> it, you should make sure:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">       1. Linux version (&gt;= 2.6.18)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">       2. Have installed cgroup (check the file<span class="string">'s existence:/proc/cgroups)</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">       3. You should start your supervisor on root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can get more about cgroup:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   http://t.cn/8s7nexU</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> supervisor.enable.cgroup: <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Netty will send multiple messages in one batch  </span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Setting true will improve throughput, but more latency</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> storm.messaging.netty.transfer.async.batch: <span class="literal">true</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## default worker memory size, unit is byte</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> worker.memory.size: 2147483648</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Metrics Monitor</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> topology.performance.metrics: it is the switch flag <span class="keyword">for</span> performance </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> purpose. When it is disabled, the data of timer and histogram metrics </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> will not be collected.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> topology.alimonitor.metrics.post: If it is <span class="built_in">disable</span>, metrics data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> will only be printed to <span class="built_in">log</span>. If it is enabled, the metrics data will be</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> posted to alimonitor besides printing to <span class="built_in">log</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> topology.performance.metrics: <span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> topology.alimonitor.metrics.post: <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> UI MultiCluster</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Following is an example of multicluster UI configuration</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ui.clusters:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         name: <span class="string">"jstorm"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         zkRoot: <span class="string">"/jstorm"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         zkServers:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">             [ <span class="string">"localhost"</span>],</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         zkPort: 2181,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">       &#125;</span></span><br></pre></td></tr></table></figure></p><p>主要是修改storm.local.dir，其他因为是单机部署，所以不需要修改即可。</p><p>4、启动zookeeper服务<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动nimbus服务</span></span><br><span class="line">[root@server02 bin]# <span class="variable">$nohup</span> <span class="variable">$JSTORM_HOME</span>/bin/jstorm nimbus &gt;/dev/<span class="literal">null</span> 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="comment">#启动supervisor服务</span></span><br><span class="line">[root@server02 bin]# <span class="variable">$nohup</span> <span class="variable">$JSTORM_HOME</span>/bin/jstorm supervisor &gt;/dev/<span class="literal">null</span> 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p><p>至此，jstorm已经启动完成。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="bolt连接zookeeper超时"><a href="#bolt连接zookeeper超时" class="headerlink" title="bolt连接zookeeper超时"></a>bolt连接zookeeper超时</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2017-06-13 09:37:05,582 WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181] server.NIOServerCnxn: caught end of stream exception</span><br><span class="line">EndOfStreamException: Unable <span class="keyword">to</span> read additional data <span class="keyword">from</span><span class="built_in"> client </span>sessionid 0x15c8aeb3371001d, likely<span class="built_in"> client </span>has closed socket</span><br><span class="line">        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228)</span><br><span class="line">        at org.apache.zookeeper.server.NIOServerCnxnFactory.<span class="builtin-name">run</span>(NIOServerCnxnFactory.java:208)</span><br><span class="line">        at java.lang.Thread.<span class="builtin-name">run</span>(Thread.java:745)</span><br><span class="line">2017-06-13 09:37:05,582 <span class="builtin-name">INFO</span>  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181] server.NIOServerCnxn: Closed socket<span class="built_in"> connection </span><span class="keyword">for</span><span class="built_in"> client </span>/192.168.1.186:25387 which had sessionid 0x15c8aeb3371001d</span><br></pre></td></tr></table></figure><p>经过查找，发现问题出现在zookeeper的host记录没有在jstorm服务器/etc/hosts中添加导致。<br>最终在jstorm服务器/etc/hosts 添加hbase的zookeeper主机名ip的映射后解决。</p><h2 id="工程代码下载"><a href="#工程代码下载" class="headerlink" title="工程代码下载"></a>工程代码下载</h2><p><a href="https://github.com/lehoon/analyze" target="_blank" rel="noopener">github地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jstorm集成hbase过程中问题记录。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="hbase" scheme="http://blog.lehoon.cn/tags/hbase/"/>
    
      <category term="jstorm" scheme="http://blog.lehoon.cn/tags/jstorm/"/>
    
      <category term="issue" scheme="http://blog.lehoon.cn/tags/issue/"/>
    
  </entry>
  
  <entry>
    <title>jps出现process information unavailable解决办法</title>
    <link href="http://blog.lehoon.cn/orther/2017/06/09/jps-process-information-unavailable.html"/>
    <id>http://blog.lehoon.cn/orther/2017/06/09/jps-process-information-unavailable.html</id>
    <published>2017-06-09T02:10:43.000Z</published>
    <updated>2018-09-22T13:30:44.533Z</updated>
    
    <content type="html"><![CDATA[<p>使用jps命令查看java进程，经常出现类似”16699 –process information unavailable”。产生这个问题有两种情况，第一种：16699这个进程不属于该用户，没有查看权限；第二种：16699进程已经kill掉了，但是结束的不正确，还有残留痕迹。<br><a id="more"></a></p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>使用jps查看当前的java进程，出现procss information unavailable<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@DBServer bin]# jps</span><br><span class="line"><span class="number">12865</span> Jps</span><br><span class="line"><span class="number">16699</span> -- process information unavailable</span><br><span class="line"><span class="number">12667</span> NimbusServer</span><br><span class="line"><span class="number">26331</span> QuorumPeerMain</span><br><span class="line"><span class="number">27790</span> Supervisor</span><br></pre></td></tr></table></figure></p><p>经常出现的应该是第二种情况，就是进程异常退出（通过kill 结束，还有程序驻留的残留）。<br>这里主要解决第二种情况。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在/tmp目录下找到hsperdata_前缀的目录，查找对应出现process infomation unavailable的进程pid， 找到对应的文件，删除掉即可。<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@DBServer bin]<span class="comment"># jps</span></span><br><span class="line">12865 Jps</span><br><span class="line">16699 -- process information unavailable</span><br><span class="line">12667 NimbusServer</span><br><span class="line">26331 QuorumPeerMain</span><br><span class="line">27790 Supervisor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@DBServer tmp]<span class="comment"># ll</span></span><br><span class="line">total 13712</span><br><span class="line">drwxr-xr-x <span class="number"> 3 </span>root   root       <span class="number"> 4096 </span>Jun <span class="number"> 2 </span>15:21 37c71559-e634-4fbf-82ec-1f33ae5e949a</span><br><span class="line">drwxr-xr-x <span class="number"> 4 </span>root   root       <span class="number"> 4096 </span>Jun <span class="number"> 2 </span>15:21 a40cec43-0618-485e-99a3-d389116367c3</span><br><span class="line">drwxr-xr-x <span class="number"> 4 </span>root   root       <span class="number"> 4096 </span>Jun <span class="number"> 2 </span>15:21 f9a83090-032c-443d-9ee4-c88b60ac2cd1</span><br><span class="line">srwxr-xr-x.<span class="number"> 1 </span>root   root          <span class="number"> 0 </span>Jun<span class="number"> 30 </span><span class="number"> 2016 </span>gamma</span><br><span class="line">srwxr-xr-x.<span class="number"> 1 </span>root   root          <span class="number"> 0 </span>Feb<span class="number"> 24 </span><span class="number"> 2016 </span>gnome-system-monitor.root.3066537162</span><br><span class="line">drwxr----- <span class="number"> 2 </span>oracle oinstall   <span class="number"> 4096 </span>Jun <span class="number"> 8 </span>11:45 hsperfdata_oracle</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root   root       <span class="number"> 4096 </span>Jun <span class="number"> 9 </span>10:02 hsperfdata_root</span><br><span class="line">-rw-r--r-- <span class="number"> 1 </span>root   root    <span class="number"> 4666338 </span>Jun <span class="number"> 2 </span>14:33 librocksdbjni3784873004521369627..so</span><br><span class="line">-rw-r--r-- <span class="number"> 1 </span>root   root    <span class="number"> 4666338 </span>Jun <span class="number"> 2 </span>15:10 librocksdbjni7032512820676696127..so</span><br><span class="line">-rw-r--r-- <span class="number"> 1 </span>root   root    <span class="number"> 4666338 </span>Jun <span class="number"> 7 </span>16:46 librocksdbjni8178522767522874847..so</span><br><span class="line">drwx------ <span class="number"> 2 </span>gdm    gdm        <span class="number"> 4096 </span>Jun <span class="number"> 6 </span>10:02 orbit-gdm</span><br><span class="line">drwx------.<span class="number"> 2 </span>gdm    gdm        <span class="number"> 4096 </span>Jun <span class="number"> 6 </span>10:01 pulse-NMadY3Qi6SAA</span><br><span class="line">srwx------.<span class="number"> 1 </span>root   root          <span class="number"> 0 </span>Jun<span class="number"> 28 </span><span class="number"> 2016 </span>supervisor.sock</span><br><span class="line">drwxr-xr-x <span class="number"> 3 </span>root   root       <span class="number"> 4096 </span>Jun <span class="number"> 2 </span>15:06 zookeeper</span><br><span class="line">[root@DBServer tmp]<span class="comment"># cd hsperfdata_root</span></span><br><span class="line">[root@DBServer hsperfdata_root]<span class="comment"># ll</span></span><br><span class="line">total 64</span><br><span class="line">-rw-------<span class="number"> 1 </span>root root<span class="number"> 32768 </span>Jun <span class="number"> 9 </span>10:03 16699</span><br><span class="line">-rw-------<span class="number"> 1 </span>root root<span class="number"> 32768 </span>Jun <span class="number"> 9 </span>10:02 27790</span><br><span class="line">[root@DBServer hsperfdata_root]<span class="comment"># rm -rf 16699</span></span><br><span class="line">[root@DBServer hsperfdata_root]<span class="comment"># ll</span></span><br><span class="line">total 32</span><br><span class="line">-rw-------<span class="number"> 1 </span>root root<span class="number"> 32768 </span>Jun <span class="number"> 9 </span>10:02 27790</span><br></pre></td></tr></table></figure></p><p>删除后，再通过jps查看，就会发现出现process infomation unavailable的进程号不在了。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@DBServer bin]# jps</span><br><span class="line"><span class="number">12590</span> Jps</span><br><span class="line"><span class="number">12667</span> NimbusServer</span><br><span class="line"><span class="number">26331</span> QuorumPeerMain</span><br><span class="line"><span class="number">27790</span> Supervisor</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用jps命令查看java进程，经常出现类似”16699 –process information unavailable”。产生这个问题有两种情况，第一种：16699这个进程不属于该用户，没有查看权限；第二种：16699进程已经kill掉了，但是结束的不正确，还有残留痕迹。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="jps" scheme="http://blog.lehoon.cn/tags/jps/"/>
    
      <category term="unavailable" scheme="http://blog.lehoon.cn/tags/unavailable/"/>
    
  </entry>
  
  <entry>
    <title>Linux中find的用法</title>
    <link href="http://blog.lehoon.cn/orther/2017/05/31/linux-find-command-examples.html"/>
    <id>http://blog.lehoon.cn/orther/2017/05/31/linux-find-command-examples.html</id>
    <published>2017-05-31T02:50:46.000Z</published>
    <updated>2018-09-22T13:30:51.365Z</updated>
    
    <content type="html"><![CDATA[<p>Linux系统中的 find 命令在查找文件时非常有用而且方便。它可以根据不同的条件来查找文件，例如权限、拥有者、修改日期/时间、文件大小等等。<br><a id="more"></a></p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="string">[-H]</span> <span class="string">[-L]</span> <span class="string">[-P]</span> <span class="string">[-D debugopts]</span> <span class="string">[-Olevel]</span> <span class="string">[path...]</span> <span class="string">[expression]</span></span><br></pre></td></tr></table></figure><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><p><strong>1、列出当前目录及子目录下的所有文件</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$find</span> .</span><br><span class="line">.</span><br><span class="line">./abc.txt</span><br><span class="line">./subdir</span><br><span class="line">./subdir/how.php</span><br><span class="line">./cool.php</span><br></pre></td></tr></table></figure></p><p>该命令和下面是一样的<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">find .</span></span><br><span class="line"><span class="meta">$</span><span class="bash">find . -<span class="built_in">print</span></span></span><br></pre></td></tr></table></figure></p><p><strong>2、指定路径查找</strong><br>通过指定绝对路径参数实现在指定的路径下查找匹配的文件<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$find <span class="string">./webserver</span></span><br><span class="line"><span class="string">./webserver</span></span><br><span class="line"><span class="string">./webserver/nginx</span></span><br><span class="line"><span class="string">./webserver/nginx/conf</span></span><br><span class="line"><span class="string">./webserver/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="string">./webserver/bin</span></span><br><span class="line"><span class="string">./webserver/bin/nginx</span></span><br></pre></td></tr></table></figure></p><p>查询指定路径下的指定文件<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$find ./webserver -name <span class="string">"nginx"</span></span><br><span class="line">.<span class="meta-keyword">/webserver/</span>nginx<span class="meta-keyword">/bin/</span>nginx</span><br></pre></td></tr></table></figure></p><p>通配符查询<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$find ./webserver -name <span class="string">"*.go"</span></span><br><span class="line">.<span class="meta-keyword">/webserver/</span>gateway<span class="meta-keyword">/src/</span>middleware/route.go</span><br><span class="line">.<span class="meta-keyword">/webserver/</span>gateway<span class="meta-keyword">/src/</span>middleware/route_map.go</span><br></pre></td></tr></table></figure></p><p>由于在linux上区分大小写，所以在查询的时候可以指定参数来忽略大小写<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$find <span class="string">./webserver</span> -iname <span class="string">"*.erl"</span></span><br><span class="line"><span class="string">./webserver/pushsvr/pushsvr.erl</span></span><br><span class="line"><span class="string">./webserver/pushsvr/Message.erl</span></span><br></pre></td></tr></table></figure></p><p>模式字符串要用双引号或者单引号包围，否则可能会产生不正确的结果。</p><p><strong>3、限制查询目录的深度</strong><br>find命令默认会递归查询整个目录树，当目录树很大的时候，会非常耗时。通过指定目录查询深度参数，实现查询指定目录深度的查询结果。<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$find <span class="string">./webserver</span> -maxdepth 2 -name <span class="string">"*.adb"</span></span><br><span class="line"><span class="string">./webserver/controller/flycontrole.adb</span></span><br></pre></td></tr></table></figure></p><p>与maxdepth选项相似，还有一个参数mindepth，通过指定mindepth参数，至少到达参数指定的目录层次后才开始查找文件。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">find -mindepth 3 -<span class="built_in">type</span> f -name <span class="string">"*.cpp"</span></span></span><br></pre></td></tr></table></figure></p><p><strong>4、反向匹配查找</strong><br>在日常工作中经常也会有查询不满足条件的一些文件，这时候就需要使用反向匹配查找选项来实现我们的目的。<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$find <span class="string">./webserver</span> -not -name <span class="string">"*.asm"</span></span><br><span class="line"><span class="string">./webserver</span></span><br><span class="line"><span class="string">./webserver/gateway</span></span><br><span class="line"><span class="string">./webserver/gateway/src/middleware/route.go</span></span><br><span class="line"><span class="string">./webserver/controller</span></span><br><span class="line"><span class="string">./webserver/controller/flycontroller.adb</span></span><br></pre></td></tr></table></figure></p><p>查询指定目录下所有的非php文件，</p><p>这里也可以使用！感叹号来代替 -not ，比如：<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$find <span class="string">./webserver</span> ! -name <span class="string">"*.asm"</span></span><br><span class="line"><span class="string">./webserver</span></span><br><span class="line"><span class="string">./webserver/gateway</span></span><br><span class="line"><span class="string">./webserver/gateway/src/middleware/route.go</span></span><br><span class="line"><span class="string">./webserver/controller</span></span><br><span class="line"><span class="string">./webserver/controller/flycontroller.adb</span></span><br></pre></td></tr></table></figure></p><p><strong>5、多条件查询</strong><br>可以通过组合多个条件查询来实现更精确的查询。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find /webserver -name <span class="string">"*controller"</span> ! -name <span class="string">"host-controller"</span></span><br><span class="line"><span class="regexp">/webserver/</span>jboss7<span class="number">-2103</span><span class="regexp">/modules/</span>org<span class="regexp">/jboss/</span><span class="keyword">as</span>/process-controller</span><br><span class="line"><span class="regexp">/webserver/</span>jboss7<span class="number">-2103</span><span class="regexp">/modules/</span>org<span class="regexp">/jboss/</span><span class="keyword">as</span>/controller</span><br></pre></td></tr></table></figure></p><p>查找名称中包含controller，并且排除host-controoler文件。</p><p><strong>OR操作符</strong><br>当使用多个条件查询时，find命令会将他们通过and操作符结合起来，必须满足所有的条件才会列出。当我们需要进行基于or运算的查找时，可以加上-o开关。<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$find <span class="string">/webserver</span> -name <span class="string">"*.php"</span> -o name <span class="string">"*.txt"</span></span><br><span class="line"><span class="string">/webserver/abc.txt</span></span><br><span class="line"><span class="string">/webserver/gateway/router.php</span></span><br></pre></td></tr></table></figure></p><p>查找文件扩展名为txt或php的文件。</p><p><strong>6、指定文件类型</strong><br>当需要指定查询目录或者文件的时候，可以通过-type 参数实现，选项为f（文件）、d（目录）。 不指定该参数的时候，默认查询目录和文件。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查询目录、文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash">find . -name <span class="string">"abc*"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">只查询文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash">find . -<span class="built_in">type</span> f -name <span class="string">"abc*"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">只查询目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash">find . -<span class="built_in">type</span> d -name <span class="string">"abc*"</span></span></span><br></pre></td></tr></table></figure></p><p><strong>7、多目录查找</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux系统中的 find 命令在查找文件时非常有用而且方便。它可以根据不同的条件来查找文件，例如权限、拥有者、修改日期/时间、文件大小等等。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="linux" scheme="http://blog.lehoon.cn/tags/linux/"/>
    
      <category term="find" scheme="http://blog.lehoon.cn/tags/find/"/>
    
      <category term="shell" scheme="http://blog.lehoon.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>VS运行库区别</title>
    <link href="http://blog.lehoon.cn/orther/2017/05/27/vs-compilemode-difference.html"/>
    <id>http://blog.lehoon.cn/orther/2017/05/27/vs-compilemode-difference.html</id>
    <published>2017-05-27T09:18:20.000Z</published>
    <updated>2018-09-22T13:31:21.231Z</updated>
    
    <content type="html"><![CDATA[<p>VS编译选项MD(d)、MT(d)编译选项的区别.<br><a id="more"></a></p><h2 id="设置位置："><a href="#设置位置：" class="headerlink" title="设置位置："></a>设置位置：</h2><p>属性-&gt;C/C++-&gt;代码生成-&gt;运行库</p><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p><img src="http://static.lehoon.cn/image/vs/vsrtlib.png"></p><p>/MD 表示运行时库不集成，生成的文件小;<br>/MT 表示运行时库集成，生成的文件大；</p><h2 id="如何选择"><a href="#如何选择" class="headerlink" title="如何选择"></a>如何选择</h2><p>选/MD的理由：文件小，使用的是同一个堆，不存在A申请、B释放的问题；<br>选/MT的理由：文件大，移植性好，减少依赖；</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VS编译选项MD(d)、MT(d)编译选项的区别.&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://blog.lehoon.cn/categories/orther/"/>
    
    
      <category term="vs" scheme="http://blog.lehoon.cn/tags/vs/"/>
    
      <category term="运行库" scheme="http://blog.lehoon.cn/tags/%E8%BF%90%E8%A1%8C%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>缓存击穿、失效及热点key问题</title>
    <link href="http://blog.lehoon.cn/backend/2017/05/19/cache-invalid-problem.html"/>
    <id>http://blog.lehoon.cn/backend/2017/05/19/cache-invalid-problem.html</id>
    <published>2017-05-19T03:11:41.000Z</published>
    <updated>2018-09-22T13:30:23.864Z</updated>
    
    <content type="html"><![CDATA[<p>分布式缓存是网站服务端经常用到的一种技术，在读多写少的业务场景中，通过使用缓存可以有效地支撑高并发的访问量，对后端的数据库等数据源做到很好地保护。现在市面上有很多分布式缓存，比如Redis、Memcached以及阿里的Tair等，不管我们使用的哪种缓存产品，基本上都会遇到缓存击穿、缓存失效以及热点key的问题。如何有效地防止这些问题，也是我们在享受缓存带来的红利地同时，必须要解决地难题。</p><a id="more"></a><p>通常我们在使用缓存时候都是先检查缓存中是否存在，如果存在直接返回缓存内容，如果不存在就直接查询数据库然后再缓存查询结果返回，例如下图所示，<br><img src="http://o9m6mjdbx.bkt.clouddn.com/image/cache/616903-4f6c97a3c449734b.png"></p><h2 id="缓存击穿："><a href="#缓存击穿：" class="headerlink" title="缓存击穿："></a>缓存击穿：</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>查询一个数据库中不存在的数据，比如商品详情，查询一个不存在的ID，每次都会访问DB，如果有人恶意破坏，很可能直接对DB造成过大地压力。</p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>当通过某一个key去查询数据的时候，如果对应在数据库中的数据都不存在，我们将此key对应的value设置为一个默认的值，比如“NULL”，并设置一个缓存的失效时间，这时在缓存失效之前，所有通过此key的访问都被缓存挡住了。后面如果此key对应的数据在DB中存在时，缓存失效之后，通过此key再去访问数据，就能拿到新的value了。</p><h2 id="缓存失效："><a href="#缓存失效：" class="headerlink" title="缓存失效："></a>缓存失效：</h2><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>在高并发的环境下，如果此时key对应的缓存失效，此时有多个进程就会去同时去查询DB，然后再去同时设置缓存。这个时候如果这个key是系统中的热点key或者同时失效的数量比较多时，DB访问量会瞬间增大，造成过大的压力。</p><h3 id="解决方案：-1"><a href="#解决方案：-1" class="headerlink" title="解决方案："></a>解决方案：</h3><p>将系统中key的缓存失效时间均匀地错开，防止统一时间点有大量的key对应的缓存失效；<br>重新设计缓存的使用方式，当我们通过key去查询数据时，首先查询缓存，如果此时缓存中查询不到，就通过分布式锁进行加锁，取得锁的进程查DB并设置缓存，然后解锁；其他进程如果发现有锁就等待，然后等解锁后返回缓存数据或者再次查询DB。</p><h2 id="热点key："><a href="#热点key：" class="headerlink" title="热点key："></a>热点key：</h2><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>缓存中的某些Key(可能对应用与某个促销商品)对应的value存储在集群中一台机器，使得所有流量涌向同一机器，成为系统的瓶颈，该问题的挑战在于它无法通过增加机器容量来解决。</p><h3 id="解决方案：-2"><a href="#解决方案：-2" class="headerlink" title="解决方案："></a>解决方案：</h3><p>客户端热点key缓存：将热点key对应value并缓存在客户端本地，并且设置一个失效时间。对于每次读请求，将首先检查key是否存在于本地缓存中，如果存在则直接返回，如果不存在再去访问分布式缓存的机器。<br>将热点key分散为多个子key，然后存储到缓存集群的不同机器上，这些子key对应的value都和热点key是一样的。当通过热点key去查询数据时，通过某种hash算法随机选择一个子key，然后再去访问缓存机器，将热点分散到了多个子key上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分布式缓存是网站服务端经常用到的一种技术，在读多写少的业务场景中，通过使用缓存可以有效地支撑高并发的访问量，对后端的数据库等数据源做到很好地保护。现在市面上有很多分布式缓存，比如Redis、Memcached以及阿里的Tair等，不管我们使用的哪种缓存产品，基本上都会遇到缓存击穿、缓存失效以及热点key的问题。如何有效地防止这些问题，也是我们在享受缓存带来的红利地同时，必须要解决地难题。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://blog.lehoon.cn/categories/backend/"/>
    
    
      <category term="redis" scheme="http://blog.lehoon.cn/tags/redis/"/>
    
      <category term="cache" scheme="http://blog.lehoon.cn/tags/cache/"/>
    
      <category term="memcache" scheme="http://blog.lehoon.cn/tags/memcache/"/>
    
  </entry>
  
</feed>
